{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/index.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport CustomButton from \"./custom\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { find } from \"../../../core/utils/array\";\nimport errors from \"../../widget/ui.errors\";\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\n\nfunction checkButtonInfo(buttonInfo) {\n  (() => {\n    if (!buttonInfo || \"object\" !== typeof buttonInfo || Array.isArray(buttonInfo)) {\n      throw errors.Error(\"E1053\");\n    }\n  })();\n\n  (() => {\n    if (!(\"name\" in buttonInfo)) {\n      throw errors.Error(\"E1054\");\n    }\n  })();\n\n  (() => {\n    var {\n      name: name\n    } = buttonInfo;\n\n    if (\"string\" !== typeof name) {\n      throw errors.Error(\"E1055\");\n    }\n  })();\n\n  (() => {\n    var {\n      location: location\n    } = buttonInfo;\n\n    if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\n      buttonInfo.location = \"after\";\n    }\n  })();\n}\n\nfunction checkNamesUniqueness(existingNames, newName) {\n  if (-1 !== existingNames.indexOf(newName)) {\n    throw errors.Error(\"E1055\", newName);\n  }\n\n  existingNames.push(newName);\n}\n\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\n  return !!find(predefinedButtonsInfo, info => info.name === name);\n}\n\nexport default class TextEditorButtonCollection {\n  constructor(editor, defaultButtonsInfo) {\n    this.buttons = [];\n    this.defaultButtonsInfo = defaultButtonsInfo;\n    this.editor = editor;\n  }\n\n  _compileButtonInfo(buttons) {\n    var names = [];\n    return buttons.map(button => {\n      var isStringButton = \"string\" === typeof button;\n\n      if (!isStringButton) {\n        checkButtonInfo(button);\n      }\n\n      var isDefaultButton = isStringButton || isPredefinedButtonName(button.name, this.defaultButtonsInfo);\n\n      if (isDefaultButton) {\n        var defaultButtonInfo = find(this.defaultButtonsInfo, _ref => {\n          var {\n            name: name\n          } = _ref;\n          return name === button || name === button.name;\n        });\n\n        if (!defaultButtonInfo) {\n          throw errors.Error(\"E1056\", this.editor.NAME, button);\n        }\n\n        checkNamesUniqueness(names, button);\n        return defaultButtonInfo;\n      } else {\n        var {\n          name: name\n        } = button;\n        checkNamesUniqueness(names, name);\n        return extend(button, {\n          Ctor: CustomButton\n        });\n      }\n    });\n  }\n\n  _createButton(buttonsInfo) {\n    var {\n      Ctor: Ctor,\n      options: options,\n      name: name\n    } = buttonsInfo;\n    var button = new Ctor(name, this.editor, options);\n    this.buttons.push(button);\n    return button;\n  }\n\n  _renderButtons(buttons, $container, targetLocation) {\n    var $buttonsContainer = null;\n    var buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\n    buttonsInfo.forEach(buttonsInfo => {\n      var {\n        location = \"after\"\n      } = buttonsInfo;\n\n      if (location === targetLocation) {\n        this._createButton(buttonsInfo).render((() => {\n          $buttonsContainer = $buttonsContainer || $(\"<div>\").addClass(TEXTEDITOR_BUTTONS_CONTAINER_CLASS);\n          \"before\" === targetLocation ? $container.prepend($buttonsContainer) : $container.append($buttonsContainer);\n          return $buttonsContainer;\n        })());\n      }\n    });\n    return $buttonsContainer;\n  }\n\n  clean() {\n    this.buttons.forEach(button => button.dispose());\n    this.buttons = [];\n  }\n\n  getButton(buttonName) {\n    var button = find(this.buttons, _ref2 => {\n      var {\n        name: name\n      } = _ref2;\n      return name === buttonName;\n    });\n    return button && button.instance;\n  }\n\n  renderAfterButtons(buttons, $container) {\n    return this._renderButtons(buttons, $container, \"after\");\n  }\n\n  renderBeforeButtons(buttons, $container) {\n    return this._renderButtons(buttons, $container, \"before\");\n  }\n\n  updateButtons(names) {\n    this.buttons.forEach(button => {\n      if (!names || -1 !== names.indexOf(button.name)) {\n        button.update();\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/text_box/texteditor_button_collection/index.js"],"names":["$","CustomButton","extend","find","errors","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","checkButtonInfo","buttonInfo","Array","isArray","Error","name","location","checkNamesUniqueness","existingNames","newName","indexOf","push","isPredefinedButtonName","predefinedButtonsInfo","info","TextEditorButtonCollection","constructor","editor","defaultButtonsInfo","buttons","_compileButtonInfo","names","map","button","isStringButton","isDefaultButton","defaultButtonInfo","_ref","NAME","Ctor","_createButton","buttonsInfo","options","_renderButtons","$container","targetLocation","$buttonsContainer","forEach","render","addClass","prepend","append","clean","dispose","getButton","buttonName","_ref2","instance","renderAfterButtons","renderBeforeButtons","updateButtons","update"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/index.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport CustomButton from \"./custom\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    find\r\n} from \"../../../core/utils/array\";\r\nimport errors from \"../../widget/ui.errors\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\n\r\nfunction checkButtonInfo(buttonInfo) {\r\n    (() => {\r\n        if (!buttonInfo || \"object\" !== typeof buttonInfo || Array.isArray(buttonInfo)) {\r\n            throw errors.Error(\"E1053\")\r\n        }\r\n    })();\r\n    (() => {\r\n        if (!(\"name\" in buttonInfo)) {\r\n            throw errors.Error(\"E1054\")\r\n        }\r\n    })();\r\n    (() => {\r\n        var {\r\n            name: name\r\n        } = buttonInfo;\r\n        if (\"string\" !== typeof name) {\r\n            throw errors.Error(\"E1055\")\r\n        }\r\n    })();\r\n    (() => {\r\n        var {\r\n            location: location\r\n        } = buttonInfo;\r\n        if (\"location\" in buttonInfo && \"after\" !== location && \"before\" !== location) {\r\n            buttonInfo.location = \"after\"\r\n        }\r\n    })()\r\n}\r\n\r\nfunction checkNamesUniqueness(existingNames, newName) {\r\n    if (-1 !== existingNames.indexOf(newName)) {\r\n        throw errors.Error(\"E1055\", newName)\r\n    }\r\n    existingNames.push(newName)\r\n}\r\n\r\nfunction isPredefinedButtonName(name, predefinedButtonsInfo) {\r\n    return !!find(predefinedButtonsInfo, info => info.name === name)\r\n}\r\nexport default class TextEditorButtonCollection {\r\n    constructor(editor, defaultButtonsInfo) {\r\n        this.buttons = [];\r\n        this.defaultButtonsInfo = defaultButtonsInfo;\r\n        this.editor = editor\r\n    }\r\n    _compileButtonInfo(buttons) {\r\n        var names = [];\r\n        return buttons.map(button => {\r\n            var isStringButton = \"string\" === typeof button;\r\n            if (!isStringButton) {\r\n                checkButtonInfo(button)\r\n            }\r\n            var isDefaultButton = isStringButton || isPredefinedButtonName(button.name, this.defaultButtonsInfo);\r\n            if (isDefaultButton) {\r\n                var defaultButtonInfo = find(this.defaultButtonsInfo, _ref => {\r\n                    var {\r\n                        name: name\r\n                    } = _ref;\r\n                    return name === button || name === button.name\r\n                });\r\n                if (!defaultButtonInfo) {\r\n                    throw errors.Error(\"E1056\", this.editor.NAME, button)\r\n                }\r\n                checkNamesUniqueness(names, button);\r\n                return defaultButtonInfo\r\n            } else {\r\n                var {\r\n                    name: name\r\n                } = button;\r\n                checkNamesUniqueness(names, name);\r\n                return extend(button, {\r\n                    Ctor: CustomButton\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _createButton(buttonsInfo) {\r\n        var {\r\n            Ctor: Ctor,\r\n            options: options,\r\n            name: name\r\n        } = buttonsInfo;\r\n        var button = new Ctor(name, this.editor, options);\r\n        this.buttons.push(button);\r\n        return button\r\n    }\r\n    _renderButtons(buttons, $container, targetLocation) {\r\n        var $buttonsContainer = null;\r\n        var buttonsInfo = buttons ? this._compileButtonInfo(buttons) : this.defaultButtonsInfo;\r\n        buttonsInfo.forEach(buttonsInfo => {\r\n            var {\r\n                location: location = \"after\"\r\n            } = buttonsInfo;\r\n            if (location === targetLocation) {\r\n                this._createButton(buttonsInfo).render((() => {\r\n                    $buttonsContainer = $buttonsContainer || $(\"<div>\").addClass(TEXTEDITOR_BUTTONS_CONTAINER_CLASS);\r\n                    \"before\" === targetLocation ? $container.prepend($buttonsContainer) : $container.append($buttonsContainer);\r\n                    return $buttonsContainer\r\n                })())\r\n            }\r\n        });\r\n        return $buttonsContainer\r\n    }\r\n    clean() {\r\n        this.buttons.forEach(button => button.dispose());\r\n        this.buttons = []\r\n    }\r\n    getButton(buttonName) {\r\n        var button = find(this.buttons, _ref2 => {\r\n            var {\r\n                name: name\r\n            } = _ref2;\r\n            return name === buttonName\r\n        });\r\n        return button && button.instance\r\n    }\r\n    renderAfterButtons(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"after\")\r\n    }\r\n    renderBeforeButtons(buttons, $container) {\r\n        return this._renderButtons(buttons, $container, \"before\")\r\n    }\r\n    updateButtons(names) {\r\n        this.buttons.forEach(button => {\r\n            if (!names || -1 !== names.indexOf(button.name)) {\r\n                button.update()\r\n            }\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}