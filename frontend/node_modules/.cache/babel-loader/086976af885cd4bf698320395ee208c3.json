{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test Repo\\\\frontend\\\\src\\\\components\\\\ListPortfolio.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardGroup, Form, FormControl, InputGroup, Row, Col, Button } from \"react-bootstrap\"; //import Coin from \"../Coin\";\n\nimport PortfolioDataService from \"./PortfolioDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport Portfolio from \"./Portfolio\";\nimport update from \"./CoinPortfolio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PortfolioList extends React.Component {\n  constructor(props) {\n    console.log('constructor');\n    super(props);\n    this.state = {\n      portfolio: [],\n      message: null\n    };\n    this.addAssetPortfolio = this.addAssetPortfolio.bind(this);\n    this.retrievePing = this.retrievePing.bind(this);\n    this.refreshPortfolio = this.refreshPortfolio.bind(this); //this.retrieveAsset = this.retrieveAsset.bind(this)\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate\");\n    console.log(nextProps);\n    console.log(nextState);\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.refreshPortfolio();\n    console.log(this.state);\n  }\n\n  refreshPortfolio() {\n    let username = AuthenticationService.getLoggedInUserName();\n    PortfolioDataService.retrieveAllPortfolio(username).then(response => {\n      //console.log(response)\n      this.setState({\n        todos: response.data\n      });\n    });\n    console.log(this.state);\n  }\n\n  retrievePing() {\n    let username = AuthenticationService.getLoggedInUserName();\n    PortfolioDataService.retrievePing(username).then(response => {\n      this.setState({\n        ping: response.data\n      });\n    });\n    console.log(this.state);\n  }\n\n  addAssetPortfolio() {\n    let username = AuthenticationService.getLoggedInUserName();\n    PortfolioDataService.addAssetPortfolio(username).then(response => {\n      this.setState({\n        message: `test`\n      });\n      this.retrievePing();\n    });\n    console.log(this.state);\n  } // retrieveAsset(data){\n  //     PortfolioDataService.retrieveAsset(data)\n  // }\n\n\n  render() {\n    console.log(\"Render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white\",\n      children: [\" Welcome to our portfolio application!\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Here you can create your own portfolio to manage and track.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '30rem'\n          },\n          className: \"border border-dark bg-dark text-white\",\n          children: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '30rem'\n          },\n          className: \"border border-dark bg-dark text-white\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Asset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(\"update\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: /*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Asset \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupQuantity\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"quantity\",\n              placeholder: \"Enter Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: this.addAssetPortfolio,\n            children: \"Add to portfolio!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '30rem'\n          },\n          className: \"border border-dark bg-dark text-white\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Asset \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.portfolio.map(asset => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: asset.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: asset.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: asset.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 33\n                }, this)]\n              }, asset.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Ping:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.retrievePing.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: this.retrievePing,\n            children: \"View Portfolio!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: this.refreshPortfolio,\n            children: \"View Portfolio!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default PortfolioList;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/src/components/ListPortfolio.js"],"names":["React","useEffect","useState","axios","Card","CardGroup","Form","FormControl","InputGroup","Row","Col","Button","PortfolioDataService","AuthenticationService","Portfolio","update","PortfolioList","Component","constructor","props","console","log","state","portfolio","message","addAssetPortfolio","bind","retrievePing","refreshPortfolio","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","componentDidMount","username","getLoggedInUserName","retrieveAllPortfolio","then","response","setState","todos","data","ping","render","width","map","asset","name","quantity","value","id","toString"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, CardGroup, Form, FormControl, InputGroup, Row, Col, Button } from \"react-bootstrap\";\r\n//import Coin from \"../Coin\";\r\nimport PortfolioDataService from \"./PortfolioDataService\";\r\nimport AuthenticationService from \"./AuthenticationService\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport update from \"./CoinPortfolio\";\r\n\r\nclass PortfolioList extends React.Component {\r\n\r\n    constructor(props){\r\n        console.log('constructor')\r\n        super(props)\r\n        this.state = {\r\n            portfolio : [],\r\n            message : null\r\n\r\n        }\r\n        this.addAssetPortfolio = this.addAssetPortfolio.bind(this)\r\n        this.retrievePing = this.retrievePing.bind(this)\r\n        this.refreshPortfolio = this.refreshPortfolio.bind(this)\r\n        //this.retrieveAsset = this.retrieveAsset.bind(this)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount\")\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate\")\r\n        console.log(nextProps)\r\n        console.log(nextState)\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n        this.refreshPortfolio()\r\n        console.log(this.state)\r\n    }\r\n\r\n    refreshPortfolio(){\r\n        let username = AuthenticationService.getLoggedInUserName();\r\n        PortfolioDataService.retrieveAllPortfolio(username)\r\n            .then(\r\n                response => {\r\n                    //console.log(response)\r\n                    this.setState({todos : response.data})\r\n                }\r\n            )\r\n        console.log(this.state)\r\n    }\r\n\r\n    retrievePing(){\r\n        let username = AuthenticationService.getLoggedInUserName();\r\n        PortfolioDataService.retrievePing(username)\r\n            .then(\r\n                response => {\r\n                    this.setState({ping : response.data})\r\n                }\r\n            )\r\n        console.log(this.state)\r\n    }\r\n\r\n    addAssetPortfolio(){\r\n        let username = AuthenticationService.getLoggedInUserName();\r\n        PortfolioDataService.addAssetPortfolio(username)\r\n            .then(\r\n                response => {\r\n                    this.setState({message : `test`})\r\n                    this.retrievePing()\r\n                }\r\n            )\r\n            \r\n        console.log(this.state)\r\n    }\r\n\r\n    // retrieveAsset(data){\r\n    //     PortfolioDataService.retrieveAsset(data)\r\n        \r\n    // }\r\n\r\n    render() {\r\n        console.log(\"Render\");\r\n\r\n        return <div className=\"text-white\"> Welcome to our portfolio application! \r\n        <div>Here you can create your own portfolio to manage and track.</div>\r\n        \r\n        \r\n        <CardGroup>\r\n            <Card style={{ width: '30rem' }} className=\"border border-dark bg-dark text-white\">\r\n                \r\n                <Portfolio/>\r\n\r\n            </Card>\r\n                \r\n            <Card style={{ width: '30rem' }} className=\"border border-dark bg-dark text-white\">\r\n            <Card.Header>\r\n                Asset\r\n            </Card.Header>\r\n\r\n            <Card>\r\n\r\n                <update/>                \r\n\r\n            </Card>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Asset </th>\r\n                        </tr>\r\n                </thead>\r\n            </table>\r\n            <Form.Group className=\"mb-3\" controlId=\"formGroupQuantity\">\r\n                <Form.Label>Quantity</Form.Label>\r\n\r\n             \r\n                <Form.Control type=\"quantity\" placeholder=\"Enter Quantity\" />\r\n            </Form.Group>\r\n                \r\n            <Card.Text>\r\n                    \r\n            </Card.Text>\r\n            <Button\r\n                className=\"btn btn-success\" onClick={this.addAssetPortfolio}>\r\n                Add to portfolio!\r\n            </Button>\r\n            </Card>\r\n\r\n            <Card style={{ width: '30rem' }} className=\"border border-dark bg-dark text-white\">\r\n            <Card.Header>\r\n                Portfolio\r\n            </Card.Header>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Asset </th>\r\n                        <th>Quantity </th>\r\n                        <th>Value </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.portfolio.map(\r\n                        asset => \r\n                            <tr key={asset.id}>\r\n                                <td>{asset.name}</td>\r\n                                <td>{asset.quantity}</td>\r\n                                <td>{asset.value}</td>\r\n                            </tr>\r\n                    )\r\n                }\r\n                </tbody>\r\n            </table>\r\n            <Card.Text>\r\n                Ping:\r\n                <div>\r\n                    {this.retrievePing.toString()}\r\n                </div>\r\n            </Card.Text>\r\n\r\n            <Button\r\n            className=\"btn btn-success\" onClick={this.retrievePing}>\r\n                View Portfolio!\r\n            </Button>\r\n\r\n            <Button\r\n            className=\"btn btn-success\" onClick={this.refreshPortfolio}>\r\n                View Portfolio!\r\n            </Button>\r\n        \r\n            </Card>\r\n        </CardGroup>\r\n        </div>     \r\n    };\r\n}\r\n\r\nexport default PortfolioList;"]},"metadata":{},"sourceType":"module"}