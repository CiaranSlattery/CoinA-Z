{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/overlay/overlay_drag.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { locate, move } from \"../../animation/translator\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { getOffset, getOuterWidth, getOuterHeight } from \"../../core/utils/size\";\nimport { fitIntoRange } from \"../../core/utils/math\";\nimport { isWindow } from \"../../core/utils/type\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { start as dragStartEvent, move as dragMoveEvent, end as dragEndEvent } from \"../../events/drag\";\nimport { addNamespace } from \"../../events/utils/index\";\nvar KEYBOARD_DRAG_STEP = 5;\n\nclass OverlayDrag {\n  constructor(config) {\n    this.init(config);\n  }\n\n  init(_ref) {\n    var {\n      dragEnabled: dragEnabled,\n      handle: handle,\n      draggableElement: draggableElement,\n      positionController: positionController\n    } = _ref;\n    this._positionController = positionController;\n    this._draggableElement = draggableElement;\n    this._handle = handle;\n    this._dragEnabled = dragEnabled;\n    this.unsubscribe();\n\n    if (!dragEnabled) {\n      return;\n    }\n\n    this.subscribe();\n  }\n\n  moveDown(e) {\n    this._moveTo(KEYBOARD_DRAG_STEP, 0, e);\n  }\n\n  moveUp(e) {\n    this._moveTo(-KEYBOARD_DRAG_STEP, 0, e);\n  }\n\n  moveLeft(e) {\n    this._moveTo(0, -KEYBOARD_DRAG_STEP, e);\n  }\n\n  moveRight(e) {\n    this._moveTo(0, KEYBOARD_DRAG_STEP, e);\n  }\n\n  subscribe() {\n    var eventNames = this._getEventNames();\n\n    eventsEngine.on(this._handle, eventNames.startEventName, e => {\n      this._dragStartHandler(e);\n    });\n    eventsEngine.on(this._handle, eventNames.updateEventName, e => {\n      this._dragUpdateHandler(e);\n    });\n    eventsEngine.on(this._handle, eventNames.endEventName, e => {\n      this._dragEndHandler(e);\n    });\n  }\n\n  unsubscribe() {\n    var eventNames = this._getEventNames();\n\n    eventsEngine.off(this._handle, eventNames.startEventName);\n    eventsEngine.off(this._handle, eventNames.updateEventName);\n    eventsEngine.off(this._handle, eventNames.endEventName);\n  }\n\n  _getEventNames() {\n    var startEventName = addNamespace(dragStartEvent, \"overlayDrag\");\n    var updateEventName = addNamespace(dragMoveEvent, \"overlayDrag\");\n    var endEventName = addNamespace(dragEndEvent, \"overlayDrag\");\n    return {\n      startEventName: startEventName,\n      updateEventName: updateEventName,\n      endEventName: endEventName\n    };\n  }\n\n  _dragStartHandler(e) {\n    var allowedOffsets = this._getAllowedOffsets();\n\n    this._prevOffset = {\n      x: 0,\n      y: 0\n    };\n    e.targetElements = [];\n    e.maxTopOffset = allowedOffsets.top;\n    e.maxBottomOffset = allowedOffsets.bottom;\n    e.maxLeftOffset = allowedOffsets.left;\n    e.maxRightOffset = allowedOffsets.right;\n  }\n\n  _dragUpdateHandler(e) {\n    var targetOffset = {\n      top: e.offset.y - this._prevOffset.y,\n      left: e.offset.x - this._prevOffset.x\n    };\n\n    this._moveByOffset(targetOffset);\n\n    this._prevOffset = e.offset;\n  }\n\n  _dragEndHandler(event) {\n    this._positionController.dragHandled();\n\n    this._positionController.detectVisualPositionChange(event);\n  }\n\n  _moveTo(top, left, e) {\n    if (!this._dragEnabled) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    var offset = this._fitOffsetIntoAllowedRange(top, left);\n\n    this._moveByOffset(offset);\n\n    this._dragEndHandler(e);\n  }\n\n  _fitOffsetIntoAllowedRange(top, left) {\n    var allowedOffsets = this._getAllowedOffsets();\n\n    return {\n      top: fitIntoRange(top, -allowedOffsets.top, allowedOffsets.bottom),\n      left: fitIntoRange(left, -allowedOffsets.left, allowedOffsets.right)\n    };\n  }\n\n  _getContainerDimensions() {\n    var document = domAdapter.getDocument();\n\n    var container = this._positionController.$dragResizeContainer.get(0);\n\n    var containerWidth = getOuterWidth(container);\n    var containerHeight = getOuterHeight(container);\n\n    if (isWindow(container)) {\n      containerHeight = Math.max(document.body.clientHeight, containerHeight);\n      containerWidth = Math.max(document.body.clientWidth, containerWidth);\n    }\n\n    return {\n      width: containerWidth,\n      height: containerHeight\n    };\n  }\n\n  _getContainerPosition() {\n    var container = this._positionController.$dragResizeContainer.get(0);\n\n    return isWindow(container) ? {\n      top: 0,\n      left: 0\n    } : getOffset(container);\n  }\n\n  _getElementPosition() {\n    return getOffset(this._draggableElement);\n  }\n\n  _getInnerDelta() {\n    var containerDimensions = this._getContainerDimensions();\n\n    var elementDimensions = this._getElementDimensions();\n\n    return {\n      x: containerDimensions.width - elementDimensions.width,\n      y: containerDimensions.height - elementDimensions.height\n    };\n  }\n\n  _getOuterDelta() {\n    var {\n      width: width,\n      height: height\n    } = this._getElementDimensions();\n\n    var outsideDragFactor = this._positionController.outsideDragFactor;\n    return {\n      x: width * outsideDragFactor,\n      y: height * outsideDragFactor\n    };\n  }\n\n  _getFullDelta() {\n    var fullDelta = this._getInnerDelta();\n\n    var outerDelta = this._getOuterDelta();\n\n    return {\n      x: fullDelta.x + outerDelta.x,\n      y: fullDelta.y + outerDelta.y\n    };\n  }\n\n  _getElementDimensions() {\n    return {\n      width: this._draggableElement.offsetWidth,\n      height: this._draggableElement.offsetHeight\n    };\n  }\n\n  _getAllowedOffsets() {\n    var fullDelta = this._getFullDelta();\n\n    var isDragAllowed = fullDelta.y >= 0 && fullDelta.x >= 0;\n\n    if (!isDragAllowed) {\n      return {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n    }\n\n    var elementPosition = this._getElementPosition();\n\n    var containerPosition = this._getContainerPosition();\n\n    var outerDelta = this._getOuterDelta();\n\n    return {\n      top: elementPosition.top - containerPosition.top + outerDelta.y,\n      bottom: -elementPosition.top + containerPosition.top + fullDelta.y,\n      left: elementPosition.left - containerPosition.left + outerDelta.x,\n      right: -elementPosition.left + containerPosition.left + fullDelta.x\n    };\n  }\n\n  _moveByOffset(offset) {\n    var currentPosition = locate(this._draggableElement);\n    var newPosition = {\n      left: currentPosition.left + offset.left,\n      top: currentPosition.top + offset.top\n    };\n    move(this._draggableElement, newPosition);\n  }\n\n}\n\nexport default OverlayDrag;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/overlay/overlay_drag.js"],"names":["locate","move","domAdapter","getOffset","getOuterWidth","getOuterHeight","fitIntoRange","isWindow","eventsEngine","start","dragStartEvent","dragMoveEvent","end","dragEndEvent","addNamespace","KEYBOARD_DRAG_STEP","OverlayDrag","constructor","config","init","_ref","dragEnabled","handle","draggableElement","positionController","_positionController","_draggableElement","_handle","_dragEnabled","unsubscribe","subscribe","moveDown","e","_moveTo","moveUp","moveLeft","moveRight","eventNames","_getEventNames","on","startEventName","_dragStartHandler","updateEventName","_dragUpdateHandler","endEventName","_dragEndHandler","off","allowedOffsets","_getAllowedOffsets","_prevOffset","x","y","targetElements","maxTopOffset","top","maxBottomOffset","bottom","maxLeftOffset","left","maxRightOffset","right","targetOffset","offset","_moveByOffset","event","dragHandled","detectVisualPositionChange","preventDefault","stopPropagation","_fitOffsetIntoAllowedRange","_getContainerDimensions","document","getDocument","container","$dragResizeContainer","get","containerWidth","containerHeight","Math","max","body","clientHeight","clientWidth","width","height","_getContainerPosition","_getElementPosition","_getInnerDelta","containerDimensions","elementDimensions","_getElementDimensions","_getOuterDelta","outsideDragFactor","_getFullDelta","fullDelta","outerDelta","offsetWidth","offsetHeight","isDragAllowed","elementPosition","containerPosition","currentPosition","newPosition"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/overlay/overlay_drag.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../animation/translator\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getOffset,\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    fitIntoRange\r\n} from \"../../core/utils/math\";\r\nimport {\r\n    isWindow\r\n} from \"../../core/utils/type\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    start as dragStartEvent,\r\n    move as dragMoveEvent,\r\n    end as dragEndEvent\r\n} from \"../../events/drag\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nvar KEYBOARD_DRAG_STEP = 5;\r\nclass OverlayDrag {\r\n    constructor(config) {\r\n        this.init(config)\r\n    }\r\n    init(_ref) {\r\n        var {\r\n            dragEnabled: dragEnabled,\r\n            handle: handle,\r\n            draggableElement: draggableElement,\r\n            positionController: positionController\r\n        } = _ref;\r\n        this._positionController = positionController;\r\n        this._draggableElement = draggableElement;\r\n        this._handle = handle;\r\n        this._dragEnabled = dragEnabled;\r\n        this.unsubscribe();\r\n        if (!dragEnabled) {\r\n            return\r\n        }\r\n        this.subscribe()\r\n    }\r\n    moveDown(e) {\r\n        this._moveTo(KEYBOARD_DRAG_STEP, 0, e)\r\n    }\r\n    moveUp(e) {\r\n        this._moveTo(-KEYBOARD_DRAG_STEP, 0, e)\r\n    }\r\n    moveLeft(e) {\r\n        this._moveTo(0, -KEYBOARD_DRAG_STEP, e)\r\n    }\r\n    moveRight(e) {\r\n        this._moveTo(0, KEYBOARD_DRAG_STEP, e)\r\n    }\r\n    subscribe() {\r\n        var eventNames = this._getEventNames();\r\n        eventsEngine.on(this._handle, eventNames.startEventName, e => {\r\n            this._dragStartHandler(e)\r\n        });\r\n        eventsEngine.on(this._handle, eventNames.updateEventName, e => {\r\n            this._dragUpdateHandler(e)\r\n        });\r\n        eventsEngine.on(this._handle, eventNames.endEventName, e => {\r\n            this._dragEndHandler(e)\r\n        })\r\n    }\r\n    unsubscribe() {\r\n        var eventNames = this._getEventNames();\r\n        eventsEngine.off(this._handle, eventNames.startEventName);\r\n        eventsEngine.off(this._handle, eventNames.updateEventName);\r\n        eventsEngine.off(this._handle, eventNames.endEventName)\r\n    }\r\n    _getEventNames() {\r\n        var startEventName = addNamespace(dragStartEvent, \"overlayDrag\");\r\n        var updateEventName = addNamespace(dragMoveEvent, \"overlayDrag\");\r\n        var endEventName = addNamespace(dragEndEvent, \"overlayDrag\");\r\n        return {\r\n            startEventName: startEventName,\r\n            updateEventName: updateEventName,\r\n            endEventName: endEventName\r\n        }\r\n    }\r\n    _dragStartHandler(e) {\r\n        var allowedOffsets = this._getAllowedOffsets();\r\n        this._prevOffset = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        e.targetElements = [];\r\n        e.maxTopOffset = allowedOffsets.top;\r\n        e.maxBottomOffset = allowedOffsets.bottom;\r\n        e.maxLeftOffset = allowedOffsets.left;\r\n        e.maxRightOffset = allowedOffsets.right\r\n    }\r\n    _dragUpdateHandler(e) {\r\n        var targetOffset = {\r\n            top: e.offset.y - this._prevOffset.y,\r\n            left: e.offset.x - this._prevOffset.x\r\n        };\r\n        this._moveByOffset(targetOffset);\r\n        this._prevOffset = e.offset\r\n    }\r\n    _dragEndHandler(event) {\r\n        this._positionController.dragHandled();\r\n        this._positionController.detectVisualPositionChange(event)\r\n    }\r\n    _moveTo(top, left, e) {\r\n        if (!this._dragEnabled) {\r\n            return\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var offset = this._fitOffsetIntoAllowedRange(top, left);\r\n        this._moveByOffset(offset);\r\n        this._dragEndHandler(e)\r\n    }\r\n    _fitOffsetIntoAllowedRange(top, left) {\r\n        var allowedOffsets = this._getAllowedOffsets();\r\n        return {\r\n            top: fitIntoRange(top, -allowedOffsets.top, allowedOffsets.bottom),\r\n            left: fitIntoRange(left, -allowedOffsets.left, allowedOffsets.right)\r\n        }\r\n    }\r\n    _getContainerDimensions() {\r\n        var document = domAdapter.getDocument();\r\n        var container = this._positionController.$dragResizeContainer.get(0);\r\n        var containerWidth = getOuterWidth(container);\r\n        var containerHeight = getOuterHeight(container);\r\n        if (isWindow(container)) {\r\n            containerHeight = Math.max(document.body.clientHeight, containerHeight);\r\n            containerWidth = Math.max(document.body.clientWidth, containerWidth)\r\n        }\r\n        return {\r\n            width: containerWidth,\r\n            height: containerHeight\r\n        }\r\n    }\r\n    _getContainerPosition() {\r\n        var container = this._positionController.$dragResizeContainer.get(0);\r\n        return isWindow(container) ? {\r\n            top: 0,\r\n            left: 0\r\n        } : getOffset(container)\r\n    }\r\n    _getElementPosition() {\r\n        return getOffset(this._draggableElement)\r\n    }\r\n    _getInnerDelta() {\r\n        var containerDimensions = this._getContainerDimensions();\r\n        var elementDimensions = this._getElementDimensions();\r\n        return {\r\n            x: containerDimensions.width - elementDimensions.width,\r\n            y: containerDimensions.height - elementDimensions.height\r\n        }\r\n    }\r\n    _getOuterDelta() {\r\n        var {\r\n            width: width,\r\n            height: height\r\n        } = this._getElementDimensions();\r\n        var outsideDragFactor = this._positionController.outsideDragFactor;\r\n        return {\r\n            x: width * outsideDragFactor,\r\n            y: height * outsideDragFactor\r\n        }\r\n    }\r\n    _getFullDelta() {\r\n        var fullDelta = this._getInnerDelta();\r\n        var outerDelta = this._getOuterDelta();\r\n        return {\r\n            x: fullDelta.x + outerDelta.x,\r\n            y: fullDelta.y + outerDelta.y\r\n        }\r\n    }\r\n    _getElementDimensions() {\r\n        return {\r\n            width: this._draggableElement.offsetWidth,\r\n            height: this._draggableElement.offsetHeight\r\n        }\r\n    }\r\n    _getAllowedOffsets() {\r\n        var fullDelta = this._getFullDelta();\r\n        var isDragAllowed = fullDelta.y >= 0 && fullDelta.x >= 0;\r\n        if (!isDragAllowed) {\r\n            return {\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0\r\n            }\r\n        }\r\n        var elementPosition = this._getElementPosition();\r\n        var containerPosition = this._getContainerPosition();\r\n        var outerDelta = this._getOuterDelta();\r\n        return {\r\n            top: elementPosition.top - containerPosition.top + outerDelta.y,\r\n            bottom: -elementPosition.top + containerPosition.top + fullDelta.y,\r\n            left: elementPosition.left - containerPosition.left + outerDelta.x,\r\n            right: -elementPosition.left + containerPosition.left + fullDelta.x\r\n        }\r\n    }\r\n    _moveByOffset(offset) {\r\n        var currentPosition = locate(this._draggableElement);\r\n        var newPosition = {\r\n            left: currentPosition.left + offset.left,\r\n            top: currentPosition.top + offset.top\r\n        };\r\n        move(this._draggableElement, newPosition)\r\n    }\r\n}\r\nexport default OverlayDrag;\r\n"]},"metadata":{},"sourceType":"module"}