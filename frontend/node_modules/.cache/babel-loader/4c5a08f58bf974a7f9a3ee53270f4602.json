{"ast":null,"code":"import _classCallCheck from\"C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import axios from'axios';import{API_URL}from\"../Constants\";export var USER_NAME_SESSION_ATTRIBUTE_NAME='authenticatedUser';var AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"executeBasicAuthenticationService\",value:function executeBasicAuthenticationService(username,password){return axios.get(\"\".concat(API_URL,\"/basicauth\"),{headers:{authorization:this.createBasicAuthToken(username,password)}});}},{key:\"executeJwtAuthenticationService\",value:function executeJwtAuthenticationService(username,password){return axios.post(\"\".concat(API_URL,\"/authenticate\"),{username:username,password:password});}},{key:\"createBasicAuthToken\",value:function createBasicAuthToken(username,password){return'Basic '+window.btoa(username+\":\"+password);}},{key:\"registeredSuccessfulLogin\",value:function registeredSuccessfulLogin(username,password){//let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password)\n//console.log('registerSuccessfulLogin');\nsessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,username);this.setupAxiosInterceptors(this.createBasicAuthToken(username,password));}},{key:\"registerSuccessfulLoginForJwt\",value:function registerSuccessfulLoginForJwt(username,token){sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,username);this.setupAxiosInterceptors(this.createJwtToken(token));}},{key:\"createJwtToken\",value:function createJwtToken(token){return'Bearer '+token;}},{key:\"logout\",value:function logout(){sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user===null)return false;return true;}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user===null)return'';return user;}},{key:\"setupAxiosInterceptors\",value:function setupAxiosInterceptors(token){var _this=this;axios.interceptors.request.use(function(config){if(_this.isUserLoggedIn()){config.headers.authorization=token;}return config;});}}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/src/components/AuthenticationService.js"],"names":["axios","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","AuthenticationService","username","password","get","headers","authorization","createBasicAuthToken","post","window","btoa","sessionStorage","setItem","setupAxiosInterceptors","token","createJwtToken","removeItem","user","getItem","interceptors","request","use","config","isUserLoggedIn"],"mappings":"8RAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,cAAtB,CAEA,MAAO,IAAMC,CAAAA,gCAAgC,CAAG,mBAAzC,C,GAEDC,CAAAA,qB,0LACF,2CAAkCC,QAAlC,CAA4CC,QAA5C,CAAqD,CACjD,MAAOL,CAAAA,KAAK,CAACM,GAAN,WAAaL,OAAb,eACH,CAACM,OAAO,CAAE,CAACC,aAAa,CAAE,KAAKC,oBAAL,CAA0BL,QAA1B,CAAoCC,QAApC,CAAhB,CAAV,CADG,CAAP,CAEH,C,+CAED,yCAAgCD,QAAhC,CAA0CC,QAA1C,CAAmD,CAC/C,MAAOL,CAAAA,KAAK,CAACU,IAAN,WAAcT,OAAd,kBAAsC,CACzCG,QAAQ,CAARA,QADyC,CAEzCC,QAAQ,CAARA,QAFyC,CAAtC,CAAP,CAIH,C,oCAED,8BAAqBD,QAArB,CAA+BC,QAA/B,CAAwC,CACpC,MAAO,SAAWM,MAAM,CAACC,IAAP,CAAYR,QAAQ,CAAG,GAAX,CAAiBC,QAA7B,CAAlB,CACH,C,yCAED,mCAA0BD,QAA1B,CAAmCC,QAAnC,CAA4C,CACxC;AACA;AACAQ,cAAc,CAACC,OAAf,CAAuBZ,gCAAvB,CAAyDE,QAAzD,EACA,KAAKW,sBAAL,CAA4B,KAAKN,oBAAL,CAA0BL,QAA1B,CAAoCC,QAApC,CAA5B,EACH,C,6CAED,uCAA8BD,QAA9B,CAAuCY,KAAvC,CAA6C,CACzCH,cAAc,CAACC,OAAf,CAAuBZ,gCAAvB,CAAyDE,QAAzD,EACA,KAAKW,sBAAL,CAA4B,KAAKE,cAAL,CAAoBD,KAApB,CAA5B,EACH,C,8BAED,wBAAeA,KAAf,CAAqB,CACjB,MAAO,UAAYA,KAAnB,CACH,C,sBAED,iBAAS,CACLH,cAAc,CAACK,UAAf,CAA0BhB,gCAA1B,EACH,C,8BAED,yBAAgB,CACZ,GAAIiB,CAAAA,IAAI,CAAGN,cAAc,CAACO,OAAf,CAAuBlB,gCAAvB,CAAX,CACA,GAAGiB,IAAI,GAAG,IAAV,CAAgB,MAAO,MAAP,CAChB,MAAO,KAAP,CACH,C,mCAED,8BAAsB,CAClB,GAAIA,CAAAA,IAAI,CAAGN,cAAc,CAACO,OAAf,CAAuBlB,gCAAvB,CAAX,CACA,GAAGiB,IAAI,GAAG,IAAV,CAAgB,MAAO,EAAP,CAChB,MAAOA,CAAAA,IAAP,CACH,C,sCAED,gCAAuBH,KAAvB,CAA6B,gBAEzBhB,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,SAACC,MAAD,CAAY,CACR,GAAG,KAAI,CAACC,cAAL,EAAH,CAA0B,CACtBD,MAAM,CAACjB,OAAP,CAAeC,aAAf,CAA+BQ,KAA/B,CACH,CACD,MAAOQ,CAAAA,MAAP,CACH,CANL,EAQH,C,qCAGL,cAAe,IAAIrB,CAAAA,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport {API_URL} from \"../Constants\";\r\n\r\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n\r\nclass AuthenticationService{\r\n    executeBasicAuthenticationService(username, password){\r\n        return axios.get(`${API_URL}/basicauth`,\r\n            {headers: {authorization: this.createBasicAuthToken(username, password)}})\r\n    }\r\n\r\n    executeJwtAuthenticationService(username, password){\r\n        return axios.post(`${API_URL}/authenticate`, {\r\n            username,\r\n            password\r\n            })\r\n    }\r\n\r\n    createBasicAuthToken(username, password){\r\n        return 'Basic ' + window.btoa(username + \":\" + password)\r\n    }\r\n\r\n    registeredSuccessfulLogin(username,password){\r\n        //let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password)\r\n        //console.log('registerSuccessfulLogin');\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\r\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(username,token){\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\r\n        this.setupAxiosInterceptors(this.createJwtToken(token))\r\n    }\r\n\r\n    createJwtToken(token){\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n        if(user===null) return false\r\n        return true\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n        if(user===null) return ''\r\n        return user\r\n    }\r\n\r\n    setupAxiosInterceptors(token){\r\n\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if(this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}