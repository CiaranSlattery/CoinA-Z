{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test\\\\frontend\\\\src\\\\components\\\\LoginComponent.js\";\nimport React from \"react\";\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'ciaran',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; // this.handlerUsernameChange = this.handlerUsernameChange.bind(this)\n    // this.handlerPasswordChange = this.handlerPasswordChange.bind(this)\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } // handlerUsernameChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState(\n  //         {\n  //             [event.target.name]\n  //                 :event.target.value\n  //         }\n  //     )\n  // }\n  // handlerPasswordChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState({password:event.target.value})\n  // }\n\n\n  loginClicked() {\n    // if (this.state.username === 'Ciaran' && this.state.password === 'dummy'){\n    //     AuthenticationService.registeredSuccessfulLogin(this.state.username,this.state.password);\n    //     this.props.history.push(`/welcome/${this.state.username}`)\n    //     // this.setState({showSuccessMessage:true})\n    //     // this.setState({hasLoginFailed:false})\n    //\n    // }\n    // else {\n    //     this.setState({showSuccessMessage:false})\n    //     this.setState({hasLoginFailed:true})\n    //\n    // }\n\n    /*AuthenticationService\r\n        .executeBasicAuthenticationService(this.state.username, this.state.password)\r\n        .then(() => {\r\n            AuthenticationService.registeredSuccessfulLogin(this.state.username, this.state.password);\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n        }).catch(() => {\r\n            this.setState({showSuccessMessage:false})\r\n            this.setState({hasLoginFailed:true})\r\n        })*/\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning\",\n            children: \"Invalid Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 55\n          }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Login Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 59\n          }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 36\n          }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.loginClicked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n} // function ShowInvalidCredentials(props){\n//     if(props.hasLoginFailed){\n//         return <div>Invalid Credentials</div>\n//     }\n//     return null;\n// }\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null;\n// }\n\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test/frontend/src/components/LoginComponent.js"],"names":["React","AuthenticationService","LoginComponent","Component","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","console","log","target","value","setState","name","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AuthenticationService from \"./AuthenticationService.js\";\r\n\r\nclass LoginComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: 'ciaran',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n\r\n        // this.handlerUsernameChange = this.handlerUsernameChange.bind(this)\r\n        // this.handlerPasswordChange = this.handlerPasswordChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(event.target.value);\r\n        this.setState(\r\n            {\r\n                    [event.target.name]\r\n                    :event.target.value\r\n                }\r\n            )\r\n    }\r\n\r\n    // handlerUsernameChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState(\r\n    //         {\r\n    //             [event.target.name]\r\n    //                 :event.target.value\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    // handlerPasswordChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState({password:event.target.value})\r\n    // }\r\n\r\n    loginClicked() {\r\n        // if (this.state.username === 'Ciaran' && this.state.password === 'dummy'){\r\n        //     AuthenticationService.registeredSuccessfulLogin(this.state.username,this.state.password);\r\n        //     this.props.history.push(`/welcome/${this.state.username}`)\r\n        //     // this.setState({showSuccessMessage:true})\r\n        //     // this.setState({hasLoginFailed:false})\r\n        //\r\n        // }\r\n        // else {\r\n        //     this.setState({showSuccessMessage:false})\r\n        //     this.setState({hasLoginFailed:true})\r\n        //\r\n        // }\r\n\r\n        /*AuthenticationService\r\n            .executeBasicAuthenticationService(this.state.username, this.state.password)\r\n            .then(() => {\r\n                AuthenticationService.registeredSuccessfulLogin(this.state.username, this.state.password);\r\n                this.props.history.push(`/welcome/${this.state.username}`)\r\n            }).catch(() => {\r\n                this.setState({showSuccessMessage:false})\r\n                this.setState({hasLoginFailed:true})\r\n            })*/\r\n\r\n        AuthenticationService\r\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            .then((response) => {\r\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\r\n                this.props.history.push(`/welcome/${this.state.username}`)\r\n            }).catch(() => {\r\n            this.setState({showSuccessMessage:false})\r\n            this.setState({hasLoginFailed:true})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-white\">\r\n                {/*<NavigationBar/>*/}\r\n                <center>\r\n                    <h1>Login</h1>\r\n                    <div className=\"container\">\r\n                        {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n                        {this.state.hasLoginFailed && <div className=\"warning\">Invalid Credentials</div>}\r\n                        {this.state.showSuccessMessage && <div>Login Successful</div>}\r\n                        {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\r\n                        User Name: <input type=\"text\" name = \"username\" value={this.state.username} onChange={this.handleChange}/>\r\n                        Password: <input type=\"password\" name = \"password\" value={this.state.password} onChange={this.handleChange} />\r\n                        <button onClick={this.loginClicked}>Login</button>\r\n                    </div>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n// function ShowInvalidCredentials(props){\r\n//     if(props.hasLoginFailed){\r\n//         return <div>Invalid Credentials</div>\r\n//     }\r\n//     return null;\r\n// }\r\n// function ShowLoginSuccessMessage(props){\r\n//     if(props.showSuccessMessage){\r\n//         return <div>Login Successful</div>\r\n//     }\r\n//     return null;\r\n// }\r\n\r\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}