{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/number_box/number_box.spins.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport TextEditorButton from \"../text_box/texteditor_button_collection/button\";\nimport SpinButton from \"./number_box.spin\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointer from \"../../events/pointer\";\nimport { extend } from \"../../core/utils/extend\";\nvar SPIN_CLASS = \"dx-numberbox-spin\";\nvar SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\";\nvar SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\nexport default class SpinButtons extends TextEditorButton {\n  _attachEvents(instance, $spinContainer) {\n    var {\n      editor: editor\n    } = this;\n    var eventName = addNamespace(pointer.down, editor.NAME);\n    var $spinContainerChildren = $spinContainer.children();\n\n    var pointerDownAction = editor._createAction(e => editor._spinButtonsPointerDownHandler(e));\n\n    eventsEngine.off($spinContainer, eventName);\n    eventsEngine.on($spinContainer, eventName, e => pointerDownAction({\n      event: e\n    }));\n    SpinButton.getInstance($spinContainerChildren.eq(0)).option(\"onChange\", e => editor._spinUpChangeHandler(e));\n    SpinButton.getInstance($spinContainerChildren.eq(1)).option(\"onChange\", e => editor._spinDownChangeHandler(e));\n  }\n\n  _create() {\n    var {\n      editor: editor\n    } = this;\n    var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\n    var $spinUp = $(\"<div>\").appendTo($spinContainer);\n    var $spinDown = $(\"<div>\").appendTo($spinContainer);\n\n    var options = this._getOptions();\n\n    this._addToContainer($spinContainer);\n\n    editor._createComponent($spinUp, SpinButton, extend({\n      direction: \"up\"\n    }, options));\n\n    editor._createComponent($spinDown, SpinButton, extend({\n      direction: \"down\"\n    }, options));\n\n    this._legacyRender(editor.$element(), this._isTouchFriendly(), options.visible);\n\n    return {\n      instance: $spinContainer,\n      $element: $spinContainer\n    };\n  }\n\n  _getOptions() {\n    var {\n      editor: editor\n    } = this;\n\n    var visible = this._isVisible();\n\n    var disabled = editor.option(\"disabled\");\n    return {\n      visible: visible,\n      disabled: disabled\n    };\n  }\n\n  _isVisible() {\n    var {\n      editor: editor\n    } = this;\n    return super._isVisible() && editor.option(\"showSpinButtons\");\n  }\n\n  _isTouchFriendly() {\n    var {\n      editor: editor\n    } = this;\n    return editor.option(\"showSpinButtons\") && editor.option(\"useLargeSpinButtons\");\n  }\n\n  _legacyRender($editor, isTouchFriendly, isVisible) {\n    $editor.toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, isTouchFriendly);\n    $editor.toggleClass(SPIN_CLASS, isVisible);\n  }\n\n  update() {\n    var shouldUpdate = super.update();\n\n    if (shouldUpdate) {\n      var {\n        editor: editor,\n        instance: instance\n      } = this;\n      var $editor = editor.$element();\n\n      var isVisible = this._isVisible();\n\n      var isTouchFriendly = this._isTouchFriendly();\n\n      var $spinButtons = instance.children();\n      var spinUp = SpinButton.getInstance($spinButtons.eq(0));\n      var spinDown = SpinButton.getInstance($spinButtons.eq(1));\n\n      var options = this._getOptions();\n\n      spinUp.option(options);\n      spinDown.option(options);\n\n      this._legacyRender($editor, isTouchFriendly, isVisible);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/number_box/number_box.spins.js"],"names":["$","eventsEngine","TextEditorButton","SpinButton","addNamespace","pointer","extend","SPIN_CLASS","SPIN_CONTAINER_CLASS","SPIN_TOUCH_FRIENDLY_CLASS","SpinButtons","_attachEvents","instance","$spinContainer","editor","eventName","down","NAME","$spinContainerChildren","children","pointerDownAction","_createAction","e","_spinButtonsPointerDownHandler","off","on","event","getInstance","eq","option","_spinUpChangeHandler","_spinDownChangeHandler","_create","addClass","$spinUp","appendTo","$spinDown","options","_getOptions","_addToContainer","_createComponent","direction","_legacyRender","$element","_isTouchFriendly","visible","_isVisible","disabled","$editor","isTouchFriendly","isVisible","toggleClass","update","shouldUpdate","$spinButtons","spinUp","spinDown"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/number_box/number_box.spins.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport TextEditorButton from \"../text_box/texteditor_button_collection/button\";\r\nimport SpinButton from \"./number_box.spin\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointer from \"../../events/pointer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar SPIN_CLASS = \"dx-numberbox-spin\";\r\nvar SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\";\r\nvar SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nexport default class SpinButtons extends TextEditorButton {\r\n    _attachEvents(instance, $spinContainer) {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var eventName = addNamespace(pointer.down, editor.NAME);\r\n        var $spinContainerChildren = $spinContainer.children();\r\n        var pointerDownAction = editor._createAction(e => editor._spinButtonsPointerDownHandler(e));\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, e => pointerDownAction({\r\n            event: e\r\n        }));\r\n        SpinButton.getInstance($spinContainerChildren.eq(0)).option(\"onChange\", e => editor._spinUpChangeHandler(e));\r\n        SpinButton.getInstance($spinContainerChildren.eq(1)).option(\"onChange\", e => editor._spinDownChangeHandler(e))\r\n    }\r\n    _create() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        var $spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        var $spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        var options = this._getOptions();\r\n        this._addToContainer($spinContainer);\r\n        editor._createComponent($spinUp, SpinButton, extend({\r\n            direction: \"up\"\r\n        }, options));\r\n        editor._createComponent($spinDown, SpinButton, extend({\r\n            direction: \"down\"\r\n        }, options));\r\n        this._legacyRender(editor.$element(), this._isTouchFriendly(), options.visible);\r\n        return {\r\n            instance: $spinContainer,\r\n            $element: $spinContainer\r\n        }\r\n    }\r\n    _getOptions() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var visible = this._isVisible();\r\n        var disabled = editor.option(\"disabled\");\r\n        return {\r\n            visible: visible,\r\n            disabled: disabled\r\n        }\r\n    }\r\n    _isVisible() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        return super._isVisible() && editor.option(\"showSpinButtons\")\r\n    }\r\n    _isTouchFriendly() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        return editor.option(\"showSpinButtons\") && editor.option(\"useLargeSpinButtons\")\r\n    }\r\n    _legacyRender($editor, isTouchFriendly, isVisible) {\r\n        $editor.toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, isTouchFriendly);\r\n        $editor.toggleClass(SPIN_CLASS, isVisible)\r\n    }\r\n    update() {\r\n        var shouldUpdate = super.update();\r\n        if (shouldUpdate) {\r\n            var {\r\n                editor: editor,\r\n                instance: instance\r\n            } = this;\r\n            var $editor = editor.$element();\r\n            var isVisible = this._isVisible();\r\n            var isTouchFriendly = this._isTouchFriendly();\r\n            var $spinButtons = instance.children();\r\n            var spinUp = SpinButton.getInstance($spinButtons.eq(0));\r\n            var spinDown = SpinButton.getInstance($spinButtons.eq(1));\r\n            var options = this._getOptions();\r\n            spinUp.option(options);\r\n            spinDown.option(options);\r\n            this._legacyRender($editor, isTouchFriendly, isVisible)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}