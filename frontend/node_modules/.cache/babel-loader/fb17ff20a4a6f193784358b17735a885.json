{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.label.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nvar TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\nvar TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\nvar TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\nvar TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\nvar LABEL_BEFORE_CLASS = \"dx-label-before\";\nvar LABEL_CLASS = \"dx-label\";\nvar LABEL_AFTER_CLASS = \"dx-label-after\";\n\nclass TextEditorLabel {\n  constructor(_ref) {\n    var {\n      $editor: $editor,\n      text: text,\n      mode: mode,\n      mark: mark,\n      containsButtonsBefore: containsButtonsBefore,\n      containerWidth: containerWidth,\n      beforeWidth: beforeWidth\n    } = _ref;\n    this._props = {\n      $editor: $editor,\n      text: text,\n      mode: mode,\n      mark: mark,\n      containsButtonsBefore: containsButtonsBefore,\n      containerWidth: containerWidth,\n      beforeWidth: beforeWidth\n    };\n\n    this._render();\n\n    this._toggleMarkupVisibility();\n  }\n\n  _isVisible() {\n    return !!this._props.text && \"hidden\" !== this._props.mode;\n  }\n\n  _render() {\n    this._$before = $(\"<div>\").addClass(LABEL_BEFORE_CLASS);\n    this._$labelSpan = $(\"<span>\");\n    this._$label = $(\"<div>\").addClass(LABEL_CLASS).append(this._$labelSpan);\n    this._$after = $(\"<div>\").addClass(LABEL_AFTER_CLASS);\n    this._$root = $(\"<div>\").addClass(TEXTEDITOR_LABEL_CLASS).append(this._$before).append(this._$label).append(this._$after);\n\n    this._updateMark();\n\n    this._updateText();\n\n    this._updateBeforeWidth();\n\n    this._updateMaxWidth();\n  }\n\n  _toggleMarkupVisibility() {\n    var visible = this._isVisible();\n\n    this._updateEditorBeforeButtonsClass(visible);\n\n    this._updateEditorLabelClass(visible);\n\n    visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach();\n  }\n\n  _updateEditorLabelClass(visible) {\n    this._props.$editor.removeClass(TEXTEDITOR_WITH_FLOATING_LABEL_CLASS).removeClass(TEXTEDITOR_WITH_LABEL_CLASS);\n\n    if (visible) {\n      var labelClass = \"floating\" === this._props.mode ? TEXTEDITOR_WITH_FLOATING_LABEL_CLASS : TEXTEDITOR_WITH_LABEL_CLASS;\n\n      this._props.$editor.addClass(labelClass);\n    }\n  }\n\n  _updateEditorBeforeButtonsClass() {\n    var visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\n\n    this._props.$editor.removeClass(TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS);\n\n    if (visible) {\n      var beforeButtonsClass = this._props.containsButtonsBefore ? TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS : \"\";\n\n      this._props.$editor.addClass(beforeButtonsClass);\n    }\n  }\n\n  _updateMark() {\n    this._$labelSpan.attr(\"data-mark\", this._props.mark);\n  }\n\n  _updateText() {\n    this._$labelSpan.text(this._props.text);\n  }\n\n  _updateBeforeWidth() {\n    this._$before.css({\n      width: this._props.beforeWidth\n    });\n  }\n\n  _updateMaxWidth() {\n    this._$label.css({\n      maxWidth: this._props.containerWidth\n    });\n  }\n\n  $element() {\n    return this._$root;\n  }\n\n  isVisible() {\n    return this._isVisible();\n  }\n\n  updateMode(mode) {\n    this._props.mode = mode;\n\n    this._toggleMarkupVisibility();\n  }\n\n  updateText(text) {\n    this._props.text = text;\n\n    this._updateText();\n\n    this._toggleMarkupVisibility();\n  }\n\n  updateMark(mark) {\n    this._props.mark = mark;\n\n    this._updateMark();\n  }\n\n  updateContainsButtonsBefore(containsButtonsBefore) {\n    this._props.containsButtonsBefore = containsButtonsBefore;\n\n    this._updateEditorBeforeButtonsClass();\n  }\n\n  updateBeforeWidth(beforeWidth) {\n    this._props.beforeWidth = beforeWidth;\n\n    this._updateBeforeWidth();\n  }\n\n  updateMaxWidth(containerWidth) {\n    this._props.containerWidth = containerWidth;\n\n    this._updateMaxWidth();\n  }\n\n}\n\nexport { TextEditorLabel };","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/text_box/ui.text_editor.label.js"],"names":["$","TEXTEDITOR_LABEL_CLASS","TEXTEDITOR_WITH_LABEL_CLASS","TEXTEDITOR_WITH_FLOATING_LABEL_CLASS","TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS","LABEL_BEFORE_CLASS","LABEL_CLASS","LABEL_AFTER_CLASS","TextEditorLabel","constructor","_ref","$editor","text","mode","mark","containsButtonsBefore","containerWidth","beforeWidth","_props","_render","_toggleMarkupVisibility","_isVisible","_$before","addClass","_$labelSpan","_$label","append","_$after","_$root","_updateMark","_updateText","_updateBeforeWidth","_updateMaxWidth","visible","_updateEditorBeforeButtonsClass","_updateEditorLabelClass","appendTo","detach","removeClass","labelClass","arguments","length","beforeButtonsClass","attr","css","width","maxWidth","$element","isVisible","updateMode","updateText","updateMark","updateContainsButtonsBefore","updateBeforeWidth","updateMaxWidth"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.label.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nvar TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\r\nvar TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\r\nvar TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\r\nvar TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\r\nvar LABEL_BEFORE_CLASS = \"dx-label-before\";\r\nvar LABEL_CLASS = \"dx-label\";\r\nvar LABEL_AFTER_CLASS = \"dx-label-after\";\r\nclass TextEditorLabel {\r\n    constructor(_ref) {\r\n        var {\r\n            $editor: $editor,\r\n            text: text,\r\n            mode: mode,\r\n            mark: mark,\r\n            containsButtonsBefore: containsButtonsBefore,\r\n            containerWidth: containerWidth,\r\n            beforeWidth: beforeWidth\r\n        } = _ref;\r\n        this._props = {\r\n            $editor: $editor,\r\n            text: text,\r\n            mode: mode,\r\n            mark: mark,\r\n            containsButtonsBefore: containsButtonsBefore,\r\n            containerWidth: containerWidth,\r\n            beforeWidth: beforeWidth\r\n        };\r\n        this._render();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    _isVisible() {\r\n        return !!this._props.text && \"hidden\" !== this._props.mode\r\n    }\r\n    _render() {\r\n        this._$before = $(\"<div>\").addClass(LABEL_BEFORE_CLASS);\r\n        this._$labelSpan = $(\"<span>\");\r\n        this._$label = $(\"<div>\").addClass(LABEL_CLASS).append(this._$labelSpan);\r\n        this._$after = $(\"<div>\").addClass(LABEL_AFTER_CLASS);\r\n        this._$root = $(\"<div>\").addClass(TEXTEDITOR_LABEL_CLASS).append(this._$before).append(this._$label).append(this._$after);\r\n        this._updateMark();\r\n        this._updateText();\r\n        this._updateBeforeWidth();\r\n        this._updateMaxWidth()\r\n    }\r\n    _toggleMarkupVisibility() {\r\n        var visible = this._isVisible();\r\n        this._updateEditorBeforeButtonsClass(visible);\r\n        this._updateEditorLabelClass(visible);\r\n        visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach()\r\n    }\r\n    _updateEditorLabelClass(visible) {\r\n        this._props.$editor.removeClass(TEXTEDITOR_WITH_FLOATING_LABEL_CLASS).removeClass(TEXTEDITOR_WITH_LABEL_CLASS);\r\n        if (visible) {\r\n            var labelClass = \"floating\" === this._props.mode ? TEXTEDITOR_WITH_FLOATING_LABEL_CLASS : TEXTEDITOR_WITH_LABEL_CLASS;\r\n            this._props.$editor.addClass(labelClass)\r\n        }\r\n    }\r\n    _updateEditorBeforeButtonsClass() {\r\n        var visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\r\n        this._props.$editor.removeClass(TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS);\r\n        if (visible) {\r\n            var beforeButtonsClass = this._props.containsButtonsBefore ? TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS : \"\";\r\n            this._props.$editor.addClass(beforeButtonsClass)\r\n        }\r\n    }\r\n    _updateMark() {\r\n        this._$labelSpan.attr(\"data-mark\", this._props.mark)\r\n    }\r\n    _updateText() {\r\n        this._$labelSpan.text(this._props.text)\r\n    }\r\n    _updateBeforeWidth() {\r\n        this._$before.css({\r\n            width: this._props.beforeWidth\r\n        })\r\n    }\r\n    _updateMaxWidth() {\r\n        this._$label.css({\r\n            maxWidth: this._props.containerWidth\r\n        })\r\n    }\r\n    $element() {\r\n        return this._$root\r\n    }\r\n    isVisible() {\r\n        return this._isVisible()\r\n    }\r\n    updateMode(mode) {\r\n        this._props.mode = mode;\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    updateText(text) {\r\n        this._props.text = text;\r\n        this._updateText();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    updateMark(mark) {\r\n        this._props.mark = mark;\r\n        this._updateMark()\r\n    }\r\n    updateContainsButtonsBefore(containsButtonsBefore) {\r\n        this._props.containsButtonsBefore = containsButtonsBefore;\r\n        this._updateEditorBeforeButtonsClass()\r\n    }\r\n    updateBeforeWidth(beforeWidth) {\r\n        this._props.beforeWidth = beforeWidth;\r\n        this._updateBeforeWidth()\r\n    }\r\n    updateMaxWidth(containerWidth) {\r\n        this._props.containerWidth = containerWidth;\r\n        this._updateMaxWidth()\r\n    }\r\n}\r\nexport {\r\n    TextEditorLabel\r\n};\r\n"]},"metadata":{},"sourceType":"module"}