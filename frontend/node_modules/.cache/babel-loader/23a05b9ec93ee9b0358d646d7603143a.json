{"ast":null,"code":"/**\r\n * DevExtreme (esm/animation/easing.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isFunction } from \"../core/utils/type\";\nvar CSS_TRANSITION_EASING_REGEX = /cubic-bezier\\((\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\)/;\nvar TransitionTimingFuncMap = {\n  linear: \"cubic-bezier(0, 0, 1, 1)\",\n  swing: \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\",\n  ease: \"cubic-bezier(0.25, 0.1, 0.25, 1)\",\n  \"ease-in\": \"cubic-bezier(0.42, 0, 1, 1)\",\n  \"ease-out\": \"cubic-bezier(0, 0, 0.58, 1)\",\n  \"ease-in-out\": \"cubic-bezier(0.42, 0, 0.58, 1)\"\n};\n\nvar polynomBezier = function (x1, y1, x2, y2) {\n  var Cx = 3 * x1;\n  var Bx = 3 * (x2 - x1) - Cx;\n  var Ax = 1 - Cx - Bx;\n  var Cy = 3 * y1;\n  var By = 3 * (y2 - y1) - Cy;\n  var Ay = 1 - Cy - By;\n\n  var bezierX = function (t) {\n    return t * (Cx + t * (Bx + t * Ax));\n  };\n\n  var derivativeX = function (t) {\n    return Cx + t * (2 * Bx + 3 * t * Ax);\n  };\n\n  return function (t) {\n    return function (t) {\n      return t * (Cy + t * (By + t * Ay));\n    }(function (t) {\n      var x = t;\n      var i = 0;\n      var z;\n\n      while (i < 14) {\n        z = bezierX(x) - t;\n\n        if (Math.abs(z) < .001) {\n          break;\n        }\n\n        x -= z / derivativeX(x);\n        i++;\n      }\n\n      return x;\n    }(t));\n  };\n};\n\nvar easing = {};\nexport var convertTransitionTimingFuncToEasing = function (cssTransitionEasing) {\n  cssTransitionEasing = TransitionTimingFuncMap[cssTransitionEasing] || cssTransitionEasing;\n  var coeffs = cssTransitionEasing.match(CSS_TRANSITION_EASING_REGEX);\n  var forceName;\n\n  if (!coeffs) {\n    forceName = \"linear\";\n    coeffs = TransitionTimingFuncMap[forceName].match(CSS_TRANSITION_EASING_REGEX);\n  }\n\n  coeffs = coeffs.slice(1, 5);\n\n  for (var i = 0; i < coeffs.length; i++) {\n    coeffs[i] = parseFloat(coeffs[i]);\n  }\n\n  var easingName = forceName || \"cubicbezier_\" + coeffs.join(\"_\").replace(/\\./g, \"p\");\n\n  if (!isFunction(easing[easingName])) {\n    easing[easingName] = function (x, t, b, c, d) {\n      return c * polynomBezier(coeffs[0], coeffs[1], coeffs[2], coeffs[3])(t / d) + b;\n    };\n  }\n\n  return easingName;\n};\nexport function setEasing(value) {\n  easing = value;\n}\nexport function getEasing(name) {\n  return easing[name];\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/animation/easing.js"],"names":["isFunction","CSS_TRANSITION_EASING_REGEX","TransitionTimingFuncMap","linear","swing","ease","polynomBezier","x1","y1","x2","y2","Cx","Bx","Ax","Cy","By","Ay","bezierX","t","derivativeX","x","i","z","Math","abs","easing","convertTransitionTimingFuncToEasing","cssTransitionEasing","coeffs","match","forceName","slice","length","parseFloat","easingName","join","replace","b","c","d","setEasing","value","getEasing","name"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/animation/easing.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nvar CSS_TRANSITION_EASING_REGEX = /cubic-bezier\\((\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\)/;\r\nvar TransitionTimingFuncMap = {\r\n    linear: \"cubic-bezier(0, 0, 1, 1)\",\r\n    swing: \"cubic-bezier(0.445, 0.05, 0.55, 0.95)\",\r\n    ease: \"cubic-bezier(0.25, 0.1, 0.25, 1)\",\r\n    \"ease-in\": \"cubic-bezier(0.42, 0, 1, 1)\",\r\n    \"ease-out\": \"cubic-bezier(0, 0, 0.58, 1)\",\r\n    \"ease-in-out\": \"cubic-bezier(0.42, 0, 0.58, 1)\"\r\n};\r\nvar polynomBezier = function(x1, y1, x2, y2) {\r\n    var Cx = 3 * x1;\r\n    var Bx = 3 * (x2 - x1) - Cx;\r\n    var Ax = 1 - Cx - Bx;\r\n    var Cy = 3 * y1;\r\n    var By = 3 * (y2 - y1) - Cy;\r\n    var Ay = 1 - Cy - By;\r\n    var bezierX = function(t) {\r\n        return t * (Cx + t * (Bx + t * Ax))\r\n    };\r\n    var derivativeX = function(t) {\r\n        return Cx + t * (2 * Bx + 3 * t * Ax)\r\n    };\r\n    return function(t) {\r\n        return function(t) {\r\n            return t * (Cy + t * (By + t * Ay))\r\n        }(function(t) {\r\n            var x = t;\r\n            var i = 0;\r\n            var z;\r\n            while (i < 14) {\r\n                z = bezierX(x) - t;\r\n                if (Math.abs(z) < .001) {\r\n                    break\r\n                }\r\n                x -= z / derivativeX(x);\r\n                i++\r\n            }\r\n            return x\r\n        }(t))\r\n    }\r\n};\r\nvar easing = {};\r\nexport var convertTransitionTimingFuncToEasing = function(cssTransitionEasing) {\r\n    cssTransitionEasing = TransitionTimingFuncMap[cssTransitionEasing] || cssTransitionEasing;\r\n    var coeffs = cssTransitionEasing.match(CSS_TRANSITION_EASING_REGEX);\r\n    var forceName;\r\n    if (!coeffs) {\r\n        forceName = \"linear\";\r\n        coeffs = TransitionTimingFuncMap[forceName].match(CSS_TRANSITION_EASING_REGEX)\r\n    }\r\n    coeffs = coeffs.slice(1, 5);\r\n    for (var i = 0; i < coeffs.length; i++) {\r\n        coeffs[i] = parseFloat(coeffs[i])\r\n    }\r\n    var easingName = forceName || \"cubicbezier_\" + coeffs.join(\"_\").replace(/\\./g, \"p\");\r\n    if (!isFunction(easing[easingName])) {\r\n        easing[easingName] = function(x, t, b, c, d) {\r\n            return c * polynomBezier(coeffs[0], coeffs[1], coeffs[2], coeffs[3])(t / d) + b\r\n        }\r\n    }\r\n    return easingName\r\n};\r\nexport function setEasing(value) {\r\n    easing = value\r\n}\r\nexport function getEasing(name) {\r\n    return easing[name]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}