{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/widget/ui.widget.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Action from \"../../core/action\";\nimport DOMComponent from \"../../core/dom_component\";\nimport { active, focus, hover, keyboard } from \"../../events/short\";\nimport { deferRender, deferRenderer, noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { focusable as focusableSelector } from \"./selectors\";\nimport { inArray } from \"../../core/utils/array\";\nimport { isPlainObject, isDefined } from \"../../core/utils/type\";\nimport devices from \"../../core/devices\";\nimport { compare as compareVersions } from \"../../core/utils/version\";\nimport \"../../events/click\";\nimport \"../../events/core/emitter.feedback\";\nimport \"../../events/hover\";\n\nfunction setAttribute(name, value, target) {\n  name = \"role\" === name || \"id\" === name ? name : \"aria-\".concat(name);\n  value = isDefined(value) ? value.toString() : null;\n  target.attr(name, value);\n}\n\nvar Widget = DOMComponent.inherit({\n  _feedbackHideTimeout: 400,\n  _feedbackShowTimeout: 30,\n  _supportedKeys: () => ({}),\n\n  _getDefaultOptions() {\n    return extend(this.callBase(), {\n      hoveredElement: null,\n      isActive: false,\n      disabled: false,\n      visible: true,\n      hint: void 0,\n      activeStateEnabled: false,\n      onContentReady: null,\n      hoverStateEnabled: false,\n      focusStateEnabled: false,\n      tabIndex: 0,\n      accessKey: void 0,\n      onFocusIn: null,\n      onFocusOut: null,\n      onKeyboardHandled: null,\n      ignoreParentReadOnly: false,\n      useResizeObserver: true\n    });\n  },\n\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        var device = devices.real();\n        var platform = device.platform;\n        var version = device.version;\n        return \"ios\" === platform && compareVersions(version, \"13.3\") <= 0 || \"android\" === platform && compareVersions(version, \"4.4.4\") <= 0;\n      },\n      options: {\n        useResizeObserver: false\n      }\n    }]);\n  },\n\n  _init() {\n    this.callBase();\n\n    this._initContentReadyAction();\n  },\n\n  _innerWidgetOptionChanged: function (innerWidget, args) {\n    var options = Widget.getOptionsFromContainer(args);\n    innerWidget && innerWidget.option(options);\n\n    this._options.cache(args.name, options);\n  },\n\n  _bindInnerWidgetOptions(innerWidget, optionsContainer) {\n    var syncOptions = () => this._options.silent(optionsContainer, extend({}, innerWidget.option()));\n\n    syncOptions();\n    innerWidget.on(\"optionChanged\", syncOptions);\n  },\n\n  _getAriaTarget() {\n    return this._focusTarget();\n  },\n\n  _initContentReadyAction() {\n    this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n\n  _initMarkup() {\n    var {\n      disabled: disabled,\n      visible: visible\n    } = this.option();\n    this.$element().addClass(\"dx-widget\");\n\n    this._toggleDisabledState(disabled);\n\n    this._toggleVisibility(visible);\n\n    this._renderHint();\n\n    this._isFocusable() && this._renderFocusTarget();\n    this.callBase();\n  },\n\n  _render() {\n    this.callBase();\n\n    this._renderContent();\n\n    this._renderFocusState();\n\n    this._attachFeedbackEvents();\n\n    this._attachHoverEvents();\n\n    this._toggleIndependentState();\n  },\n\n  _renderHint() {\n    var {\n      hint: hint\n    } = this.option();\n    this.$element().attr(\"title\", hint || null);\n  },\n\n  _renderContent() {\n    deferRender(() => !this._disposed ? this._renderContentImpl() : void 0).done(() => !this._disposed ? this._fireContentReadyAction() : void 0);\n  },\n\n  _renderContentImpl: noop,\n  _fireContentReadyAction: deferRenderer(function () {\n    return this._contentReadyAction();\n  }),\n\n  _dispose() {\n    this._contentReadyAction = null;\n\n    this._detachKeyboardEvents();\n\n    this.callBase();\n  },\n\n  _resetActiveState() {\n    this._toggleActiveState(this._eventBindingTarget(), false);\n  },\n\n  _clean() {\n    this._cleanFocusState();\n\n    this._resetActiveState();\n\n    this.callBase();\n    this.$element().empty();\n  },\n\n  _toggleVisibility(visible) {\n    this.$element().toggleClass(\"dx-state-invisible\", !visible);\n    this.setAria(\"hidden\", !visible || void 0);\n  },\n\n  _renderFocusState() {\n    this._attachKeyboardEvents();\n\n    if (this._isFocusable()) {\n      this._renderFocusTarget();\n\n      this._attachFocusEvents();\n\n      this._renderAccessKey();\n    }\n  },\n\n  _renderAccessKey() {\n    var $el = this._focusTarget();\n\n    var {\n      accessKey: accessKey\n    } = this.option();\n    $el.attr(\"accesskey\", accessKey);\n  },\n\n  _isFocusable() {\n    var {\n      focusStateEnabled: focusStateEnabled,\n      disabled: disabled\n    } = this.option();\n    return focusStateEnabled && !disabled;\n  },\n\n  _eventBindingTarget() {\n    return this.$element();\n  },\n\n  _focusTarget() {\n    return this._getActiveElement();\n  },\n\n  _getActiveElement() {\n    var activeElement = this._eventBindingTarget();\n\n    if (this._activeStateUnit) {\n      return activeElement.find(this._activeStateUnit).not(\".dx-state-disabled\");\n    }\n\n    return activeElement;\n  },\n\n  _renderFocusTarget() {\n    var {\n      tabIndex: tabIndex\n    } = this.option();\n\n    this._focusTarget().attr(\"tabIndex\", tabIndex);\n  },\n\n  _keyboardEventBindingTarget() {\n    return this._eventBindingTarget();\n  },\n\n  _refreshFocusEvent() {\n    this._detachFocusEvents();\n\n    this._attachFocusEvents();\n  },\n\n  _focusEventTarget() {\n    return this._focusTarget();\n  },\n\n  _focusInHandler(event) {\n    if (!event.isDefaultPrevented()) {\n      this._createActionByOption(\"onFocusIn\", {\n        beforeExecute: () => this._updateFocusState(event, true),\n        excludeValidators: [\"readOnly\"]\n      })({\n        event: event\n      });\n    }\n  },\n\n  _focusOutHandler(event) {\n    if (!event.isDefaultPrevented()) {\n      this._createActionByOption(\"onFocusOut\", {\n        beforeExecute: () => this._updateFocusState(event, false),\n        excludeValidators: [\"readOnly\", \"disabled\"]\n      })({\n        event: event\n      });\n    }\n  },\n\n  _updateFocusState(_ref, isFocused) {\n    var {\n      target: target\n    } = _ref;\n\n    if (-1 !== inArray(target, this._focusTarget())) {\n      this._toggleFocusClass(isFocused, $(target));\n    }\n  },\n\n  _toggleFocusClass(isFocused, $element) {\n    var $focusTarget = $element && $element.length ? $element : this._focusTarget();\n    $focusTarget.toggleClass(\"dx-state-focused\", isFocused);\n  },\n\n  _hasFocusClass(element) {\n    var $focusTarget = $(element || this._focusTarget());\n    return $focusTarget.hasClass(\"dx-state-focused\");\n  },\n\n  _isFocused() {\n    return this._hasFocusClass();\n  },\n\n  _getKeyboardListeners: () => [],\n\n  _attachKeyboardEvents() {\n    this._detachKeyboardEvents();\n\n    var {\n      focusStateEnabled: focusStateEnabled,\n      onKeyboardHandled: onKeyboardHandled\n    } = this.option();\n\n    var hasChildListeners = this._getKeyboardListeners().length;\n\n    var hasKeyboardEventHandler = !!onKeyboardHandled;\n    var shouldAttach = focusStateEnabled || hasChildListeners || hasKeyboardEventHandler;\n\n    if (shouldAttach) {\n      this._keyboardListenerId = keyboard.on(this._keyboardEventBindingTarget(), this._focusTarget(), opts => this._keyboardHandler(opts));\n    }\n  },\n\n  _keyboardHandler(options, onlyChildProcessing) {\n    if (!onlyChildProcessing) {\n      var {\n        originalEvent: originalEvent,\n        keyName: keyName,\n        which: which\n      } = options;\n\n      var keys = this._supportedKeys(originalEvent);\n\n      var func = keys[keyName] || keys[which];\n\n      if (void 0 !== func) {\n        var handler = func.bind(this);\n        var result = handler(originalEvent, options);\n\n        if (!result) {\n          return false;\n        }\n      }\n    }\n\n    var keyboardListeners = this._getKeyboardListeners();\n\n    var {\n      onKeyboardHandled: onKeyboardHandled\n    } = this.option();\n    keyboardListeners.forEach(listener => listener && listener._keyboardHandler(options));\n    onKeyboardHandled && onKeyboardHandled(options);\n    return true;\n  },\n\n  _refreshFocusState() {\n    this._cleanFocusState();\n\n    this._renderFocusState();\n  },\n\n  _cleanFocusState() {\n    var $element = this._focusTarget();\n\n    $element.removeAttr(\"tabIndex\");\n\n    this._toggleFocusClass(false);\n\n    this._detachFocusEvents();\n\n    this._detachKeyboardEvents();\n  },\n\n  _detachKeyboardEvents() {\n    keyboard.off(this._keyboardListenerId);\n    this._keyboardListenerId = null;\n  },\n\n  _attachHoverEvents() {\n    var {\n      hoverStateEnabled: hoverStateEnabled\n    } = this.option();\n    var selector = this._activeStateUnit;\n\n    var $el = this._eventBindingTarget();\n\n    hover.off($el, {\n      selector: selector,\n      namespace: \"UIFeedback\"\n    });\n\n    if (hoverStateEnabled) {\n      hover.on($el, new Action(_ref2 => {\n        var {\n          event: event,\n          element: element\n        } = _ref2;\n\n        this._hoverStartHandler(event);\n\n        this.option(\"hoveredElement\", $(element));\n      }, {\n        excludeValidators: [\"readOnly\"]\n      }), event => {\n        this.option(\"hoveredElement\", null);\n\n        this._hoverEndHandler(event);\n      }, {\n        selector: selector,\n        namespace: \"UIFeedback\"\n      });\n    }\n  },\n\n  _attachFeedbackEvents() {\n    var {\n      activeStateEnabled: activeStateEnabled\n    } = this.option();\n    var selector = this._activeStateUnit;\n\n    var $el = this._eventBindingTarget();\n\n    active.off($el, {\n      namespace: \"UIFeedback\",\n      selector: selector\n    });\n\n    if (activeStateEnabled) {\n      active.on($el, new Action(_ref3 => {\n        var {\n          event: event,\n          element: element\n        } = _ref3;\n        return this._toggleActiveState($(element), true, event);\n      }), new Action(_ref4 => {\n        var {\n          event: event,\n          element: element\n        } = _ref4;\n        return this._toggleActiveState($(element), false, event);\n      }, {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      }), {\n        showTimeout: this._feedbackShowTimeout,\n        hideTimeout: this._feedbackHideTimeout,\n        selector: selector,\n        namespace: \"UIFeedback\"\n      });\n    }\n  },\n\n  _detachFocusEvents() {\n    var $el = this._focusEventTarget();\n\n    focus.off($el, {\n      namespace: \"\".concat(this.NAME, \"Focus\")\n    });\n  },\n\n  _attachFocusEvents() {\n    var $el = this._focusEventTarget();\n\n    focus.on($el, e => this._focusInHandler(e), e => this._focusOutHandler(e), {\n      namespace: \"\".concat(this.NAME, \"Focus\"),\n      isFocusable: (index, el) => $(el).is(focusableSelector)\n    });\n  },\n\n  _hoverStartHandler: noop,\n  _hoverEndHandler: noop,\n\n  _toggleActiveState($element, value) {\n    this.option(\"isActive\", value);\n    $element.toggleClass(\"dx-state-active\", value);\n  },\n\n  _updatedHover() {\n    var hoveredElement = this._options.silent(\"hoveredElement\");\n\n    this._hover(hoveredElement, hoveredElement);\n  },\n\n  _findHoverTarget($el) {\n    return $el && $el.closest(this._activeStateUnit || this._eventBindingTarget());\n  },\n\n  _hover($el, $previous) {\n    var {\n      hoverStateEnabled: hoverStateEnabled,\n      disabled: disabled,\n      isActive: isActive\n    } = this.option();\n    $previous = this._findHoverTarget($previous);\n    $previous && $previous.toggleClass(\"dx-state-hover\", false);\n\n    if ($el && hoverStateEnabled && !disabled && !isActive) {\n      var newHoveredElement = this._findHoverTarget($el);\n\n      newHoveredElement && newHoveredElement.toggleClass(\"dx-state-hover\", true);\n    }\n  },\n\n  _toggleDisabledState(value) {\n    this.$element().toggleClass(\"dx-state-disabled\", Boolean(value));\n    this.setAria(\"disabled\", value || void 0);\n  },\n\n  _toggleIndependentState() {\n    this.$element().toggleClass(\"dx-state-independent\", this.option(\"ignoreParentReadOnly\"));\n  },\n\n  _setWidgetOption(widgetName, args) {\n    if (!this[widgetName]) {\n      return;\n    }\n\n    if (isPlainObject(args[0])) {\n      each(args[0], (option, value) => this._setWidgetOption(widgetName, [option, value]));\n      return;\n    }\n\n    var optionName = args[0];\n    var value = args[1];\n\n    if (1 === args.length) {\n      value = this.option(optionName);\n    }\n\n    var widgetOptionMap = this[\"\".concat(widgetName, \"OptionMap\")];\n    this[widgetName].option(widgetOptionMap ? widgetOptionMap(optionName) : optionName, value);\n  },\n\n  _optionChanged(args) {\n    var {\n      name: name,\n      value: value,\n      previousValue: previousValue\n    } = args;\n\n    switch (name) {\n      case \"disabled\":\n        this._toggleDisabledState(value);\n\n        this._updatedHover();\n\n        this._refreshFocusState();\n\n        break;\n\n      case \"hint\":\n        this._renderHint();\n\n        break;\n\n      case \"ignoreParentReadOnly\":\n        this._toggleIndependentState();\n\n        break;\n\n      case \"activeStateEnabled\":\n        this._attachFeedbackEvents();\n\n        break;\n\n      case \"hoverStateEnabled\":\n        this._attachHoverEvents();\n\n        this._updatedHover();\n\n        break;\n\n      case \"tabIndex\":\n      case \"focusStateEnabled\":\n        this._refreshFocusState();\n\n        break;\n\n      case \"onFocusIn\":\n      case \"onFocusOut\":\n      case \"useResizeObserver\":\n        break;\n\n      case \"accessKey\":\n        this._renderAccessKey();\n\n        break;\n\n      case \"hoveredElement\":\n        this._hover(value, previousValue);\n\n        break;\n\n      case \"isActive\":\n        this._updatedHover();\n\n        break;\n\n      case \"visible\":\n        this._toggleVisibility(value);\n\n        if (this._isVisibilityChangeSupported()) {\n          this._checkVisibilityChanged(value ? \"shown\" : \"hiding\");\n        }\n\n        break;\n\n      case \"onKeyboardHandled\":\n        this._attachKeyboardEvents();\n\n        break;\n\n      case \"onContentReady\":\n        this._initContentReadyAction();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n\n  _isVisible() {\n    var {\n      visible: visible\n    } = this.option();\n    return this.callBase() && visible;\n  },\n\n  beginUpdate() {\n    this._ready(false);\n\n    this.callBase();\n  },\n\n  endUpdate() {\n    this.callBase();\n\n    if (this._initialized) {\n      this._ready(true);\n    }\n  },\n\n  _ready(value) {\n    if (0 === arguments.length) {\n      return this._isReady;\n    }\n\n    this._isReady = value;\n  },\n\n  setAria() {\n    if (!isPlainObject(arguments.length <= 0 ? void 0 : arguments[0])) {\n      setAttribute(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], (arguments.length <= 2 ? void 0 : arguments[2]) || this._getAriaTarget());\n    } else {\n      var target = (arguments.length <= 1 ? void 0 : arguments[1]) || this._getAriaTarget();\n\n      each(arguments.length <= 0 ? void 0 : arguments[0], (name, value) => setAttribute(name, value, target));\n    }\n  },\n\n  isReady() {\n    return this._ready();\n  },\n\n  repaint() {\n    this._refresh();\n  },\n\n  focus() {\n    focus.trigger(this._focusTarget());\n  },\n\n  registerKeyHandler(key, handler) {\n    var currentKeys = this._supportedKeys();\n\n    this._supportedKeys = () => extend(currentKeys, {\n      [key]: handler\n    });\n  }\n\n});\n\nWidget.getOptionsFromContainer = _ref5 => {\n  var {\n    name: name,\n    fullName: fullName,\n    value: value\n  } = _ref5;\n  var options = {};\n\n  if (name === fullName) {\n    options = value;\n  } else {\n    var option = fullName.split(\".\").pop();\n    options[option] = value;\n  }\n\n  return options;\n};\n\nexport default Widget;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/widget/ui.widget.js"],"names":["$","Action","DOMComponent","active","focus","hover","keyboard","deferRender","deferRenderer","noop","each","extend","focusable","focusableSelector","inArray","isPlainObject","isDefined","devices","compare","compareVersions","setAttribute","name","value","target","concat","toString","attr","Widget","inherit","_feedbackHideTimeout","_feedbackShowTimeout","_supportedKeys","_getDefaultOptions","callBase","hoveredElement","isActive","disabled","visible","hint","activeStateEnabled","onContentReady","hoverStateEnabled","focusStateEnabled","tabIndex","accessKey","onFocusIn","onFocusOut","onKeyboardHandled","ignoreParentReadOnly","useResizeObserver","_defaultOptionsRules","device","real","platform","version","options","_init","_initContentReadyAction","_innerWidgetOptionChanged","innerWidget","args","getOptionsFromContainer","option","_options","cache","_bindInnerWidgetOptions","optionsContainer","syncOptions","silent","on","_getAriaTarget","_focusTarget","_contentReadyAction","_createActionByOption","excludeValidators","_initMarkup","$element","addClass","_toggleDisabledState","_toggleVisibility","_renderHint","_isFocusable","_renderFocusTarget","_render","_renderContent","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","_toggleIndependentState","_disposed","_renderContentImpl","done","_fireContentReadyAction","_dispose","_detachKeyboardEvents","_resetActiveState","_toggleActiveState","_eventBindingTarget","_clean","_cleanFocusState","empty","toggleClass","setAria","_attachKeyboardEvents","_attachFocusEvents","_renderAccessKey","$el","_getActiveElement","activeElement","_activeStateUnit","find","not","_keyboardEventBindingTarget","_refreshFocusEvent","_detachFocusEvents","_focusEventTarget","_focusInHandler","event","isDefaultPrevented","beforeExecute","_updateFocusState","_focusOutHandler","_ref","isFocused","_toggleFocusClass","$focusTarget","length","_hasFocusClass","element","hasClass","_isFocused","_getKeyboardListeners","hasChildListeners","hasKeyboardEventHandler","shouldAttach","_keyboardListenerId","opts","_keyboardHandler","onlyChildProcessing","originalEvent","keyName","which","keys","func","handler","bind","result","keyboardListeners","forEach","listener","_refreshFocusState","removeAttr","off","selector","namespace","_ref2","_hoverStartHandler","_hoverEndHandler","_ref3","_ref4","showTimeout","hideTimeout","NAME","e","isFocusable","index","el","is","_updatedHover","_hover","_findHoverTarget","closest","$previous","newHoveredElement","Boolean","_setWidgetOption","widgetName","optionName","widgetOptionMap","_optionChanged","previousValue","_isVisibilityChangeSupported","_checkVisibilityChanged","_isVisible","beginUpdate","_ready","endUpdate","_initialized","arguments","_isReady","isReady","repaint","_refresh","trigger","registerKeyHandler","key","currentKeys","_ref5","fullName","split","pop"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/widget/ui.widget.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Action from \"../../core/action\";\r\nimport DOMComponent from \"../../core/dom_component\";\r\nimport {\r\n    active,\r\n    focus,\r\n    hover,\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport {\r\n    deferRender,\r\n    deferRenderer,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    focusable as focusableSelector\r\n} from \"./selectors\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    compare as compareVersions\r\n} from \"../../core/utils/version\";\r\nimport \"../../events/click\";\r\nimport \"../../events/core/emitter.feedback\";\r\nimport \"../../events/hover\";\r\n\r\nfunction setAttribute(name, value, target) {\r\n    name = \"role\" === name || \"id\" === name ? name : \"aria-\".concat(name);\r\n    value = isDefined(value) ? value.toString() : null;\r\n    target.attr(name, value)\r\n}\r\nvar Widget = DOMComponent.inherit({\r\n    _feedbackHideTimeout: 400,\r\n    _feedbackShowTimeout: 30,\r\n    _supportedKeys: () => ({}),\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            hoveredElement: null,\r\n            isActive: false,\r\n            disabled: false,\r\n            visible: true,\r\n            hint: void 0,\r\n            activeStateEnabled: false,\r\n            onContentReady: null,\r\n            hoverStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            tabIndex: 0,\r\n            accessKey: void 0,\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyboardHandled: null,\r\n            ignoreParentReadOnly: false,\r\n            useResizeObserver: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                var device = devices.real();\r\n                var platform = device.platform;\r\n                var version = device.version;\r\n                return \"ios\" === platform && compareVersions(version, \"13.3\") <= 0 || \"android\" === platform && compareVersions(version, \"4.4.4\") <= 0\r\n            },\r\n            options: {\r\n                useResizeObserver: false\r\n            }\r\n        }])\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._initContentReadyAction()\r\n    },\r\n    _innerWidgetOptionChanged: function(innerWidget, args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        innerWidget && innerWidget.option(options);\r\n        this._options.cache(args.name, options)\r\n    },\r\n    _bindInnerWidgetOptions(innerWidget, optionsContainer) {\r\n        var syncOptions = () => this._options.silent(optionsContainer, extend({}, innerWidget.option()));\r\n        syncOptions();\r\n        innerWidget.on(\"optionChanged\", syncOptions)\r\n    },\r\n    _getAriaTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _initContentReadyAction() {\r\n        this._contentReadyAction = this._createActionByOption(\"onContentReady\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initMarkup() {\r\n        var {\r\n            disabled: disabled,\r\n            visible: visible\r\n        } = this.option();\r\n        this.$element().addClass(\"dx-widget\");\r\n        this._toggleDisabledState(disabled);\r\n        this._toggleVisibility(visible);\r\n        this._renderHint();\r\n        this._isFocusable() && this._renderFocusTarget();\r\n        this.callBase()\r\n    },\r\n    _render() {\r\n        this.callBase();\r\n        this._renderContent();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents();\r\n        this._toggleIndependentState()\r\n    },\r\n    _renderHint() {\r\n        var {\r\n            hint: hint\r\n        } = this.option();\r\n        this.$element().attr(\"title\", hint || null)\r\n    },\r\n    _renderContent() {\r\n        deferRender(() => !this._disposed ? this._renderContentImpl() : void 0).done(() => !this._disposed ? this._fireContentReadyAction() : void 0)\r\n    },\r\n    _renderContentImpl: noop,\r\n    _fireContentReadyAction: deferRenderer((function() {\r\n        return this._contentReadyAction()\r\n    })),\r\n    _dispose() {\r\n        this._contentReadyAction = null;\r\n        this._detachKeyboardEvents();\r\n        this.callBase()\r\n    },\r\n    _resetActiveState() {\r\n        this._toggleActiveState(this._eventBindingTarget(), false)\r\n    },\r\n    _clean() {\r\n        this._cleanFocusState();\r\n        this._resetActiveState();\r\n        this.callBase();\r\n        this.$element().empty()\r\n    },\r\n    _toggleVisibility(visible) {\r\n        this.$element().toggleClass(\"dx-state-invisible\", !visible);\r\n        this.setAria(\"hidden\", !visible || void 0)\r\n    },\r\n    _renderFocusState() {\r\n        this._attachKeyboardEvents();\r\n        if (this._isFocusable()) {\r\n            this._renderFocusTarget();\r\n            this._attachFocusEvents();\r\n            this._renderAccessKey()\r\n        }\r\n    },\r\n    _renderAccessKey() {\r\n        var $el = this._focusTarget();\r\n        var {\r\n            accessKey: accessKey\r\n        } = this.option();\r\n        $el.attr(\"accesskey\", accessKey)\r\n    },\r\n    _isFocusable() {\r\n        var {\r\n            focusStateEnabled: focusStateEnabled,\r\n            disabled: disabled\r\n        } = this.option();\r\n        return focusStateEnabled && !disabled\r\n    },\r\n    _eventBindingTarget() {\r\n        return this.$element()\r\n    },\r\n    _focusTarget() {\r\n        return this._getActiveElement()\r\n    },\r\n    _getActiveElement() {\r\n        var activeElement = this._eventBindingTarget();\r\n        if (this._activeStateUnit) {\r\n            return activeElement.find(this._activeStateUnit).not(\".dx-state-disabled\")\r\n        }\r\n        return activeElement\r\n    },\r\n    _renderFocusTarget() {\r\n        var {\r\n            tabIndex: tabIndex\r\n        } = this.option();\r\n        this._focusTarget().attr(\"tabIndex\", tabIndex)\r\n    },\r\n    _keyboardEventBindingTarget() {\r\n        return this._eventBindingTarget()\r\n    },\r\n    _refreshFocusEvent() {\r\n        this._detachFocusEvents();\r\n        this._attachFocusEvents()\r\n    },\r\n    _focusEventTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _focusInHandler(event) {\r\n        if (!event.isDefaultPrevented()) {\r\n            this._createActionByOption(\"onFocusIn\", {\r\n                beforeExecute: () => this._updateFocusState(event, true),\r\n                excludeValidators: [\"readOnly\"]\r\n            })({\r\n                event: event\r\n            })\r\n        }\r\n    },\r\n    _focusOutHandler(event) {\r\n        if (!event.isDefaultPrevented()) {\r\n            this._createActionByOption(\"onFocusOut\", {\r\n                beforeExecute: () => this._updateFocusState(event, false),\r\n                excludeValidators: [\"readOnly\", \"disabled\"]\r\n            })({\r\n                event: event\r\n            })\r\n        }\r\n    },\r\n    _updateFocusState(_ref, isFocused) {\r\n        var {\r\n            target: target\r\n        } = _ref;\r\n        if (-1 !== inArray(target, this._focusTarget())) {\r\n            this._toggleFocusClass(isFocused, $(target))\r\n        }\r\n    },\r\n    _toggleFocusClass(isFocused, $element) {\r\n        var $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n        $focusTarget.toggleClass(\"dx-state-focused\", isFocused)\r\n    },\r\n    _hasFocusClass(element) {\r\n        var $focusTarget = $(element || this._focusTarget());\r\n        return $focusTarget.hasClass(\"dx-state-focused\")\r\n    },\r\n    _isFocused() {\r\n        return this._hasFocusClass()\r\n    },\r\n    _getKeyboardListeners: () => [],\r\n    _attachKeyboardEvents() {\r\n        this._detachKeyboardEvents();\r\n        var {\r\n            focusStateEnabled: focusStateEnabled,\r\n            onKeyboardHandled: onKeyboardHandled\r\n        } = this.option();\r\n        var hasChildListeners = this._getKeyboardListeners().length;\r\n        var hasKeyboardEventHandler = !!onKeyboardHandled;\r\n        var shouldAttach = focusStateEnabled || hasChildListeners || hasKeyboardEventHandler;\r\n        if (shouldAttach) {\r\n            this._keyboardListenerId = keyboard.on(this._keyboardEventBindingTarget(), this._focusTarget(), opts => this._keyboardHandler(opts))\r\n        }\r\n    },\r\n    _keyboardHandler(options, onlyChildProcessing) {\r\n        if (!onlyChildProcessing) {\r\n            var {\r\n                originalEvent: originalEvent,\r\n                keyName: keyName,\r\n                which: which\r\n            } = options;\r\n            var keys = this._supportedKeys(originalEvent);\r\n            var func = keys[keyName] || keys[which];\r\n            if (void 0 !== func) {\r\n                var handler = func.bind(this);\r\n                var result = handler(originalEvent, options);\r\n                if (!result) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        var keyboardListeners = this._getKeyboardListeners();\r\n        var {\r\n            onKeyboardHandled: onKeyboardHandled\r\n        } = this.option();\r\n        keyboardListeners.forEach(listener => listener && listener._keyboardHandler(options));\r\n        onKeyboardHandled && onKeyboardHandled(options);\r\n        return true\r\n    },\r\n    _refreshFocusState() {\r\n        this._cleanFocusState();\r\n        this._renderFocusState()\r\n    },\r\n    _cleanFocusState() {\r\n        var $element = this._focusTarget();\r\n        $element.removeAttr(\"tabIndex\");\r\n        this._toggleFocusClass(false);\r\n        this._detachFocusEvents();\r\n        this._detachKeyboardEvents()\r\n    },\r\n    _detachKeyboardEvents() {\r\n        keyboard.off(this._keyboardListenerId);\r\n        this._keyboardListenerId = null\r\n    },\r\n    _attachHoverEvents() {\r\n        var {\r\n            hoverStateEnabled: hoverStateEnabled\r\n        } = this.option();\r\n        var selector = this._activeStateUnit;\r\n        var $el = this._eventBindingTarget();\r\n        hover.off($el, {\r\n            selector: selector,\r\n            namespace: \"UIFeedback\"\r\n        });\r\n        if (hoverStateEnabled) {\r\n            hover.on($el, new Action(_ref2 => {\r\n                var {\r\n                    event: event,\r\n                    element: element\r\n                } = _ref2;\r\n                this._hoverStartHandler(event);\r\n                this.option(\"hoveredElement\", $(element))\r\n            }, {\r\n                excludeValidators: [\"readOnly\"]\r\n            }), event => {\r\n                this.option(\"hoveredElement\", null);\r\n                this._hoverEndHandler(event)\r\n            }, {\r\n                selector: selector,\r\n                namespace: \"UIFeedback\"\r\n            })\r\n        }\r\n    },\r\n    _attachFeedbackEvents() {\r\n        var {\r\n            activeStateEnabled: activeStateEnabled\r\n        } = this.option();\r\n        var selector = this._activeStateUnit;\r\n        var $el = this._eventBindingTarget();\r\n        active.off($el, {\r\n            namespace: \"UIFeedback\",\r\n            selector: selector\r\n        });\r\n        if (activeStateEnabled) {\r\n            active.on($el, new Action(_ref3 => {\r\n                var {\r\n                    event: event,\r\n                    element: element\r\n                } = _ref3;\r\n                return this._toggleActiveState($(element), true, event)\r\n            }), new Action(_ref4 => {\r\n                var {\r\n                    event: event,\r\n                    element: element\r\n                } = _ref4;\r\n                return this._toggleActiveState($(element), false, event)\r\n            }, {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            }), {\r\n                showTimeout: this._feedbackShowTimeout,\r\n                hideTimeout: this._feedbackHideTimeout,\r\n                selector: selector,\r\n                namespace: \"UIFeedback\"\r\n            })\r\n        }\r\n    },\r\n    _detachFocusEvents() {\r\n        var $el = this._focusEventTarget();\r\n        focus.off($el, {\r\n            namespace: \"\".concat(this.NAME, \"Focus\")\r\n        })\r\n    },\r\n    _attachFocusEvents() {\r\n        var $el = this._focusEventTarget();\r\n        focus.on($el, e => this._focusInHandler(e), e => this._focusOutHandler(e), {\r\n            namespace: \"\".concat(this.NAME, \"Focus\"),\r\n            isFocusable: (index, el) => $(el).is(focusableSelector)\r\n        })\r\n    },\r\n    _hoverStartHandler: noop,\r\n    _hoverEndHandler: noop,\r\n    _toggleActiveState($element, value) {\r\n        this.option(\"isActive\", value);\r\n        $element.toggleClass(\"dx-state-active\", value)\r\n    },\r\n    _updatedHover() {\r\n        var hoveredElement = this._options.silent(\"hoveredElement\");\r\n        this._hover(hoveredElement, hoveredElement)\r\n    },\r\n    _findHoverTarget($el) {\r\n        return $el && $el.closest(this._activeStateUnit || this._eventBindingTarget())\r\n    },\r\n    _hover($el, $previous) {\r\n        var {\r\n            hoverStateEnabled: hoverStateEnabled,\r\n            disabled: disabled,\r\n            isActive: isActive\r\n        } = this.option();\r\n        $previous = this._findHoverTarget($previous);\r\n        $previous && $previous.toggleClass(\"dx-state-hover\", false);\r\n        if ($el && hoverStateEnabled && !disabled && !isActive) {\r\n            var newHoveredElement = this._findHoverTarget($el);\r\n            newHoveredElement && newHoveredElement.toggleClass(\"dx-state-hover\", true)\r\n        }\r\n    },\r\n    _toggleDisabledState(value) {\r\n        this.$element().toggleClass(\"dx-state-disabled\", Boolean(value));\r\n        this.setAria(\"disabled\", value || void 0)\r\n    },\r\n    _toggleIndependentState() {\r\n        this.$element().toggleClass(\"dx-state-independent\", this.option(\"ignoreParentReadOnly\"))\r\n    },\r\n    _setWidgetOption(widgetName, args) {\r\n        if (!this[widgetName]) {\r\n            return\r\n        }\r\n        if (isPlainObject(args[0])) {\r\n            each(args[0], (option, value) => this._setWidgetOption(widgetName, [option, value]));\r\n            return\r\n        }\r\n        var optionName = args[0];\r\n        var value = args[1];\r\n        if (1 === args.length) {\r\n            value = this.option(optionName)\r\n        }\r\n        var widgetOptionMap = this[\"\".concat(widgetName, \"OptionMap\")];\r\n        this[widgetName].option(widgetOptionMap ? widgetOptionMap(optionName) : optionName, value)\r\n    },\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name,\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        switch (name) {\r\n            case \"disabled\":\r\n                this._toggleDisabledState(value);\r\n                this._updatedHover();\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"hint\":\r\n                this._renderHint();\r\n                break;\r\n            case \"ignoreParentReadOnly\":\r\n                this._toggleIndependentState();\r\n                break;\r\n            case \"activeStateEnabled\":\r\n                this._attachFeedbackEvents();\r\n                break;\r\n            case \"hoverStateEnabled\":\r\n                this._attachHoverEvents();\r\n                this._updatedHover();\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"onFocusIn\":\r\n            case \"onFocusOut\":\r\n            case \"useResizeObserver\":\r\n                break;\r\n            case \"accessKey\":\r\n                this._renderAccessKey();\r\n                break;\r\n            case \"hoveredElement\":\r\n                this._hover(value, previousValue);\r\n                break;\r\n            case \"isActive\":\r\n                this._updatedHover();\r\n                break;\r\n            case \"visible\":\r\n                this._toggleVisibility(value);\r\n                if (this._isVisibilityChangeSupported()) {\r\n                    this._checkVisibilityChanged(value ? \"shown\" : \"hiding\")\r\n                }\r\n                break;\r\n            case \"onKeyboardHandled\":\r\n                this._attachKeyboardEvents();\r\n                break;\r\n            case \"onContentReady\":\r\n                this._initContentReadyAction();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _isVisible() {\r\n        var {\r\n            visible: visible\r\n        } = this.option();\r\n        return this.callBase() && visible\r\n    },\r\n    beginUpdate() {\r\n        this._ready(false);\r\n        this.callBase()\r\n    },\r\n    endUpdate() {\r\n        this.callBase();\r\n        if (this._initialized) {\r\n            this._ready(true)\r\n        }\r\n    },\r\n    _ready(value) {\r\n        if (0 === arguments.length) {\r\n            return this._isReady\r\n        }\r\n        this._isReady = value\r\n    },\r\n    setAria() {\r\n        if (!isPlainObject(arguments.length <= 0 ? void 0 : arguments[0])) {\r\n            setAttribute(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], (arguments.length <= 2 ? void 0 : arguments[2]) || this._getAriaTarget())\r\n        } else {\r\n            var target = (arguments.length <= 1 ? void 0 : arguments[1]) || this._getAriaTarget();\r\n            each(arguments.length <= 0 ? void 0 : arguments[0], (name, value) => setAttribute(name, value, target))\r\n        }\r\n    },\r\n    isReady() {\r\n        return this._ready()\r\n    },\r\n    repaint() {\r\n        this._refresh()\r\n    },\r\n    focus() {\r\n        focus.trigger(this._focusTarget())\r\n    },\r\n    registerKeyHandler(key, handler) {\r\n        var currentKeys = this._supportedKeys();\r\n        this._supportedKeys = () => extend(currentKeys, {\r\n            [key]: handler\r\n        })\r\n    }\r\n});\r\nWidget.getOptionsFromContainer = _ref5 => {\r\n    var {\r\n        name: name,\r\n        fullName: fullName,\r\n        value: value\r\n    } = _ref5;\r\n    var options = {};\r\n    if (name === fullName) {\r\n        options = value\r\n    } else {\r\n        var option = fullName.split(\".\").pop();\r\n        options[option] = value\r\n    }\r\n    return options\r\n};\r\nexport default Widget;\r\n"]},"metadata":{},"sourceType":"module"}