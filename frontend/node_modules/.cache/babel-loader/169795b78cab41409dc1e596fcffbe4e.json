{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test Repo\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import HistoryChart from\"../components/pages/HistoryChart\";import CoinData from\"../components/pages/CoinData\";import coinGecko from\"../apis/coinGecko\";import{Chart}from\"chart.js\";import{jsx as _jsx}from\"react/jsx-runtime\";var CoinDetailPage=function CoinDetailPage(){var _useParams=useParams(),id=_useParams.id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),coinData=_useState2[0],setCoinData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var formatData=function formatData(data){return data.map(function(el){return{t:el[0],y:el[1].toFixed(2)};});};useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,day,week,twoWeek,month,threeMonth,year,detail;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.next=3;return Promise.all([coinGecko.get(\"/coins/\".concat(id,\"/market_chart/\"),{params:{vs_currency:\"usd\",days:\"1\"}}),coinGecko.get(\"/coins/\".concat(id,\"/market_chart/\"),{params:{vs_currency:\"usd\",days:\"7\"}}),coinGecko.get(\"/coins/\".concat(id,\"/market_chart/\"),{params:{vs_currency:\"usd\",days:\"14\"}}),coinGecko.get(\"/coins/\".concat(id,\"/market_chart/\"),{params:{vs_currency:\"usd\",days:\"30\"}}),coinGecko.get(\"/coins/\".concat(id,\"/market_chart/\"),{params:{vs_currency:\"usd\",days:\"90\"}}),coinGecko.get(\"/coins/\".concat(id,\"/market_chart/\"),{params:{vs_currency:\"usd\",days:\"365\"}}),coinGecko.get(\"/coins/markets/\",{params:{vs_currency:\"usd\",ids:id}})]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,7);day=_yield$Promise$all2[0];week=_yield$Promise$all2[1];twoWeek=_yield$Promise$all2[2];month=_yield$Promise$all2[3];threeMonth=_yield$Promise$all2[4];year=_yield$Promise$all2[5];detail=_yield$Promise$all2[6];setCoinData({day:formatData(day.data.prices),week:formatData(week.data.prices),twoWeek:formatData(twoWeek.data.prices),month:formatData(month.data.prices),threeMonth:formatData(threeMonth.data.prices),year:formatData(year.data.prices),detail:detail.data[0]});setIsLoading(false);case 14:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var renderData=function renderData(){if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"coinlist\",children:/*#__PURE__*/_jsx(HistoryChart,{data:coinData})});};return renderData();};export default CoinDetailPage;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/src/pages/CoinDetailPage.jsx"],"names":["React","useEffect","useState","useParams","HistoryChart","CoinData","coinGecko","Chart","CoinDetailPage","id","coinData","setCoinData","isLoading","setIsLoading","formatData","data","map","el","t","y","toFixed","fetchData","Promise","all","get","params","vs_currency","days","ids","day","week","twoWeek","month","threeMonth","year","detail","prices","renderData"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport HistoryChart from \"../components/pages/HistoryChart\";\r\nimport CoinData from \"../components/pages/CoinData\";\r\nimport coinGecko from \"../apis/coinGecko\";\r\nimport {Chart} from \"chart.js\";\r\n\r\nconst CoinDetailPage = () => {\r\n    const { id } = useParams();\r\n    const [coinData, setCoinData] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const formatData = data => {\r\n        return data.map(el => {\r\n            return {\r\n                t:el[0],\r\n                y: el[1].toFixed(2),\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true)\r\n            const [day, week, twoWeek, month, threeMonth, year, detail] = await Promise.all([\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"1\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"7\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"14\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"30\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"90\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"365\",\r\n                    },\r\n                }),\r\n                coinGecko.get(\"/coins/markets/\", {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        ids: id\r\n                    },\r\n                }),\r\n            ]);\r\n\r\n            setCoinData({\r\n                day: formatData(day.data.prices),\r\n                week:formatData(week.data.prices),\r\n                twoWeek: formatData(twoWeek.data.prices),\r\n                month: formatData(month.data.prices),\r\n                threeMonth: formatData(threeMonth.data.prices),\r\n                year: formatData(year.data.prices),\r\n                detail: detail.data[0]\r\n            });\r\n            setIsLoading(false)\r\n        };\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const renderData = () => {\r\n        if(isLoading){\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div className=\"coinlist\">\r\n                <HistoryChart data={coinData}/>\r\n                {/*<CoinData data={coinData.detail}/>*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return renderData();\r\n};\r\n\r\nexport default CoinDetailPage;"]},"metadata":{},"sourceType":"module"}