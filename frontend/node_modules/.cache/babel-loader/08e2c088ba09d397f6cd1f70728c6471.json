{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/core/keyboard_processor.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Class from \"../../core/class\";\nimport { inArray } from \"../../core/utils/array\";\nimport { addNamespace, normalizeKeyName } from \"../../events/utils/index\";\nvar COMPOSITION_START_EVENT = \"compositionstart\";\nvar COMPOSITION_END_EVENT = \"compositionend\";\nvar KEYDOWN_EVENT = \"keydown\";\nvar NAMESPACE = \"KeyboardProcessor\";\n\nvar createKeyDownOptions = e => ({\n  keyName: normalizeKeyName(e),\n  key: e.key,\n  code: e.code,\n  ctrl: e.ctrlKey,\n  location: e.location,\n  metaKey: e.metaKey,\n  shift: e.shiftKey,\n  alt: e.altKey,\n  which: e.which,\n  originalEvent: e\n});\n\nvar KeyboardProcessor = Class.inherit({\n  _keydown: addNamespace(KEYDOWN_EVENT, NAMESPACE),\n  _compositionStart: addNamespace(COMPOSITION_START_EVENT, NAMESPACE),\n  _compositionEnd: addNamespace(COMPOSITION_END_EVENT, NAMESPACE),\n  ctor: function (options) {\n    options = options || {};\n\n    if (options.element) {\n      this._element = $(options.element);\n    }\n\n    if (options.focusTarget) {\n      this._focusTarget = options.focusTarget;\n    }\n\n    this._handler = options.handler;\n\n    if (this._element) {\n      this._processFunction = e => {\n        var isNotFocusTarget = this._focusTarget && this._focusTarget !== e.target && inArray(e.target, $(this._focusTarget)) < 0;\n        var shouldSkipProcessing = this._isComposingJustFinished && 229 === e.which || this._isComposing || isNotFocusTarget;\n        this._isComposingJustFinished = false;\n\n        if (!shouldSkipProcessing) {\n          this.process(e);\n        }\n      };\n\n      this._toggleProcessingWithContext = this.toggleProcessing.bind(this);\n      eventsEngine.on(this._element, this._keydown, this._processFunction);\n      eventsEngine.on(this._element, this._compositionStart, this._toggleProcessingWithContext);\n      eventsEngine.on(this._element, this._compositionEnd, this._toggleProcessingWithContext);\n    }\n  },\n  dispose: function () {\n    if (this._element) {\n      eventsEngine.off(this._element, this._keydown, this._processFunction);\n      eventsEngine.off(this._element, this._compositionStart, this._toggleProcessingWithContext);\n      eventsEngine.off(this._element, this._compositionEnd, this._toggleProcessingWithContext);\n    }\n\n    this._element = void 0;\n    this._handler = void 0;\n  },\n  process: function (e) {\n    this._handler(createKeyDownOptions(e));\n  },\n  toggleProcessing: function (_ref) {\n    var {\n      type: type\n    } = _ref;\n    this._isComposing = type === COMPOSITION_START_EVENT;\n    this._isComposingJustFinished = !this._isComposing;\n  }\n});\nKeyboardProcessor.createKeyDownOptions = createKeyDownOptions;\nexport default KeyboardProcessor;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/events/core/keyboard_processor.js"],"names":["$","eventsEngine","Class","inArray","addNamespace","normalizeKeyName","COMPOSITION_START_EVENT","COMPOSITION_END_EVENT","KEYDOWN_EVENT","NAMESPACE","createKeyDownOptions","e","keyName","key","code","ctrl","ctrlKey","location","metaKey","shift","shiftKey","alt","altKey","which","originalEvent","KeyboardProcessor","inherit","_keydown","_compositionStart","_compositionEnd","ctor","options","element","_element","focusTarget","_focusTarget","_handler","handler","_processFunction","isNotFocusTarget","target","shouldSkipProcessing","_isComposingJustFinished","_isComposing","process","_toggleProcessingWithContext","toggleProcessing","bind","on","dispose","off","_ref","type"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/events/core/keyboard_processor.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar COMPOSITION_START_EVENT = \"compositionstart\";\r\nvar COMPOSITION_END_EVENT = \"compositionend\";\r\nvar KEYDOWN_EVENT = \"keydown\";\r\nvar NAMESPACE = \"KeyboardProcessor\";\r\nvar createKeyDownOptions = e => ({\r\n    keyName: normalizeKeyName(e),\r\n    key: e.key,\r\n    code: e.code,\r\n    ctrl: e.ctrlKey,\r\n    location: e.location,\r\n    metaKey: e.metaKey,\r\n    shift: e.shiftKey,\r\n    alt: e.altKey,\r\n    which: e.which,\r\n    originalEvent: e\r\n});\r\nvar KeyboardProcessor = Class.inherit({\r\n    _keydown: addNamespace(KEYDOWN_EVENT, NAMESPACE),\r\n    _compositionStart: addNamespace(COMPOSITION_START_EVENT, NAMESPACE),\r\n    _compositionEnd: addNamespace(COMPOSITION_END_EVENT, NAMESPACE),\r\n    ctor: function(options) {\r\n        options = options || {};\r\n        if (options.element) {\r\n            this._element = $(options.element)\r\n        }\r\n        if (options.focusTarget) {\r\n            this._focusTarget = options.focusTarget\r\n        }\r\n        this._handler = options.handler;\r\n        if (this._element) {\r\n            this._processFunction = e => {\r\n                var isNotFocusTarget = this._focusTarget && this._focusTarget !== e.target && inArray(e.target, $(this._focusTarget)) < 0;\r\n                var shouldSkipProcessing = this._isComposingJustFinished && 229 === e.which || this._isComposing || isNotFocusTarget;\r\n                this._isComposingJustFinished = false;\r\n                if (!shouldSkipProcessing) {\r\n                    this.process(e)\r\n                }\r\n            };\r\n            this._toggleProcessingWithContext = this.toggleProcessing.bind(this);\r\n            eventsEngine.on(this._element, this._keydown, this._processFunction);\r\n            eventsEngine.on(this._element, this._compositionStart, this._toggleProcessingWithContext);\r\n            eventsEngine.on(this._element, this._compositionEnd, this._toggleProcessingWithContext)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._element) {\r\n            eventsEngine.off(this._element, this._keydown, this._processFunction);\r\n            eventsEngine.off(this._element, this._compositionStart, this._toggleProcessingWithContext);\r\n            eventsEngine.off(this._element, this._compositionEnd, this._toggleProcessingWithContext)\r\n        }\r\n        this._element = void 0;\r\n        this._handler = void 0\r\n    },\r\n    process: function(e) {\r\n        this._handler(createKeyDownOptions(e))\r\n    },\r\n    toggleProcessing: function(_ref) {\r\n        var {\r\n            type: type\r\n        } = _ref;\r\n        this._isComposing = type === COMPOSITION_START_EVENT;\r\n        this._isComposingJustFinished = !this._isComposing\r\n    }\r\n});\r\nKeyboardProcessor.createKeyDownOptions = createKeyDownOptions;\r\nexport default KeyboardProcessor;\r\n"]},"metadata":{},"sourceType":"module"}