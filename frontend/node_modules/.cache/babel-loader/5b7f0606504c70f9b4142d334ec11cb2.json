{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/polyfills/promise.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { Deferred, when } from \"../../core/utils/deferred\";\nimport { hasWindow, getWindow } from \"../../core/utils/window\";\nvar promise = hasWindow() ? getWindow().Promise : Promise;\n\nif (!promise) {\n  promise = function (resolver) {\n    var d = new Deferred();\n    resolver(d.resolve.bind(this), d.reject.bind(this));\n    return d.promise();\n  };\n\n  promise.resolve = function (val) {\n    return new Deferred().resolve(val).promise();\n  };\n\n  promise.reject = function (val) {\n    return new Deferred().reject(val).promise();\n  };\n\n  promise.all = function (promises) {\n    return when.apply(this, promises).then(function () {\n      return [].slice.call(arguments);\n    });\n  };\n}\n\nexport default promise;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/polyfills/promise.js"],"names":["Deferred","when","hasWindow","getWindow","promise","Promise","resolver","d","resolve","bind","reject","val","all","promises","apply","then","slice","call","arguments"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,QADJ,EAEIC,IAFJ,QAGO,2BAHP;AAIA,SACIC,SADJ,EAEIC,SAFJ,QAGO,yBAHP;AAIA,IAAIC,OAAO,GAAGF,SAAS,KAAKC,SAAS,GAAGE,OAAjB,GAA2BA,OAAlD;;AACA,IAAI,CAACD,OAAL,EAAc;AACVA,EAAAA,OAAO,GAAG,UAASE,QAAT,EAAmB;AACzB,QAAIC,CAAC,GAAG,IAAIP,QAAJ,EAAR;AACAM,IAAAA,QAAQ,CAACC,CAAC,CAACC,OAAF,CAAUC,IAAV,CAAe,IAAf,CAAD,EAAuBF,CAAC,CAACG,MAAF,CAASD,IAAT,CAAc,IAAd,CAAvB,CAAR;AACA,WAAOF,CAAC,CAACH,OAAF,EAAP;AACH,GAJD;;AAKAA,EAAAA,OAAO,CAACI,OAAR,GAAkB,UAASG,GAAT,EAAc;AAC5B,WAAQ,IAAIX,QAAJ,EAAD,CAAeQ,OAAf,CAAuBG,GAAvB,EAA4BP,OAA5B,EAAP;AACH,GAFD;;AAGAA,EAAAA,OAAO,CAACM,MAAR,GAAiB,UAASC,GAAT,EAAc;AAC3B,WAAQ,IAAIX,QAAJ,EAAD,CAAeU,MAAf,CAAsBC,GAAtB,EAA2BP,OAA3B,EAAP;AACH,GAFD;;AAGAA,EAAAA,OAAO,CAACQ,GAAR,GAAc,UAASC,QAAT,EAAmB;AAC7B,WAAOZ,IAAI,CAACa,KAAL,CAAW,IAAX,EAAiBD,QAAjB,EAA2BE,IAA3B,CAAiC,YAAW;AAC/C,aAAO,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;AAKH;;AACD,eAAed,OAAf","sourcesContent":["/**\r\n * DevExtreme (esm/core/polyfills/promise.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nvar promise = hasWindow() ? getWindow().Promise : Promise;\r\nif (!promise) {\r\n    promise = function(resolver) {\r\n        var d = new Deferred;\r\n        resolver(d.resolve.bind(this), d.reject.bind(this));\r\n        return d.promise()\r\n    };\r\n    promise.resolve = function(val) {\r\n        return (new Deferred).resolve(val).promise()\r\n    };\r\n    promise.reject = function(val) {\r\n        return (new Deferred).reject(val).promise()\r\n    };\r\n    promise.all = function(promises) {\r\n        return when.apply(this, promises).then((function() {\r\n            return [].slice.call(arguments)\r\n        }))\r\n    }\r\n}\r\nexport default promise;\r\n"]},"metadata":{},"sourceType":"module"}