{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/template_manager.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport config from \"../config\";\nimport devices from \"../devices\";\nimport Errors from \"../errors\";\nimport $ from \"../renderer\";\nimport { ChildDefaultTemplate } from \"../templates/child_default_template\";\nimport { EmptyTemplate } from \"../templates/empty_template\";\nimport { Template } from \"../templates/template\";\nimport { TemplateBase } from \"../templates/template_base\";\nimport { groupBy } from \"./array\";\nimport { findBestMatches } from \"./common\";\nimport { normalizeTemplateElement } from \"./dom\";\nimport { extend } from \"./extend\";\nimport { isFunction, isRenderer } from \"./type\";\nexport var findTemplates = (element, name) => {\n  var templates = $(element).contents().filter(\"[\".concat(\"data-options\", '*=\"').concat(name, '\"]'));\n  return [].slice.call(templates).map(element => {\n    var optionsString = $(element).attr(\"data-options\") || \"\";\n    return {\n      element: element,\n      options: config().optionsParser(optionsString)[name]\n    };\n  }).filter(template => !!template.options);\n};\nexport var suitableTemplatesByName = rawTemplates => {\n  var templatesMap = groupBy(rawTemplates, template => template.options.name);\n\n  if (templatesMap[void 0]) {\n    throw Errors.Error(\"E0023\");\n  }\n\n  var result = {};\n  Object.keys(templatesMap).forEach(name => {\n    var _findBestMatches$;\n\n    var suitableTemplate = null === (_findBestMatches$ = findBestMatches(devices.current(), templatesMap[name], template => template.options)[0]) || void 0 === _findBestMatches$ ? void 0 : _findBestMatches$.element;\n\n    if (suitableTemplate) {\n      result[name] = suitableTemplate;\n    }\n  });\n  return result;\n};\nexport var addOneRenderedCall = template => {\n  var render = template.render.bind(template);\n  return extend({}, template, {\n    render(options) {\n      var templateResult = render(options);\n      options && options.onRendered && options.onRendered();\n      return templateResult;\n    }\n\n  });\n};\nexport var getNormalizedTemplateArgs = options => {\n  var args = [];\n\n  if (\"model\" in options) {\n    args.push(options.model);\n  }\n\n  if (\"index\" in options) {\n    args.push(options.index);\n  }\n\n  args.push(options.container);\n  return args;\n};\nexport var validateTemplateSource = templateSource => \"string\" === typeof templateSource ? normalizeTemplateElement(templateSource) : templateSource;\nexport var templateKey = templateSource => isRenderer(templateSource) && templateSource[0] || templateSource;\nexport var defaultCreateElement = element => new Template(element);\nexport var acquireIntegrationTemplate = (templateSource, templates, isAsyncTemplate, skipTemplates) => {\n  var integrationTemplate = null;\n\n  if (!skipTemplates || -1 === skipTemplates.indexOf(templateSource)) {\n    integrationTemplate = templates[templateSource];\n\n    if (integrationTemplate && !(integrationTemplate instanceof TemplateBase) && !isAsyncTemplate) {\n      integrationTemplate = addOneRenderedCall(integrationTemplate);\n    }\n  }\n\n  return integrationTemplate;\n};\nexport var acquireTemplate = (templateSource, createTemplate, templates, isAsyncTemplate, skipTemplates, defaultTemplates) => {\n  if (null == templateSource) {\n    return new EmptyTemplate();\n  }\n\n  if (templateSource instanceof ChildDefaultTemplate) {\n    return defaultTemplates[templateSource.name];\n  }\n\n  if (templateSource instanceof TemplateBase) {\n    return templateSource;\n  }\n\n  if (isFunction(templateSource.render) && !isRenderer(templateSource)) {\n    return isAsyncTemplate ? templateSource : addOneRenderedCall(templateSource);\n  }\n\n  if (templateSource.nodeType || isRenderer(templateSource)) {\n    return createTemplate($(templateSource));\n  }\n\n  return acquireIntegrationTemplate(templateSource, templates, isAsyncTemplate, skipTemplates) || defaultTemplates[templateSource] || createTemplate(templateSource);\n};","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/utils/template_manager.js"],"names":["config","devices","Errors","$","ChildDefaultTemplate","EmptyTemplate","Template","TemplateBase","groupBy","findBestMatches","normalizeTemplateElement","extend","isFunction","isRenderer","findTemplates","element","name","templates","contents","filter","concat","slice","call","map","optionsString","attr","options","optionsParser","template","suitableTemplatesByName","rawTemplates","templatesMap","Error","result","Object","keys","forEach","_findBestMatches$","suitableTemplate","current","addOneRenderedCall","render","bind","templateResult","onRendered","getNormalizedTemplateArgs","args","push","model","index","container","validateTemplateSource","templateSource","templateKey","defaultCreateElement","acquireIntegrationTemplate","isAsyncTemplate","skipTemplates","integrationTemplate","indexOf","acquireTemplate","createTemplate","defaultTemplates","nodeType"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/template_manager.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport config from \"../config\";\r\nimport devices from \"../devices\";\r\nimport Errors from \"../errors\";\r\nimport $ from \"../renderer\";\r\nimport {\r\n    ChildDefaultTemplate\r\n} from \"../templates/child_default_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../templates/empty_template\";\r\nimport {\r\n    Template\r\n} from \"../templates/template\";\r\nimport {\r\n    TemplateBase\r\n} from \"../templates/template_base\";\r\nimport {\r\n    groupBy\r\n} from \"./array\";\r\nimport {\r\n    findBestMatches\r\n} from \"./common\";\r\nimport {\r\n    normalizeTemplateElement\r\n} from \"./dom\";\r\nimport {\r\n    extend\r\n} from \"./extend\";\r\nimport {\r\n    isFunction,\r\n    isRenderer\r\n} from \"./type\";\r\nexport var findTemplates = (element, name) => {\r\n    var templates = $(element).contents().filter(\"[\".concat(\"data-options\", '*=\"').concat(name, '\"]'));\r\n    return [].slice.call(templates).map(element => {\r\n        var optionsString = $(element).attr(\"data-options\") || \"\";\r\n        return {\r\n            element: element,\r\n            options: config().optionsParser(optionsString)[name]\r\n        }\r\n    }).filter(template => !!template.options)\r\n};\r\nexport var suitableTemplatesByName = rawTemplates => {\r\n    var templatesMap = groupBy(rawTemplates, template => template.options.name);\r\n    if (templatesMap[void 0]) {\r\n        throw Errors.Error(\"E0023\")\r\n    }\r\n    var result = {};\r\n    Object.keys(templatesMap).forEach(name => {\r\n        var _findBestMatches$;\r\n        var suitableTemplate = null === (_findBestMatches$ = findBestMatches(devices.current(), templatesMap[name], template => template.options)[0]) || void 0 === _findBestMatches$ ? void 0 : _findBestMatches$.element;\r\n        if (suitableTemplate) {\r\n            result[name] = suitableTemplate\r\n        }\r\n    });\r\n    return result\r\n};\r\nexport var addOneRenderedCall = template => {\r\n    var render = template.render.bind(template);\r\n    return extend({}, template, {\r\n        render(options) {\r\n            var templateResult = render(options);\r\n            options && options.onRendered && options.onRendered();\r\n            return templateResult\r\n        }\r\n    })\r\n};\r\nexport var getNormalizedTemplateArgs = options => {\r\n    var args = [];\r\n    if (\"model\" in options) {\r\n        args.push(options.model)\r\n    }\r\n    if (\"index\" in options) {\r\n        args.push(options.index)\r\n    }\r\n    args.push(options.container);\r\n    return args\r\n};\r\nexport var validateTemplateSource = templateSource => \"string\" === typeof templateSource ? normalizeTemplateElement(templateSource) : templateSource;\r\nexport var templateKey = templateSource => isRenderer(templateSource) && templateSource[0] || templateSource;\r\nexport var defaultCreateElement = element => new Template(element);\r\nexport var acquireIntegrationTemplate = (templateSource, templates, isAsyncTemplate, skipTemplates) => {\r\n    var integrationTemplate = null;\r\n    if (!skipTemplates || -1 === skipTemplates.indexOf(templateSource)) {\r\n        integrationTemplate = templates[templateSource];\r\n        if (integrationTemplate && !(integrationTemplate instanceof TemplateBase) && !isAsyncTemplate) {\r\n            integrationTemplate = addOneRenderedCall(integrationTemplate)\r\n        }\r\n    }\r\n    return integrationTemplate\r\n};\r\nexport var acquireTemplate = (templateSource, createTemplate, templates, isAsyncTemplate, skipTemplates, defaultTemplates) => {\r\n    if (null == templateSource) {\r\n        return new EmptyTemplate\r\n    }\r\n    if (templateSource instanceof ChildDefaultTemplate) {\r\n        return defaultTemplates[templateSource.name]\r\n    }\r\n    if (templateSource instanceof TemplateBase) {\r\n        return templateSource\r\n    }\r\n    if (isFunction(templateSource.render) && !isRenderer(templateSource)) {\r\n        return isAsyncTemplate ? templateSource : addOneRenderedCall(templateSource)\r\n    }\r\n    if (templateSource.nodeType || isRenderer(templateSource)) {\r\n        return createTemplate($(templateSource))\r\n    }\r\n    return acquireIntegrationTemplate(templateSource, templates, isAsyncTemplate, skipTemplates) || defaultTemplates[templateSource] || createTemplate(templateSource)\r\n};\r\n"]},"metadata":{},"sourceType":"module"}