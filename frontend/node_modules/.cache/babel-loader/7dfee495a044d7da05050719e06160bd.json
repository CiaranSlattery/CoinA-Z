{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test Repo\\\\frontend\\\\src\\\\pages\\\\CoinDetailPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport HistoryChart from \"../components/pages/HistoryChart\";\nimport CoinData from \"../components/pages/CoinData\";\nimport coinGecko from \"../apis/coinGecko\";\nimport { Chart } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinDetailPage = () => {\n  const {\n    id\n  } = useParams();\n  const [coinData, setCoinData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatData = data => {\n    return data.map(el => {\n      return {\n        t: el[0],\n        y: el[1].toFixed(2)\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const [day, week, twoWeek, month, threeMonth, year, detail] = await Promise.all([coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"1\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"7\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"14\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"30\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"90\"\n        }\n      }), coinGecko.get(`/coins/${id}/market_chart/`, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"365\"\n        }\n      }), coinGecko.get(\"/coins/markets/\", {\n        params: {\n          vs_currency: \"usd\",\n          ids: id\n        }\n      })]);\n      setCoinData({\n        day: formatData(day.data.prices),\n        week: formatData(week.data.prices),\n        twoWeek: formatData(twoWeek.data.prices),\n        month: formatData(month.data.prices),\n        threeMonth: formatData(threeMonth.data.prices),\n        year: formatData(year.data.prices),\n        detail: detail.data[0]\n      });\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const renderData = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coinlist\",\n      children: /*#__PURE__*/_jsxDEV(HistoryChart, {\n        data: coinData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n\n  return renderData();\n};\n\nexport default CoinDetailPage;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/src/pages/CoinDetailPage.jsx"],"names":["React","useEffect","useState","useParams","HistoryChart","CoinData","coinGecko","Chart","CoinDetailPage","id","coinData","setCoinData","isLoading","setIsLoading","formatData","data","map","el","t","y","toFixed","fetchData","day","week","twoWeek","month","threeMonth","year","detail","Promise","all","get","params","vs_currency","days","ids","prices","renderData"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport HistoryChart from \"../components/pages/HistoryChart\";\r\nimport CoinData from \"../components/pages/CoinData\";\r\nimport coinGecko from \"../apis/coinGecko\";\r\nimport {Chart} from \"chart.js\";\r\n\r\nconst CoinDetailPage = () => {\r\n    const { id } = useParams();\r\n    const [coinData, setCoinData] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const formatData = data => {\r\n        return data.map(el => {\r\n            return {\r\n                t:el[0],\r\n                y: el[1].toFixed(2),\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true)\r\n            const [day, week, twoWeek, month, threeMonth, year, detail] = await Promise.all([\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"1\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"7\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"14\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"30\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"90\",\r\n                    },\r\n                }),\r\n                coinGecko.get(`/coins/${id}/market_chart/`, {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        days: \"365\",\r\n                    },\r\n                }),\r\n                coinGecko.get(\"/coins/markets/\", {\r\n                    params: {\r\n                        vs_currency: \"usd\",\r\n                        ids: id\r\n                    },\r\n                }),\r\n            ]);\r\n\r\n            setCoinData({\r\n                day: formatData(day.data.prices),\r\n                week:formatData(week.data.prices),\r\n                twoWeek: formatData(twoWeek.data.prices),\r\n                month: formatData(month.data.prices),\r\n                threeMonth: formatData(threeMonth.data.prices),\r\n                year: formatData(year.data.prices),\r\n                detail: detail.data[0]\r\n            });\r\n            setIsLoading(false)\r\n        };\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const renderData = () => {\r\n        if(isLoading){\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div className=\"coinlist\">\r\n                <HistoryChart data={coinData}/>\r\n                {/*<CoinData data={coinData.detail}/>*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return renderData();\r\n};\r\n\r\nexport default CoinDetailPage;"]},"metadata":{},"sourceType":"module"}