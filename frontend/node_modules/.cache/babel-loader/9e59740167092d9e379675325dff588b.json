{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/inferno_renderer.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { render as _render } from \"inferno\";\nimport { InfernoEffectHost, hydrate } from \"@devextreme/runtime/inferno\";\nimport { createElement as _createElement } from \"inferno-create-element\";\nimport domAdapter from \"./dom_adapter\";\nimport { cleanDataRecursive } from \"./element_data\";\nimport injector from \"./utils/dependency_injector\";\n\nvar remove = element => {\n  var {\n    parentNode: parentNode\n  } = element;\n\n  if (parentNode) {\n    cleanDataRecursive(element);\n    parentNode.$V = element.$V;\n\n    _render(null, parentNode);\n\n    parentNode.appendChild(element);\n    element.innerHTML = \"\";\n    delete parentNode.$V;\n  }\n\n  delete element.$V;\n};\n\nexport default injector({\n  createElement: (component, props) => _createElement(component, props),\n  remove: remove,\n  onAfterRender: () => {\n    InfernoEffectHost.callEffects();\n  },\n  onPreRender: () => {\n    InfernoEffectHost.lock();\n  },\n  render: (component, props, container, replace) => {\n    if (!replace) {\n      var {\n        parentNode: parentNode\n      } = container;\n      var nextNode = null === container || void 0 === container ? void 0 : container.nextSibling;\n      var rootNode = domAdapter.createElement(\"div\");\n      rootNode.appendChild(container);\n      var mountNode = domAdapter.createDocumentFragment().appendChild(rootNode);\n      var vNodeAlreadyExists = !!container.$V;\n      vNodeAlreadyExists && remove(container);\n      hydrate(_createElement(component, props), mountNode);\n      container.$V = mountNode.$V;\n\n      if (parentNode) {\n        parentNode.insertBefore(container, nextNode);\n      }\n    } else {\n      _render(_createElement(component, props), container);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/inferno_renderer.js"],"names":["render","_render","InfernoEffectHost","hydrate","createElement","_createElement","domAdapter","cleanDataRecursive","injector","remove","element","parentNode","$V","appendChild","innerHTML","component","props","onAfterRender","callEffects","onPreRender","lock","container","replace","nextNode","nextSibling","rootNode","mountNode","createDocumentFragment","vNodeAlreadyExists","insertBefore"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MAAM,IAAIC,OADd,QAEO,SAFP;AAGA,SACIC,iBADJ,EAEIC,OAFJ,QAGO,6BAHP;AAIA,SACIC,aAAa,IAAIC,cADrB,QAEO,wBAFP;AAGA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SACIC,kBADJ,QAEO,gBAFP;AAGA,OAAOC,QAAP,MAAqB,6BAArB;;AACA,IAAIC,MAAM,GAAGC,OAAO,IAAI;AACpB,MAAI;AACAC,IAAAA,UAAU,EAAEA;AADZ,MAEAD,OAFJ;;AAGA,MAAIC,UAAJ,EAAgB;AACZJ,IAAAA,kBAAkB,CAACG,OAAD,CAAlB;AACAC,IAAAA,UAAU,CAACC,EAAX,GAAgBF,OAAO,CAACE,EAAxB;;AACAX,IAAAA,OAAO,CAAC,IAAD,EAAOU,UAAP,CAAP;;AACAA,IAAAA,UAAU,CAACE,WAAX,CAAuBH,OAAvB;AACAA,IAAAA,OAAO,CAACI,SAAR,GAAoB,EAApB;AACA,WAAOH,UAAU,CAACC,EAAlB;AACH;;AACD,SAAOF,OAAO,CAACE,EAAf;AACH,CAbD;;AAcA,eAAeJ,QAAQ,CAAC;AACpBJ,EAAAA,aAAa,EAAE,CAACW,SAAD,EAAYC,KAAZ,KAAsBX,cAAc,CAACU,SAAD,EAAYC,KAAZ,CAD/B;AAEpBP,EAAAA,MAAM,EAAEA,MAFY;AAGpBQ,EAAAA,aAAa,EAAE,MAAM;AACjBf,IAAAA,iBAAiB,CAACgB,WAAlB;AACH,GALmB;AAMpBC,EAAAA,WAAW,EAAE,MAAM;AACfjB,IAAAA,iBAAiB,CAACkB,IAAlB;AACH,GARmB;AASpBpB,EAAAA,MAAM,EAAE,CAACe,SAAD,EAAYC,KAAZ,EAAmBK,SAAnB,EAA8BC,OAA9B,KAA0C;AAC9C,QAAI,CAACA,OAAL,EAAc;AACV,UAAI;AACAX,QAAAA,UAAU,EAAEA;AADZ,UAEAU,SAFJ;AAGA,UAAIE,QAAQ,GAAG,SAASF,SAAT,IAAsB,KAAK,CAAL,KAAWA,SAAjC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACG,WAA/E;AACA,UAAIC,QAAQ,GAAGnB,UAAU,CAACF,aAAX,CAAyB,KAAzB,CAAf;AACAqB,MAAAA,QAAQ,CAACZ,WAAT,CAAqBQ,SAArB;AACA,UAAIK,SAAS,GAAGpB,UAAU,CAACqB,sBAAX,GAAoCd,WAApC,CAAgDY,QAAhD,CAAhB;AACA,UAAIG,kBAAkB,GAAG,CAAC,CAACP,SAAS,CAACT,EAArC;AACAgB,MAAAA,kBAAkB,IAAInB,MAAM,CAACY,SAAD,CAA5B;AACAlB,MAAAA,OAAO,CAACE,cAAc,CAACU,SAAD,EAAYC,KAAZ,CAAf,EAAmCU,SAAnC,CAAP;AACAL,MAAAA,SAAS,CAACT,EAAV,GAAec,SAAS,CAACd,EAAzB;;AACA,UAAID,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAACkB,YAAX,CAAwBR,SAAxB,EAAmCE,QAAnC;AACH;AACJ,KAfD,MAeO;AACHtB,MAAAA,OAAO,CAACI,cAAc,CAACU,SAAD,EAAYC,KAAZ,CAAf,EAAmCK,SAAnC,CAAP;AACH;AACJ;AA5BmB,CAAD,CAAvB","sourcesContent":["/**\r\n * DevExtreme (esm/core/inferno_renderer.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    render as _render\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffectHost,\r\n    hydrate\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    createElement as _createElement\r\n} from \"inferno-create-element\";\r\nimport domAdapter from \"./dom_adapter\";\r\nimport {\r\n    cleanDataRecursive\r\n} from \"./element_data\";\r\nimport injector from \"./utils/dependency_injector\";\r\nvar remove = element => {\r\n    var {\r\n        parentNode: parentNode\r\n    } = element;\r\n    if (parentNode) {\r\n        cleanDataRecursive(element);\r\n        parentNode.$V = element.$V;\r\n        _render(null, parentNode);\r\n        parentNode.appendChild(element);\r\n        element.innerHTML = \"\";\r\n        delete parentNode.$V\r\n    }\r\n    delete element.$V\r\n};\r\nexport default injector({\r\n    createElement: (component, props) => _createElement(component, props),\r\n    remove: remove,\r\n    onAfterRender: () => {\r\n        InfernoEffectHost.callEffects()\r\n    },\r\n    onPreRender: () => {\r\n        InfernoEffectHost.lock()\r\n    },\r\n    render: (component, props, container, replace) => {\r\n        if (!replace) {\r\n            var {\r\n                parentNode: parentNode\r\n            } = container;\r\n            var nextNode = null === container || void 0 === container ? void 0 : container.nextSibling;\r\n            var rootNode = domAdapter.createElement(\"div\");\r\n            rootNode.appendChild(container);\r\n            var mountNode = domAdapter.createDocumentFragment().appendChild(rootNode);\r\n            var vNodeAlreadyExists = !!container.$V;\r\n            vNodeAlreadyExists && remove(container);\r\n            hydrate(_createElement(component, props), mountNode);\r\n            container.$V = mountNode.$V;\r\n            if (parentNode) {\r\n                parentNode.insertBefore(container, nextNode)\r\n            }\r\n        } else {\r\n            _render(_createElement(component, props), container)\r\n        }\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}