{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test\\\\frontend\\\\src\\\\components\\\\pages\\\\HistoryChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Chartjs from 'chart.js';\nimport { historyOptions } from \"../../chartConfigs/chartConfigs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HistoryChart = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const chartRef = useRef();\n  const {\n    day,\n    week,\n    twoWeek,\n    month,\n    threeMonth,\n    year,\n    detail\n  } = data;\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\n\n  const determineTimeFormat = () => {\n    switch (timeFormat) {\n      case \"24h\":\n        return day;\n\n      case \"7d\":\n        return week;\n\n      case \"14d\":\n        return twoWeek;\n\n      case \"30d\":\n        return month;\n\n      case \"90d\":\n        return threeMonth;\n\n      case \"1y\":\n        return year;\n\n      default:\n        return day;\n    }\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current && detail) {\n      const chartInstance = new Chartjs(chartRef.current, {\n        type: \"line\",\n        data: {\n          datasets: [{\n            label: `${detail.name} price`,\n            data: determineTimeFormat(),\n            backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n            borderColor: \"rgba(255, 215, 0, 0.4\",\n            pointRadius: 0\n          }]\n        },\n        options: { ...historyOptions\n        }\n      });\n    }\n  });\n\n  const renderPrice = () => {\n    if (detail) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-0\",\n          children: detail.current_price.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: detail.price_change_24h < 0 ? \"text-danger my-0\" : \"text-success my-0\",\n          children: [detail.price_change_percentage_24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border mt-2 rounded p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPrice()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"myChart\",\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-button mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => setTimeFormat(\"24h\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"24h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => setTimeFormat(\"7d\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"7d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => setTimeFormat(\"14d\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"14d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => setTimeFormat(\"30d\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"30d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => setTimeFormat(\"90d\"),\n        className: \"btn btn-outline-secondary btn-sm mx-1\",\n        children: \"90d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => setTimeFormat(\"1y\"),\n        className: \"btn btn-outline-secondary btn-sm\",\n        children: \"1y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HistoryChart, \"QUAhcve7AqTX7QOQ/03kwop9URk=\");\n\n_c = HistoryChart;\nexport default HistoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryChart\");","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test/frontend/src/components/pages/HistoryChart.jsx"],"names":["React","useEffect","useRef","useState","Chartjs","historyOptions","HistoryChart","data","chartRef","day","week","twoWeek","month","threeMonth","year","detail","timeFormat","setTimeFormat","determineTimeFormat","current","chartInstance","type","datasets","label","name","backgroundColor","borderColor","pointRadius","options","renderPrice","current_price","toFixed","price_change_24h","price_change_percentage_24h"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport Chartjs from 'chart.js';\r\nimport {historyOptions} from \"../../chartConfigs/chartConfigs\";\r\n\r\n\r\nconst HistoryChart = ({data}) => {\r\n    const chartRef = useRef();\r\n    const {day, week, twoWeek, month, threeMonth, year, detail} = data;\r\n    const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n    const determineTimeFormat = () => {\r\n        switch(timeFormat){\r\n            case \"24h\":\r\n                return day;\r\n            case \"7d\":\r\n                return week;\r\n            case \"14d\":\r\n                return twoWeek;\r\n            case \"30d\":\r\n                return month;\r\n            case \"90d\":\r\n                return threeMonth;\r\n            case \"1y\":\r\n                return year;\r\n            default:\r\n                return day;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(chartRef && chartRef.current && detail){\r\n            const chartInstance = new Chartjs(chartRef.current, {\r\n                type: \"line\",\r\n                data: {\r\n                    datasets: [\r\n                        {\r\n                        label: `${detail.name} price`,\r\n                        data: determineTimeFormat(),\r\n                        backgroundColor: \"rgba(174, 305, 194, 0.5)\",\r\n                        borderColor: \"rgba(255, 215, 0, 0.4\",\r\n                        pointRadius: 0,\r\n\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    ...historyOptions,\r\n                },\r\n            });\r\n        }\r\n    });\r\n\r\n    const renderPrice = () => {\r\n        if(detail){\r\n            return(\r\n                <>\r\n                <p className=\"my-0\">{detail.current_price.toFixed(2)}</p>\r\n                <p\r\n                    className={\r\n                    detail.price_change_24h < 0\r\n                        ? \"text-danger my-0\"\r\n                        : \"text-success my-0\"\r\n                }\r\n                >{detail.price_change_percentage_24h.toFixed(2)}%\r\n                </p>\r\n            </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"bg-white border mt-2 rounded p-3\">\r\n        <div>{renderPrice()}</div>\r\n            <div>\r\n            <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n        </div>\r\n            <div className = \"chart-button mt-1\">\r\n                <button\r\n                    onCLick={() => setTimeFormat(\"24h\")}\r\n                    className=\"btn btn-outline-secondary btn-sm\"\r\n                >\r\n                    24h\r\n                </button>\r\n                <button\r\n                    onCLick={() => setTimeFormat(\"7d\")}\r\n                    className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                >\r\n                    7d\r\n                </button>\r\n                <button\r\n                    onCLick={() => setTimeFormat(\"14d\")}\r\n                    className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                >\r\n                    14d\r\n                </button>\r\n                <button\r\n                    onCLick={() => setTimeFormat(\"30d\")}\r\n                    className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                >\r\n                    30d\r\n                </button>\r\n                <button\r\n                    onCLick={() => setTimeFormat(\"90d\")}\r\n                    className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n                >\r\n                    90d\r\n                </button>\r\n                <button\r\n                    onCLick={() => setTimeFormat(\"1y\")}\r\n                    className=\"btn btn-outline-secondary btn-sm\"\r\n                >\r\n                    1y\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HistoryChart;"]},"metadata":{},"sourceType":"module"}