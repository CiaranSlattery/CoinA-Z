{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/config.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"./utils/extend\";\nimport errors from \"./errors\";\nvar config = {\n  rtlEnabled: false,\n  defaultCurrency: \"USD\",\n  oDataFilterToLower: true,\n  serverDecimalSeparator: \".\",\n  decimalSeparator: \".\",\n  thousandsSeparator: \",\",\n  forceIsoDateParsing: true,\n  wrapActionsBeforeExecute: true,\n  useLegacyStoreResult: false,\n  useJQuery: void 0,\n  editorStylingMode: void 0,\n  useLegacyVisibleIndex: false,\n  floatingActionButtonConfig: {\n    icon: \"add\",\n    closeIcon: \"close\",\n    label: \"\",\n    position: {\n      at: \"right bottom\",\n      my: \"right bottom\",\n      offset: {\n        x: -16,\n        y: -16\n      }\n    },\n    maxSpeedDialActionCount: 5,\n    shading: false,\n    direction: \"auto\"\n  },\n  optionsParser: optionsString => {\n    if (\"{\" !== optionsString.trim().charAt(0)) {\n      optionsString = \"{\" + optionsString + \"}\";\n    }\n\n    try {\n      return new Function(\"return \" + optionsString)();\n    } catch (ex) {\n      throw errors.Error(\"E3018\", ex, optionsString);\n    }\n  }\n};\nvar deprecatedFields = [\"decimalSeparator\", \"thousandsSeparator\"];\n\nvar configMethod = function () {\n  if (!arguments.length) {\n    return config;\n  }\n\n  var newConfig = arguments.length <= 0 ? void 0 : arguments[0];\n  deprecatedFields.forEach(deprecatedField => {\n    if (newConfig[deprecatedField]) {\n      var message = \"Now, the \".concat(deprecatedField, \" is selected based on the specified locale.\");\n      errors.log(\"W0003\", \"config\", deprecatedField, \"19.2\", message);\n    }\n  });\n  extend(config, newConfig);\n};\n\nif (\"undefined\" !== typeof DevExpress && DevExpress.config) {\n  configMethod(DevExpress.config);\n}\n\nexport default configMethod;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/config.js"],"names":["extend","errors","config","rtlEnabled","defaultCurrency","oDataFilterToLower","serverDecimalSeparator","decimalSeparator","thousandsSeparator","forceIsoDateParsing","wrapActionsBeforeExecute","useLegacyStoreResult","useJQuery","editorStylingMode","useLegacyVisibleIndex","floatingActionButtonConfig","icon","closeIcon","label","position","at","my","offset","x","y","maxSpeedDialActionCount","shading","direction","optionsParser","optionsString","trim","charAt","Function","ex","Error","deprecatedFields","configMethod","arguments","length","newConfig","forEach","deprecatedField","message","concat","log","DevExpress"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MADJ,QAEO,gBAFP;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAIC,MAAM,GAAG;AACTC,EAAAA,UAAU,EAAE,KADH;AAETC,EAAAA,eAAe,EAAE,KAFR;AAGTC,EAAAA,kBAAkB,EAAE,IAHX;AAITC,EAAAA,sBAAsB,EAAE,GAJf;AAKTC,EAAAA,gBAAgB,EAAE,GALT;AAMTC,EAAAA,kBAAkB,EAAE,GANX;AAOTC,EAAAA,mBAAmB,EAAE,IAPZ;AAQTC,EAAAA,wBAAwB,EAAE,IARjB;AASTC,EAAAA,oBAAoB,EAAE,KATb;AAUTC,EAAAA,SAAS,EAAE,KAAK,CAVP;AAWTC,EAAAA,iBAAiB,EAAE,KAAK,CAXf;AAYTC,EAAAA,qBAAqB,EAAE,KAZd;AAaTC,EAAAA,0BAA0B,EAAE;AACxBC,IAAAA,IAAI,EAAE,KADkB;AAExBC,IAAAA,SAAS,EAAE,OAFa;AAGxBC,IAAAA,KAAK,EAAE,EAHiB;AAIxBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,EAAE,EAAE,cADE;AAENC,MAAAA,EAAE,EAAE,cAFE;AAGNC,MAAAA,MAAM,EAAE;AACJC,QAAAA,CAAC,EAAE,CAAC,EADA;AAEJC,QAAAA,CAAC,EAAE,CAAC;AAFA;AAHF,KAJc;AAYxBC,IAAAA,uBAAuB,EAAE,CAZD;AAaxBC,IAAAA,OAAO,EAAE,KAbe;AAcxBC,IAAAA,SAAS,EAAE;AAda,GAbnB;AA6BTC,EAAAA,aAAa,EAAEC,aAAa,IAAI;AAC5B,QAAI,QAAQA,aAAa,CAACC,IAAd,GAAqBC,MAArB,CAA4B,CAA5B,CAAZ,EAA4C;AACxCF,MAAAA,aAAa,GAAG,MAAMA,aAAN,GAAsB,GAAtC;AACH;;AACD,QAAI;AACA,aAAO,IAAIG,QAAJ,CAAa,YAAYH,aAAzB,GAAP;AACH,KAFD,CAEE,OAAOI,EAAP,EAAW;AACT,YAAMhC,MAAM,CAACiC,KAAP,CAAa,OAAb,EAAsBD,EAAtB,EAA0BJ,aAA1B,CAAN;AACH;AACJ;AAtCQ,CAAb;AAwCA,IAAIM,gBAAgB,GAAG,CAAC,kBAAD,EAAqB,oBAArB,CAAvB;;AACA,IAAIC,YAAY,GAAG,YAAW;AAC1B,MAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;AACnB,WAAOpC,MAAP;AACH;;AACD,MAAIqC,SAAS,GAAGF,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwB,KAAK,CAA7B,GAAiCD,SAAS,CAAC,CAAD,CAA1D;AACAF,EAAAA,gBAAgB,CAACK,OAAjB,CAAyBC,eAAe,IAAI;AACxC,QAAIF,SAAS,CAACE,eAAD,CAAb,EAAgC;AAC5B,UAAIC,OAAO,GAAG,YAAYC,MAAZ,CAAmBF,eAAnB,EAAoC,6CAApC,CAAd;AACAxC,MAAAA,MAAM,CAAC2C,GAAP,CAAW,OAAX,EAAoB,QAApB,EAA8BH,eAA9B,EAA+C,MAA/C,EAAuDC,OAAvD;AACH;AACJ,GALD;AAMA1C,EAAAA,MAAM,CAACE,MAAD,EAASqC,SAAT,CAAN;AACH,CAZD;;AAaA,IAAI,gBAAgB,OAAOM,UAAvB,IAAqCA,UAAU,CAAC3C,MAApD,EAA4D;AACxDkC,EAAAA,YAAY,CAACS,UAAU,CAAC3C,MAAZ,CAAZ;AACH;;AACD,eAAekC,YAAf","sourcesContent":["/**\r\n * DevExtreme (esm/core/config.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"./utils/extend\";\r\nimport errors from \"./errors\";\r\nvar config = {\r\n    rtlEnabled: false,\r\n    defaultCurrency: \"USD\",\r\n    oDataFilterToLower: true,\r\n    serverDecimalSeparator: \".\",\r\n    decimalSeparator: \".\",\r\n    thousandsSeparator: \",\",\r\n    forceIsoDateParsing: true,\r\n    wrapActionsBeforeExecute: true,\r\n    useLegacyStoreResult: false,\r\n    useJQuery: void 0,\r\n    editorStylingMode: void 0,\r\n    useLegacyVisibleIndex: false,\r\n    floatingActionButtonConfig: {\r\n        icon: \"add\",\r\n        closeIcon: \"close\",\r\n        label: \"\",\r\n        position: {\r\n            at: \"right bottom\",\r\n            my: \"right bottom\",\r\n            offset: {\r\n                x: -16,\r\n                y: -16\r\n            }\r\n        },\r\n        maxSpeedDialActionCount: 5,\r\n        shading: false,\r\n        direction: \"auto\"\r\n    },\r\n    optionsParser: optionsString => {\r\n        if (\"{\" !== optionsString.trim().charAt(0)) {\r\n            optionsString = \"{\" + optionsString + \"}\"\r\n        }\r\n        try {\r\n            return new Function(\"return \" + optionsString)()\r\n        } catch (ex) {\r\n            throw errors.Error(\"E3018\", ex, optionsString)\r\n        }\r\n    }\r\n};\r\nvar deprecatedFields = [\"decimalSeparator\", \"thousandsSeparator\"];\r\nvar configMethod = function() {\r\n    if (!arguments.length) {\r\n        return config\r\n    }\r\n    var newConfig = arguments.length <= 0 ? void 0 : arguments[0];\r\n    deprecatedFields.forEach(deprecatedField => {\r\n        if (newConfig[deprecatedField]) {\r\n            var message = \"Now, the \".concat(deprecatedField, \" is selected based on the specified locale.\");\r\n            errors.log(\"W0003\", \"config\", deprecatedField, \"19.2\", message)\r\n        }\r\n    });\r\n    extend(config, newConfig)\r\n};\r\nif (\"undefined\" !== typeof DevExpress && DevExpress.config) {\r\n    configMethod(DevExpress.config)\r\n}\r\nexport default configMethod;\r\n"]},"metadata":{},"sourceType":"module"}