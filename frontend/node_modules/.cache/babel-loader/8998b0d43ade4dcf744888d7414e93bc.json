{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/number_box/utils.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { adjust } from \"../../core/utils/math\";\n\nvar getRealSeparatorIndex = function (str) {\n  var quoteBalance = 0;\n  var separatorCount = 0;\n\n  for (var i = 0; i < str.length; ++i) {\n    if (\"'\" === str[i]) {\n      quoteBalance++;\n    }\n\n    if (\".\" === str[i]) {\n      ++separatorCount;\n\n      if (quoteBalance % 2 === 0) {\n        return {\n          occurrence: separatorCount,\n          index: i\n        };\n      }\n    }\n  }\n\n  return {\n    occurrence: 1,\n    index: -1\n  };\n};\n\nvar getNthOccurrence = function (str, c, n) {\n  var i = -1;\n\n  while (n-- && i++ < str.length) {\n    i = str.indexOf(c, i);\n  }\n\n  return i;\n};\n\nvar splitByIndex = function (str, index) {\n  if (-1 === index) {\n    return [str];\n  }\n\n  return [str.slice(0, index), str.slice(index + 1)];\n};\n\nvar adjustPercentValue = function (rawValue, precision) {\n  return rawValue && adjust(rawValue / 100, precision);\n};\n\nexport { getRealSeparatorIndex, getNthOccurrence, splitByIndex, adjustPercentValue };","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/number_box/utils.js"],"names":["adjust","getRealSeparatorIndex","str","quoteBalance","separatorCount","i","length","occurrence","index","getNthOccurrence","c","n","indexOf","splitByIndex","slice","adjustPercentValue","rawValue","precision"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,MADJ,QAEO,uBAFP;;AAGA,IAAIC,qBAAqB,GAAG,UAASC,GAAT,EAAc;AACtC,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,cAAc,GAAG,CAArB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgC,EAAED,CAAlC,EAAqC;AACjC,QAAI,QAAQH,GAAG,CAACG,CAAD,CAAf,EAAoB;AAChBF,MAAAA,YAAY;AACf;;AACD,QAAI,QAAQD,GAAG,CAACG,CAAD,CAAf,EAAoB;AAChB,QAAED,cAAF;;AACA,UAAID,YAAY,GAAG,CAAf,KAAqB,CAAzB,EAA4B;AACxB,eAAO;AACHI,UAAAA,UAAU,EAAEH,cADT;AAEHI,UAAAA,KAAK,EAAEH;AAFJ,SAAP;AAIH;AACJ;AACJ;;AACD,SAAO;AACHE,IAAAA,UAAU,EAAE,CADT;AAEHC,IAAAA,KAAK,EAAE,CAAC;AAFL,GAAP;AAIH,CArBD;;AAsBA,IAAIC,gBAAgB,GAAG,UAASP,GAAT,EAAcQ,CAAd,EAAiBC,CAAjB,EAAoB;AACvC,MAAIN,CAAC,GAAG,CAAC,CAAT;;AACA,SAAOM,CAAC,MAAMN,CAAC,KAAKH,GAAG,CAACI,MAAxB,EAAgC;AAC5BD,IAAAA,CAAC,GAAGH,GAAG,CAACU,OAAJ,CAAYF,CAAZ,EAAeL,CAAf,CAAJ;AACH;;AACD,SAAOA,CAAP;AACH,CAND;;AAOA,IAAIQ,YAAY,GAAG,UAASX,GAAT,EAAcM,KAAd,EAAqB;AACpC,MAAI,CAAC,CAAD,KAAOA,KAAX,EAAkB;AACd,WAAO,CAACN,GAAD,CAAP;AACH;;AACD,SAAO,CAACA,GAAG,CAACY,KAAJ,CAAU,CAAV,EAAaN,KAAb,CAAD,EAAsBN,GAAG,CAACY,KAAJ,CAAUN,KAAK,GAAG,CAAlB,CAAtB,CAAP;AACH,CALD;;AAMA,IAAIO,kBAAkB,GAAG,UAASC,QAAT,EAAmBC,SAAnB,EAA8B;AACnD,SAAOD,QAAQ,IAAIhB,MAAM,CAACgB,QAAQ,GAAG,GAAZ,EAAiBC,SAAjB,CAAzB;AACH,CAFD;;AAGA,SACIhB,qBADJ,EAEIQ,gBAFJ,EAGII,YAHJ,EAIIE,kBAJJ","sourcesContent":["/**\r\n * DevExtreme (esm/ui/number_box/utils.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    adjust\r\n} from \"../../core/utils/math\";\r\nvar getRealSeparatorIndex = function(str) {\r\n    var quoteBalance = 0;\r\n    var separatorCount = 0;\r\n    for (var i = 0; i < str.length; ++i) {\r\n        if (\"'\" === str[i]) {\r\n            quoteBalance++\r\n        }\r\n        if (\".\" === str[i]) {\r\n            ++separatorCount;\r\n            if (quoteBalance % 2 === 0) {\r\n                return {\r\n                    occurrence: separatorCount,\r\n                    index: i\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        occurrence: 1,\r\n        index: -1\r\n    }\r\n};\r\nvar getNthOccurrence = function(str, c, n) {\r\n    var i = -1;\r\n    while (n-- && i++ < str.length) {\r\n        i = str.indexOf(c, i)\r\n    }\r\n    return i\r\n};\r\nvar splitByIndex = function(str, index) {\r\n    if (-1 === index) {\r\n        return [str]\r\n    }\r\n    return [str.slice(0, index), str.slice(index + 1)]\r\n};\r\nvar adjustPercentValue = function(rawValue, precision) {\r\n    return rawValue && adjust(rawValue / 100, precision)\r\n};\r\nexport {\r\n    getRealSeparatorIndex,\r\n    getNthOccurrence,\r\n    splitByIndex,\r\n    adjustPercentValue\r\n};\r\n"]},"metadata":{},"sourceType":"module"}