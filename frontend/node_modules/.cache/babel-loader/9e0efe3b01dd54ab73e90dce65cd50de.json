{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test Repo\\\\frontend\\\\src\\\\components\\\\todo\\\\Todo.js\";\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Form, Field, Formik, ErrorMessage } from 'formik';\nimport TodoDataService from \"./TodoDataService\";\nimport AuthenticationService from \"../AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === -1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n    }));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = 'Enter a Description';\n    } else if (values.description.length < 5) {\n      errors.description = 'Enter atleast 5 Characters om Description';\n    }\n\n    if (!moment(values.targetDate).isValid()) {\n      errors.targetDate = 'Enter a valid target date';\n    }\n\n    return errors;\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    let todo = {\n      id: this.state.id,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      TodoDataService.createTodo(username, todo).then(() => this.props.history.push(`/todos`));\n    } else {\n      TodoDataService.updateTodo(username, this.state.id, todo).then(() => this.props.history.push(`/todos`));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let {\n      description,\n      targetDate\n    } = this.state; //let targetDate = this.state.targetDate\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description,\n            targetDate\n          },\n          onSubmit: this.onSubmit,\n          validateOnChange: false,\n          validateOnBlur: false,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"targetDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/src/components/todo/Todo.js"],"names":["React","Component","moment","Form","Field","Formik","ErrorMessage","TodoDataService","AuthenticationService","Todo","constructor","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","componentDidMount","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","values","errors","length","isValid","todo","createTodo","history","push","updateTodo","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport moment from \"moment\";\r\nimport {Form, Field, Formik, ErrorMessage} from 'formik';\r\nimport TodoDataService from \"./TodoDataService\";\r\nimport AuthenticationService from \"../AuthenticationService\";\r\n\r\n\r\nclass Todo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id : this.props.match.params.id,\r\n            description :'',\r\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id===-1){\r\n            return\r\n        }\r\n\r\n        let username = AuthenticationService.getLoggedInUserName();\r\n        TodoDataService.retrieveTodo(username, this.state.id)\r\n            .then(response => this.setState({\r\n                description: response.data.description,\r\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\r\n            }))\r\n    }\r\n\r\n    validate(values){\r\n        let errors = {}\r\n        if(!values.description){\r\n            errors.description = 'Enter a Description'\r\n        }\r\n        else if(values.description.length<5){\r\n            errors.description = 'Enter atleast 5 Characters om Description'\r\n        }\r\n\r\n        if(!moment(values.targetDate).isValid()){\r\n            errors.targetDate = 'Enter a valid target date'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    onSubmit(values){\r\n        let username = AuthenticationService.getLoggedInUserName();\r\n\r\n\r\n        let todo = {\r\n            id: this.state.id,\r\n                description: values.description,\r\n            targetDate: values.targetDate\r\n        }\r\n\r\n        if(this.state.id === -1){\r\n            TodoDataService.createTodo(username, todo)\r\n                .then(() => this.props.history.push(`/todos`)\r\n            )\r\n\r\n        }else {\r\n\r\n            TodoDataService.updateTodo(username, this.state.id, todo)\r\n                .then(() => this.props.history.push(`/todos`)\r\n            )\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n        let {description, targetDate} = this.state\r\n        //let targetDate = this.state.targetDate\r\n\r\n        return (\r\n            <div>\r\n            <h1>Todo</h1>\r\n            <div class=\"container\">\r\n               <Formik\r\n                    initialValues={{description, targetDate}}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n               >\r\n                   {\r\n                       (props) => (\r\n                           <Form>\r\n                               <ErrorMessage name=\"description\" component=\"div\"\r\n                                             className=\"alert alert-warning\"/>\r\n                               <ErrorMessage name=\"targetDate\" component=\"div\"\r\n                                             className=\"alert alert-warning\"/>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type =\"text\" name=\"description\"/>\r\n                                </fieldset>\r\n                               <fieldset className=\"form-group\">\r\n                                   <label>Target</label>\r\n                                   <Field className=\"form-control\" type =\"date\" name=\"targetDate\"/>\r\n                               </fieldset>\r\n                               <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                           </Form>\r\n                       )\r\n                   }\r\n               </Formik>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}