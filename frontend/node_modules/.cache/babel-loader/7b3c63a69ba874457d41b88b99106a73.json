{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/events_strategy.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Callbacks from \"./utils/callbacks\";\nimport { each } from \"./utils/iterator\";\nimport { isFunction, isPlainObject } from \"./utils/type\";\nexport class EventsStrategy {\n  constructor(owner) {\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n    this._events = {};\n    this._owner = owner;\n    this._options = options;\n  }\n\n  static create(owner, strategy) {\n    if (strategy) {\n      return isFunction(strategy) ? strategy(owner) : strategy;\n    } else {\n      return new EventsStrategy(owner);\n    }\n  }\n\n  hasEvent(eventName) {\n    var callbacks = this._events[eventName];\n    return callbacks ? callbacks.has() : false;\n  }\n\n  fireEvent(eventName, eventArgs) {\n    var callbacks = this._events[eventName];\n\n    if (callbacks) {\n      callbacks.fireWith(this._owner, eventArgs);\n    }\n\n    return this._owner;\n  }\n\n  on(eventName, eventHandler) {\n    if (isPlainObject(eventName)) {\n      each(eventName, (e, h) => {\n        this.on(e, h);\n      });\n    } else {\n      var callbacks = this._events[eventName];\n\n      if (!callbacks) {\n        callbacks = Callbacks({\n          syncStrategy: this._options.syncStrategy\n        });\n        this._events[eventName] = callbacks;\n      }\n\n      var addFn = callbacks.originalAdd || callbacks.add;\n      addFn.call(callbacks, eventHandler);\n    }\n  }\n\n  off(eventName, eventHandler) {\n    var callbacks = this._events[eventName];\n\n    if (callbacks) {\n      if (isFunction(eventHandler)) {\n        callbacks.remove(eventHandler);\n      } else {\n        callbacks.empty();\n      }\n    }\n  }\n\n  dispose() {\n    each(this._events, (eventName, event) => {\n      event.empty();\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/events_strategy.js"],"names":["Callbacks","each","isFunction","isPlainObject","EventsStrategy","constructor","owner","options","arguments","length","_events","_owner","_options","create","strategy","hasEvent","eventName","callbacks","has","fireEvent","eventArgs","fireWith","on","eventHandler","e","h","syncStrategy","addFn","originalAdd","add","call","off","remove","empty","dispose","event"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,SACIC,IADJ,QAEO,kBAFP;AAGA,SACIC,UADJ,EAEIC,aAFJ,QAGO,cAHP;AAIA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,QAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,EAA/E;AACA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKC,MAAL,GAAcL,KAAd;AACA,SAAKM,QAAL,GAAgBL,OAAhB;AACH;;AACY,SAANM,MAAM,CAACP,KAAD,EAAQQ,QAAR,EAAkB;AAC3B,QAAIA,QAAJ,EAAc;AACV,aAAOZ,UAAU,CAACY,QAAD,CAAV,GAAuBA,QAAQ,CAACR,KAAD,CAA/B,GAAyCQ,QAAhD;AACH,KAFD,MAEO;AACH,aAAO,IAAIV,cAAJ,CAAmBE,KAAnB,CAAP;AACH;AACJ;;AACDS,EAAAA,QAAQ,CAACC,SAAD,EAAY;AAChB,QAAIC,SAAS,GAAG,KAAKP,OAAL,CAAaM,SAAb,CAAhB;AACA,WAAOC,SAAS,GAAGA,SAAS,CAACC,GAAV,EAAH,GAAqB,KAArC;AACH;;AACDC,EAAAA,SAAS,CAACH,SAAD,EAAYI,SAAZ,EAAuB;AAC5B,QAAIH,SAAS,GAAG,KAAKP,OAAL,CAAaM,SAAb,CAAhB;;AACA,QAAIC,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACI,QAAV,CAAmB,KAAKV,MAAxB,EAAgCS,SAAhC;AACH;;AACD,WAAO,KAAKT,MAAZ;AACH;;AACDW,EAAAA,EAAE,CAACN,SAAD,EAAYO,YAAZ,EAA0B;AACxB,QAAIpB,aAAa,CAACa,SAAD,CAAjB,EAA8B;AAC1Bf,MAAAA,IAAI,CAACe,SAAD,EAAY,CAACQ,CAAD,EAAIC,CAAJ,KAAU;AACtB,aAAKH,EAAL,CAAQE,CAAR,EAAWC,CAAX;AACH,OAFG,CAAJ;AAGH,KAJD,MAIO;AACH,UAAIR,SAAS,GAAG,KAAKP,OAAL,CAAaM,SAAb,CAAhB;;AACA,UAAI,CAACC,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAGjB,SAAS,CAAC;AAClB0B,UAAAA,YAAY,EAAE,KAAKd,QAAL,CAAcc;AADV,SAAD,CAArB;AAGA,aAAKhB,OAAL,CAAaM,SAAb,IAA0BC,SAA1B;AACH;;AACD,UAAIU,KAAK,GAAGV,SAAS,CAACW,WAAV,IAAyBX,SAAS,CAACY,GAA/C;AACAF,MAAAA,KAAK,CAACG,IAAN,CAAWb,SAAX,EAAsBM,YAAtB;AACH;AACJ;;AACDQ,EAAAA,GAAG,CAACf,SAAD,EAAYO,YAAZ,EAA0B;AACzB,QAAIN,SAAS,GAAG,KAAKP,OAAL,CAAaM,SAAb,CAAhB;;AACA,QAAIC,SAAJ,EAAe;AACX,UAAIf,UAAU,CAACqB,YAAD,CAAd,EAA8B;AAC1BN,QAAAA,SAAS,CAACe,MAAV,CAAiBT,YAAjB;AACH,OAFD,MAEO;AACHN,QAAAA,SAAS,CAACgB,KAAV;AACH;AACJ;AACJ;;AACDC,EAAAA,OAAO,GAAG;AACNjC,IAAAA,IAAI,CAAC,KAAKS,OAAN,EAAe,CAACM,SAAD,EAAYmB,KAAZ,KAAsB;AACrCA,MAAAA,KAAK,CAACF,KAAN;AACH,KAFG,CAAJ;AAGH;;AAxDuB","sourcesContent":["/**\r\n * DevExtreme (esm/core/events_strategy.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Callbacks from \"./utils/callbacks\";\r\nimport {\r\n    each\r\n} from \"./utils/iterator\";\r\nimport {\r\n    isFunction,\r\n    isPlainObject\r\n} from \"./utils/type\";\r\nexport class EventsStrategy {\r\n    constructor(owner) {\r\n        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n        this._events = {};\r\n        this._owner = owner;\r\n        this._options = options\r\n    }\r\n    static create(owner, strategy) {\r\n        if (strategy) {\r\n            return isFunction(strategy) ? strategy(owner) : strategy\r\n        } else {\r\n            return new EventsStrategy(owner)\r\n        }\r\n    }\r\n    hasEvent(eventName) {\r\n        var callbacks = this._events[eventName];\r\n        return callbacks ? callbacks.has() : false\r\n    }\r\n    fireEvent(eventName, eventArgs) {\r\n        var callbacks = this._events[eventName];\r\n        if (callbacks) {\r\n            callbacks.fireWith(this._owner, eventArgs)\r\n        }\r\n        return this._owner\r\n    }\r\n    on(eventName, eventHandler) {\r\n        if (isPlainObject(eventName)) {\r\n            each(eventName, (e, h) => {\r\n                this.on(e, h)\r\n            })\r\n        } else {\r\n            var callbacks = this._events[eventName];\r\n            if (!callbacks) {\r\n                callbacks = Callbacks({\r\n                    syncStrategy: this._options.syncStrategy\r\n                });\r\n                this._events[eventName] = callbacks\r\n            }\r\n            var addFn = callbacks.originalAdd || callbacks.add;\r\n            addFn.call(callbacks, eventHandler)\r\n        }\r\n    }\r\n    off(eventName, eventHandler) {\r\n        var callbacks = this._events[eventName];\r\n        if (callbacks) {\r\n            if (isFunction(eventHandler)) {\r\n                callbacks.remove(eventHandler)\r\n            } else {\r\n                callbacks.empty()\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        each(this._events, (eventName, event) => {\r\n            event.empty()\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}