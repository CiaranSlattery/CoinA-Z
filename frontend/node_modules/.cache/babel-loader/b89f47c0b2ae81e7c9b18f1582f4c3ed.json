{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/devices.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight, getWidth } from \"./utils/size\";\nimport $ from \"../core/renderer\";\nimport { getWindow, getNavigator, hasWindow } from \"./utils/window\";\nimport { extend } from \"./utils/extend\";\nimport { isPlainObject } from \"./utils/type\";\nimport { each } from \"./utils/iterator\";\nimport errors from \"./errors\";\nimport Callbacks from \"./utils/callbacks\";\nimport readyCallbacks from \"./utils/ready_callbacks\";\nimport resizeCallbacks from \"./utils/resize_callbacks\";\nimport { EventsStrategy } from \"./events_strategy\";\nimport { sessionStorage as SessionStorage } from \"./utils/storage\";\nimport { changeCallback, value as viewPort } from \"./utils/view_port\";\nimport Config from \"./config\";\nvar navigator = getNavigator();\nvar window = getWindow();\nvar KNOWN_UA_TABLE = {\n  iPhone: \"iPhone\",\n  iPhone5: \"iPhone\",\n  iPhone6: \"iPhone\",\n  iPhone6plus: \"iPhone\",\n  iPad: \"iPad\",\n  iPadMini: \"iPad Mini\",\n  androidPhone: \"Android Mobile\",\n  androidTablet: \"Android\",\n  msSurface: \"Windows ARM Tablet PC\",\n  desktop: \"desktop\"\n};\nvar DEFAULT_DEVICE = {\n  deviceType: \"desktop\",\n  platform: \"generic\",\n  version: [],\n  phone: false,\n  tablet: false,\n  android: false,\n  ios: false,\n  generic: true,\n  grade: \"A\",\n  mac: false\n};\nvar uaParsers = {\n  generic(userAgent) {\n    var isPhone = /windows phone/i.test(userAgent) || userAgent.match(/WPDesktop/);\n    var isTablet = !isPhone && /Windows(.*)arm(.*)Tablet PC/i.test(userAgent);\n    var isDesktop = !isPhone && !isTablet && /msapphost/i.test(userAgent);\n    var isMac = /((intel|ppc) mac os x)/.test(userAgent.toLowerCase());\n\n    if (!(isPhone || isTablet || isDesktop || isMac)) {\n      return;\n    }\n\n    return {\n      deviceType: isPhone ? \"phone\" : isTablet ? \"tablet\" : \"desktop\",\n      platform: \"generic\",\n      version: [],\n      grade: \"A\",\n      mac: isMac\n    };\n  },\n\n  ios(userAgent) {\n    if (!/ip(hone|od|ad)/i.test(userAgent)) {\n      return;\n    }\n\n    var isPhone = /ip(hone|od)/i.test(userAgent);\n    var matches = userAgent.match(/os (\\d+)_(\\d+)_?(\\d+)?/i);\n    var version = matches ? [parseInt(matches[1], 10), parseInt(matches[2], 10), parseInt(matches[3] || 0, 10)] : [];\n    var isIPhone4 = 480 === window.screen.height;\n    var grade = isIPhone4 ? \"B\" : \"A\";\n    return {\n      deviceType: isPhone ? \"phone\" : \"tablet\",\n      platform: \"ios\",\n      version: version,\n      grade: grade\n    };\n  },\n\n  android(userAgent) {\n    if (!/android|htc_|silk/i.test(userAgent)) {\n      return;\n    }\n\n    var isPhone = /mobile/i.test(userAgent);\n    var matches = userAgent.match(/android (\\d+)\\.?(\\d+)?\\.?(\\d+)?/i);\n    var version = matches ? [parseInt(matches[1], 10), parseInt(matches[2] || 0, 10), parseInt(matches[3] || 0, 10)] : [];\n    var worseThan4_4 = version.length > 1 && (version[0] < 4 || 4 === version[0] && version[1] < 4);\n    var grade = worseThan4_4 ? \"B\" : \"A\";\n    return {\n      deviceType: isPhone ? \"phone\" : \"tablet\",\n      platform: \"android\",\n      version: version,\n      grade: grade\n    };\n  }\n\n};\n\nclass Devices {\n  constructor(options) {\n    this._window = (null === options || void 0 === options ? void 0 : options.window) || window;\n    this._realDevice = this._getDevice();\n    this._currentDevice = void 0;\n    this._currentOrientation = void 0;\n    this._eventsStrategy = new EventsStrategy(this);\n    this.changed = Callbacks();\n\n    if (hasWindow()) {\n      readyCallbacks.add(this._recalculateOrientation.bind(this));\n      resizeCallbacks.add(this._recalculateOrientation.bind(this));\n    }\n  }\n\n  current(deviceOrName) {\n    if (deviceOrName) {\n      this._currentDevice = this._getDevice(deviceOrName);\n      this._forced = true;\n      this.changed.fire();\n      return;\n    }\n\n    if (!this._currentDevice) {\n      deviceOrName = void 0;\n\n      try {\n        deviceOrName = this._getDeviceOrNameFromWindowScope();\n      } catch (e) {\n        deviceOrName = this._getDeviceNameFromSessionStorage();\n      } finally {\n        if (!deviceOrName) {\n          deviceOrName = this._getDeviceNameFromSessionStorage();\n        }\n\n        if (deviceOrName) {\n          this._forced = true;\n        }\n      }\n\n      this._currentDevice = this._getDevice(deviceOrName);\n    }\n\n    return this._currentDevice;\n  }\n\n  real(forceDevice) {\n    return extend({}, this._realDevice);\n  }\n\n  orientation() {\n    return this._currentOrientation;\n  }\n\n  isForced() {\n    return this._forced;\n  }\n\n  isRippleEmulator() {\n    return !!this._window.tinyHippos;\n  }\n\n  _getCssClasses(device) {\n    var result = [];\n    var realDevice = this._realDevice;\n    device = device || this.current();\n\n    if (device.deviceType) {\n      result.push(\"dx-device-\".concat(device.deviceType));\n\n      if (\"desktop\" !== device.deviceType) {\n        result.push(\"dx-device-mobile\");\n      }\n    }\n\n    result.push(\"dx-device-\".concat(realDevice.platform));\n\n    if (realDevice.version && realDevice.version.length) {\n      result.push(\"dx-device-\".concat(realDevice.platform, \"-\").concat(realDevice.version[0]));\n    }\n\n    if (this.isSimulator()) {\n      result.push(\"dx-simulator\");\n    }\n\n    if (Config().rtlEnabled) {\n      result.push(\"dx-rtl\");\n    }\n\n    return result;\n  }\n\n  attachCssClasses(element, device) {\n    this._deviceClasses = this._getCssClasses(device).join(\" \");\n    $(element).addClass(this._deviceClasses);\n  }\n\n  detachCssClasses(element) {\n    $(element).removeClass(this._deviceClasses);\n  }\n\n  isSimulator() {\n    try {\n      return this._isSimulator || hasWindow() && this._window.top !== this._window.self && this._window.top[\"dx-force-device\"] || this.isRippleEmulator();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  forceSimulator() {\n    this._isSimulator = true;\n  }\n\n  _getDevice(deviceName) {\n    if (\"genericPhone\" === deviceName) {\n      deviceName = {\n        deviceType: \"phone\",\n        platform: \"generic\",\n        generic: true\n      };\n    }\n\n    if (isPlainObject(deviceName)) {\n      return this._fromConfig(deviceName);\n    } else {\n      var ua;\n\n      if (deviceName) {\n        ua = KNOWN_UA_TABLE[deviceName];\n\n        if (!ua) {\n          throw errors.Error(\"E0005\");\n        }\n      } else {\n        ua = navigator.userAgent;\n      }\n\n      return this._fromUA(ua);\n    }\n  }\n\n  _getDeviceOrNameFromWindowScope() {\n    var result;\n\n    if (hasWindow() && (this._window.top[\"dx-force-device-object\"] || this._window.top[\"dx-force-device\"])) {\n      result = this._window.top[\"dx-force-device-object\"] || this._window.top[\"dx-force-device\"];\n    }\n\n    return result;\n  }\n\n  _getDeviceNameFromSessionStorage() {\n    var sessionStorage = SessionStorage();\n\n    if (!sessionStorage) {\n      return;\n    }\n\n    var deviceOrName = sessionStorage.getItem(\"dx-force-device\");\n\n    try {\n      return JSON.parse(deviceOrName);\n    } catch (ex) {\n      return deviceOrName;\n    }\n  }\n\n  _fromConfig(config) {\n    var result = extend({}, DEFAULT_DEVICE, this._currentDevice, config);\n    var shortcuts = {\n      phone: \"phone\" === result.deviceType,\n      tablet: \"tablet\" === result.deviceType,\n      android: \"android\" === result.platform,\n      ios: \"ios\" === result.platform,\n      generic: \"generic\" === result.platform\n    };\n    return extend(result, shortcuts);\n  }\n\n  _fromUA(ua) {\n    var config;\n    each(uaParsers, (platform, parser) => {\n      config = parser(ua);\n      return !config;\n    });\n\n    if (config) {\n      return this._fromConfig(config);\n    }\n\n    return DEFAULT_DEVICE;\n  }\n\n  _changeOrientation() {\n    var $window = $(this._window);\n    var orientation = getHeight($window) > getWidth($window) ? \"portrait\" : \"landscape\";\n\n    if (this._currentOrientation === orientation) {\n      return;\n    }\n\n    this._currentOrientation = orientation;\n\n    this._eventsStrategy.fireEvent(\"orientationChanged\", [{\n      orientation: orientation\n    }]);\n  }\n\n  _recalculateOrientation() {\n    var windowWidth = getWidth(this._window);\n\n    if (this._currentWidth === windowWidth) {\n      return;\n    }\n\n    this._currentWidth = windowWidth;\n\n    this._changeOrientation();\n  }\n\n  on(eventName, eventHandler) {\n    this._eventsStrategy.on(eventName, eventHandler);\n\n    return this;\n  }\n\n  off(eventName, eventHandler) {\n    this._eventsStrategy.off(eventName, eventHandler);\n\n    return this;\n  }\n\n}\n\nvar devices = new Devices();\nvar viewPortElement = viewPort();\n\nif (viewPortElement) {\n  devices.attachCssClasses(viewPortElement);\n}\n\nchangeCallback.add((viewPort, prevViewport) => {\n  devices.detachCssClasses(prevViewport);\n  devices.attachCssClasses(viewPort);\n});\nexport default devices;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/devices.js"],"names":["getHeight","getWidth","$","getWindow","getNavigator","hasWindow","extend","isPlainObject","each","errors","Callbacks","readyCallbacks","resizeCallbacks","EventsStrategy","sessionStorage","SessionStorage","changeCallback","value","viewPort","Config","navigator","window","KNOWN_UA_TABLE","iPhone","iPhone5","iPhone6","iPhone6plus","iPad","iPadMini","androidPhone","androidTablet","msSurface","desktop","DEFAULT_DEVICE","deviceType","platform","version","phone","tablet","android","ios","generic","grade","mac","uaParsers","userAgent","isPhone","test","match","isTablet","isDesktop","isMac","toLowerCase","matches","parseInt","isIPhone4","screen","height","worseThan4_4","length","Devices","constructor","options","_window","_realDevice","_getDevice","_currentDevice","_currentOrientation","_eventsStrategy","changed","add","_recalculateOrientation","bind","current","deviceOrName","_forced","fire","_getDeviceOrNameFromWindowScope","e","_getDeviceNameFromSessionStorage","real","forceDevice","orientation","isForced","isRippleEmulator","tinyHippos","_getCssClasses","device","result","realDevice","push","concat","isSimulator","rtlEnabled","attachCssClasses","element","_deviceClasses","join","addClass","detachCssClasses","removeClass","_isSimulator","top","self","forceSimulator","deviceName","_fromConfig","ua","Error","_fromUA","getItem","JSON","parse","ex","config","shortcuts","parser","_changeOrientation","$window","fireEvent","windowWidth","_currentWidth","on","eventName","eventHandler","off","devices","viewPortElement","prevViewport"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/devices.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"./utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    getNavigator,\r\n    hasWindow\r\n} from \"./utils/window\";\r\nimport {\r\n    extend\r\n} from \"./utils/extend\";\r\nimport {\r\n    isPlainObject\r\n} from \"./utils/type\";\r\nimport {\r\n    each\r\n} from \"./utils/iterator\";\r\nimport errors from \"./errors\";\r\nimport Callbacks from \"./utils/callbacks\";\r\nimport readyCallbacks from \"./utils/ready_callbacks\";\r\nimport resizeCallbacks from \"./utils/resize_callbacks\";\r\nimport {\r\n    EventsStrategy\r\n} from \"./events_strategy\";\r\nimport {\r\n    sessionStorage as SessionStorage\r\n} from \"./utils/storage\";\r\nimport {\r\n    changeCallback,\r\n    value as viewPort\r\n} from \"./utils/view_port\";\r\nimport Config from \"./config\";\r\nvar navigator = getNavigator();\r\nvar window = getWindow();\r\nvar KNOWN_UA_TABLE = {\r\n    iPhone: \"iPhone\",\r\n    iPhone5: \"iPhone\",\r\n    iPhone6: \"iPhone\",\r\n    iPhone6plus: \"iPhone\",\r\n    iPad: \"iPad\",\r\n    iPadMini: \"iPad Mini\",\r\n    androidPhone: \"Android Mobile\",\r\n    androidTablet: \"Android\",\r\n    msSurface: \"Windows ARM Tablet PC\",\r\n    desktop: \"desktop\"\r\n};\r\nvar DEFAULT_DEVICE = {\r\n    deviceType: \"desktop\",\r\n    platform: \"generic\",\r\n    version: [],\r\n    phone: false,\r\n    tablet: false,\r\n    android: false,\r\n    ios: false,\r\n    generic: true,\r\n    grade: \"A\",\r\n    mac: false\r\n};\r\nvar uaParsers = {\r\n    generic(userAgent) {\r\n        var isPhone = /windows phone/i.test(userAgent) || userAgent.match(/WPDesktop/);\r\n        var isTablet = !isPhone && /Windows(.*)arm(.*)Tablet PC/i.test(userAgent);\r\n        var isDesktop = !isPhone && !isTablet && /msapphost/i.test(userAgent);\r\n        var isMac = /((intel|ppc) mac os x)/.test(userAgent.toLowerCase());\r\n        if (!(isPhone || isTablet || isDesktop || isMac)) {\r\n            return\r\n        }\r\n        return {\r\n            deviceType: isPhone ? \"phone\" : isTablet ? \"tablet\" : \"desktop\",\r\n            platform: \"generic\",\r\n            version: [],\r\n            grade: \"A\",\r\n            mac: isMac\r\n        }\r\n    },\r\n    ios(userAgent) {\r\n        if (!/ip(hone|od|ad)/i.test(userAgent)) {\r\n            return\r\n        }\r\n        var isPhone = /ip(hone|od)/i.test(userAgent);\r\n        var matches = userAgent.match(/os (\\d+)_(\\d+)_?(\\d+)?/i);\r\n        var version = matches ? [parseInt(matches[1], 10), parseInt(matches[2], 10), parseInt(matches[3] || 0, 10)] : [];\r\n        var isIPhone4 = 480 === window.screen.height;\r\n        var grade = isIPhone4 ? \"B\" : \"A\";\r\n        return {\r\n            deviceType: isPhone ? \"phone\" : \"tablet\",\r\n            platform: \"ios\",\r\n            version: version,\r\n            grade: grade\r\n        }\r\n    },\r\n    android(userAgent) {\r\n        if (!/android|htc_|silk/i.test(userAgent)) {\r\n            return\r\n        }\r\n        var isPhone = /mobile/i.test(userAgent);\r\n        var matches = userAgent.match(/android (\\d+)\\.?(\\d+)?\\.?(\\d+)?/i);\r\n        var version = matches ? [parseInt(matches[1], 10), parseInt(matches[2] || 0, 10), parseInt(matches[3] || 0, 10)] : [];\r\n        var worseThan4_4 = version.length > 1 && (version[0] < 4 || 4 === version[0] && version[1] < 4);\r\n        var grade = worseThan4_4 ? \"B\" : \"A\";\r\n        return {\r\n            deviceType: isPhone ? \"phone\" : \"tablet\",\r\n            platform: \"android\",\r\n            version: version,\r\n            grade: grade\r\n        }\r\n    }\r\n};\r\nclass Devices {\r\n    constructor(options) {\r\n        this._window = (null === options || void 0 === options ? void 0 : options.window) || window;\r\n        this._realDevice = this._getDevice();\r\n        this._currentDevice = void 0;\r\n        this._currentOrientation = void 0;\r\n        this._eventsStrategy = new EventsStrategy(this);\r\n        this.changed = Callbacks();\r\n        if (hasWindow()) {\r\n            readyCallbacks.add(this._recalculateOrientation.bind(this));\r\n            resizeCallbacks.add(this._recalculateOrientation.bind(this))\r\n        }\r\n    }\r\n    current(deviceOrName) {\r\n        if (deviceOrName) {\r\n            this._currentDevice = this._getDevice(deviceOrName);\r\n            this._forced = true;\r\n            this.changed.fire();\r\n            return\r\n        }\r\n        if (!this._currentDevice) {\r\n            deviceOrName = void 0;\r\n            try {\r\n                deviceOrName = this._getDeviceOrNameFromWindowScope()\r\n            } catch (e) {\r\n                deviceOrName = this._getDeviceNameFromSessionStorage()\r\n            } finally {\r\n                if (!deviceOrName) {\r\n                    deviceOrName = this._getDeviceNameFromSessionStorage()\r\n                }\r\n                if (deviceOrName) {\r\n                    this._forced = true\r\n                }\r\n            }\r\n            this._currentDevice = this._getDevice(deviceOrName)\r\n        }\r\n        return this._currentDevice\r\n    }\r\n    real(forceDevice) {\r\n        return extend({}, this._realDevice)\r\n    }\r\n    orientation() {\r\n        return this._currentOrientation\r\n    }\r\n    isForced() {\r\n        return this._forced\r\n    }\r\n    isRippleEmulator() {\r\n        return !!this._window.tinyHippos\r\n    }\r\n    _getCssClasses(device) {\r\n        var result = [];\r\n        var realDevice = this._realDevice;\r\n        device = device || this.current();\r\n        if (device.deviceType) {\r\n            result.push(\"dx-device-\".concat(device.deviceType));\r\n            if (\"desktop\" !== device.deviceType) {\r\n                result.push(\"dx-device-mobile\")\r\n            }\r\n        }\r\n        result.push(\"dx-device-\".concat(realDevice.platform));\r\n        if (realDevice.version && realDevice.version.length) {\r\n            result.push(\"dx-device-\".concat(realDevice.platform, \"-\").concat(realDevice.version[0]))\r\n        }\r\n        if (this.isSimulator()) {\r\n            result.push(\"dx-simulator\")\r\n        }\r\n        if (Config().rtlEnabled) {\r\n            result.push(\"dx-rtl\")\r\n        }\r\n        return result\r\n    }\r\n    attachCssClasses(element, device) {\r\n        this._deviceClasses = this._getCssClasses(device).join(\" \");\r\n        $(element).addClass(this._deviceClasses)\r\n    }\r\n    detachCssClasses(element) {\r\n        $(element).removeClass(this._deviceClasses)\r\n    }\r\n    isSimulator() {\r\n        try {\r\n            return this._isSimulator || hasWindow() && this._window.top !== this._window.self && this._window.top[\"dx-force-device\"] || this.isRippleEmulator()\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n    forceSimulator() {\r\n        this._isSimulator = true\r\n    }\r\n    _getDevice(deviceName) {\r\n        if (\"genericPhone\" === deviceName) {\r\n            deviceName = {\r\n                deviceType: \"phone\",\r\n                platform: \"generic\",\r\n                generic: true\r\n            }\r\n        }\r\n        if (isPlainObject(deviceName)) {\r\n            return this._fromConfig(deviceName)\r\n        } else {\r\n            var ua;\r\n            if (deviceName) {\r\n                ua = KNOWN_UA_TABLE[deviceName];\r\n                if (!ua) {\r\n                    throw errors.Error(\"E0005\")\r\n                }\r\n            } else {\r\n                ua = navigator.userAgent\r\n            }\r\n            return this._fromUA(ua)\r\n        }\r\n    }\r\n    _getDeviceOrNameFromWindowScope() {\r\n        var result;\r\n        if (hasWindow() && (this._window.top[\"dx-force-device-object\"] || this._window.top[\"dx-force-device\"])) {\r\n            result = this._window.top[\"dx-force-device-object\"] || this._window.top[\"dx-force-device\"]\r\n        }\r\n        return result\r\n    }\r\n    _getDeviceNameFromSessionStorage() {\r\n        var sessionStorage = SessionStorage();\r\n        if (!sessionStorage) {\r\n            return\r\n        }\r\n        var deviceOrName = sessionStorage.getItem(\"dx-force-device\");\r\n        try {\r\n            return JSON.parse(deviceOrName)\r\n        } catch (ex) {\r\n            return deviceOrName\r\n        }\r\n    }\r\n    _fromConfig(config) {\r\n        var result = extend({}, DEFAULT_DEVICE, this._currentDevice, config);\r\n        var shortcuts = {\r\n            phone: \"phone\" === result.deviceType,\r\n            tablet: \"tablet\" === result.deviceType,\r\n            android: \"android\" === result.platform,\r\n            ios: \"ios\" === result.platform,\r\n            generic: \"generic\" === result.platform\r\n        };\r\n        return extend(result, shortcuts)\r\n    }\r\n    _fromUA(ua) {\r\n        var config;\r\n        each(uaParsers, (platform, parser) => {\r\n            config = parser(ua);\r\n            return !config\r\n        });\r\n        if (config) {\r\n            return this._fromConfig(config)\r\n        }\r\n        return DEFAULT_DEVICE\r\n    }\r\n    _changeOrientation() {\r\n        var $window = $(this._window);\r\n        var orientation = getHeight($window) > getWidth($window) ? \"portrait\" : \"landscape\";\r\n        if (this._currentOrientation === orientation) {\r\n            return\r\n        }\r\n        this._currentOrientation = orientation;\r\n        this._eventsStrategy.fireEvent(\"orientationChanged\", [{\r\n            orientation: orientation\r\n        }])\r\n    }\r\n    _recalculateOrientation() {\r\n        var windowWidth = getWidth(this._window);\r\n        if (this._currentWidth === windowWidth) {\r\n            return\r\n        }\r\n        this._currentWidth = windowWidth;\r\n        this._changeOrientation()\r\n    }\r\n    on(eventName, eventHandler) {\r\n        this._eventsStrategy.on(eventName, eventHandler);\r\n        return this\r\n    }\r\n    off(eventName, eventHandler) {\r\n        this._eventsStrategy.off(eventName, eventHandler);\r\n        return this\r\n    }\r\n}\r\nvar devices = new Devices;\r\nvar viewPortElement = viewPort();\r\nif (viewPortElement) {\r\n    devices.attachCssClasses(viewPortElement)\r\n}\r\nchangeCallback.add((viewPort, prevViewport) => {\r\n    devices.detachCssClasses(prevViewport);\r\n    devices.attachCssClasses(viewPort)\r\n});\r\nexport default devices;\r\n"]},"metadata":{},"sourceType":"module"}