{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/object.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isNumeric, isPlainObject, isObject } from \"./type\";\nimport variableWrapper from \"./variable_wrapper\";\n\nvar clone = function () {\n  function Clone() {}\n\n  return function (obj) {\n    Clone.prototype = obj;\n    return new Clone();\n  };\n}();\n\nvar orderEach = function (map, func) {\n  var keys = [];\n  var key;\n  var i;\n\n  for (key in map) {\n    if (Object.prototype.hasOwnProperty.call(map, key)) {\n      keys.push(key);\n    }\n  }\n\n  keys.sort(function (x, y) {\n    var isNumberX = isNumeric(x);\n    var isNumberY = isNumeric(y);\n\n    if (isNumberX && isNumberY) {\n      return x - y;\n    }\n\n    if (isNumberX && !isNumberY) {\n      return -1;\n    }\n\n    if (!isNumberX && isNumberY) {\n      return 1;\n    }\n\n    if (x < y) {\n      return -1;\n    }\n\n    if (x > y) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    func(key, map[key]);\n  }\n};\n\nvar assignValueToProperty = function (target, property, value, assignByReference) {\n  if (!assignByReference && variableWrapper.isWrapped(target[property])) {\n    variableWrapper.assign(target[property], value);\n  } else {\n    target[property] = value;\n  }\n};\n\nvar deepExtendArraySafe = function deepExtendArraySafe(target, changes, extendComplexObject, assignByReference) {\n  var prevValue;\n  var newValue;\n\n  for (var name in changes) {\n    prevValue = target[name];\n    newValue = changes[name];\n\n    if (\"__proto__\" === name || \"constructor\" === name || target === newValue) {\n      continue;\n    }\n\n    if (isPlainObject(newValue)) {\n      var goDeeper = extendComplexObject ? isObject(prevValue) : isPlainObject(prevValue);\n      newValue = deepExtendArraySafe(goDeeper ? prevValue : {}, newValue, extendComplexObject, assignByReference);\n    }\n\n    if (void 0 !== newValue && prevValue !== newValue) {\n      assignValueToProperty(target, name, newValue, assignByReference);\n    }\n  }\n\n  return target;\n};\n\nexport { clone, orderEach, deepExtendArraySafe };","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/utils/object.js"],"names":["isNumeric","isPlainObject","isObject","variableWrapper","clone","Clone","obj","prototype","orderEach","map","func","keys","key","i","Object","hasOwnProperty","call","push","sort","x","y","isNumberX","isNumberY","length","assignValueToProperty","target","property","value","assignByReference","isWrapped","assign","deepExtendArraySafe","changes","extendComplexObject","prevValue","newValue","name","goDeeper"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/object.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isNumeric,\r\n    isPlainObject,\r\n    isObject\r\n} from \"./type\";\r\nimport variableWrapper from \"./variable_wrapper\";\r\nvar clone = function() {\r\n    function Clone() {}\r\n    return function(obj) {\r\n        Clone.prototype = obj;\r\n        return new Clone\r\n    }\r\n}();\r\nvar orderEach = function(map, func) {\r\n    var keys = [];\r\n    var key;\r\n    var i;\r\n    for (key in map) {\r\n        if (Object.prototype.hasOwnProperty.call(map, key)) {\r\n            keys.push(key)\r\n        }\r\n    }\r\n    keys.sort((function(x, y) {\r\n        var isNumberX = isNumeric(x);\r\n        var isNumberY = isNumeric(y);\r\n        if (isNumberX && isNumberY) {\r\n            return x - y\r\n        }\r\n        if (isNumberX && !isNumberY) {\r\n            return -1\r\n        }\r\n        if (!isNumberX && isNumberY) {\r\n            return 1\r\n        }\r\n        if (x < y) {\r\n            return -1\r\n        }\r\n        if (x > y) {\r\n            return 1\r\n        }\r\n        return 0\r\n    }));\r\n    for (i = 0; i < keys.length; i++) {\r\n        key = keys[i];\r\n        func(key, map[key])\r\n    }\r\n};\r\nvar assignValueToProperty = function(target, property, value, assignByReference) {\r\n    if (!assignByReference && variableWrapper.isWrapped(target[property])) {\r\n        variableWrapper.assign(target[property], value)\r\n    } else {\r\n        target[property] = value\r\n    }\r\n};\r\nvar deepExtendArraySafe = function deepExtendArraySafe(target, changes, extendComplexObject, assignByReference) {\r\n    var prevValue;\r\n    var newValue;\r\n    for (var name in changes) {\r\n        prevValue = target[name];\r\n        newValue = changes[name];\r\n        if (\"__proto__\" === name || \"constructor\" === name || target === newValue) {\r\n            continue\r\n        }\r\n        if (isPlainObject(newValue)) {\r\n            var goDeeper = extendComplexObject ? isObject(prevValue) : isPlainObject(prevValue);\r\n            newValue = deepExtendArraySafe(goDeeper ? prevValue : {}, newValue, extendComplexObject, assignByReference)\r\n        }\r\n        if (void 0 !== newValue && prevValue !== newValue) {\r\n            assignValueToProperty(target, name, newValue, assignByReference)\r\n        }\r\n    }\r\n    return target\r\n};\r\nexport {\r\n    clone,\r\n    orderEach,\r\n    deepExtendArraySafe\r\n};\r\n"]},"metadata":{},"sourceType":"module"}