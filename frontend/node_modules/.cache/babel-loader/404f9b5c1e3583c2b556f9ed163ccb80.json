{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/options/utils.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport devices from \"../devices\";\nimport { isEmptyObject, isFunction } from \"../utils/type\";\nimport { findBestMatches } from \"../utils/common\";\nimport { extend } from \"../utils/extend\";\nimport { compileGetter } from \"../utils/data\";\nvar cachedGetters = {};\nexport var convertRulesToOptions = rules => {\n  var currentDevice = devices.current();\n  return rules.reduce((options, _ref) => {\n    var {\n      device: device,\n      options: ruleOptions\n    } = _ref;\n    var deviceFilter = device || {};\n    var match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\n\n    if (match) {\n      extend(true, options, ruleOptions);\n    }\n\n    return options;\n  }, {});\n};\nexport var normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\n  [options]: value\n};\nexport var deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\nexport var getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\nexport var getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\nexport var getNestedOptionValue = function (optionsObject, name) {\n  cachedGetters[name] = cachedGetters[name] || compileGetter(name);\n  return cachedGetters[name](optionsObject, {\n    functionsAsIs: true\n  });\n};\nexport var createDefaultOptionRules = function () {\n  var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  return options;\n};","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/options/utils.js"],"names":["devices","isEmptyObject","isFunction","findBestMatches","extend","compileGetter","cachedGetters","convertRulesToOptions","rules","currentDevice","current","reduce","options","_ref","device","ruleOptions","deviceFilter","match","deviceMatch","normalizeOptions","value","filter","length","getFieldName","fullName","substr","lastIndexOf","getParentName","getNestedOptionValue","optionsObject","name","functionsAsIs","createDefaultOptionRules","arguments"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,YAApB;AACA,SACIC,aADJ,EAEIC,UAFJ,QAGO,eAHP;AAIA,SACIC,eADJ,QAEO,iBAFP;AAGA,SACIC,MADJ,QAEO,iBAFP;AAGA,SACIC,aADJ,QAEO,eAFP;AAGA,IAAIC,aAAa,GAAG,EAApB;AACA,OAAO,IAAIC,qBAAqB,GAAGC,KAAK,IAAI;AACxC,MAAIC,aAAa,GAAGT,OAAO,CAACU,OAAR,EAApB;AACA,SAAOF,KAAK,CAACG,MAAN,CAAa,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACnC,QAAI;AACAC,MAAAA,MAAM,EAAEA,MADR;AAEAF,MAAAA,OAAO,EAAEG;AAFT,QAGAF,IAHJ;AAIA,QAAIG,YAAY,GAAGF,MAAM,IAAI,EAA7B;AACA,QAAIG,KAAK,GAAGf,UAAU,CAACc,YAAD,CAAV,GAA2BA,YAAY,CAACP,aAAD,CAAvC,GAAyDS,WAAW,CAACT,aAAD,EAAgBO,YAAhB,CAAhF;;AACA,QAAIC,KAAJ,EAAW;AACPb,MAAAA,MAAM,CAAC,IAAD,EAAOQ,OAAP,EAAgBG,WAAhB,CAAN;AACH;;AACD,WAAOH,OAAP;AACH,GAXM,EAWJ,EAXI,CAAP;AAYH,CAdM;AAeP,OAAO,IAAIO,gBAAgB,GAAG,CAACP,OAAD,EAAUQ,KAAV,KAAoB,aAAa,OAAOR,OAApB,GAA8BA,OAA9B,GAAwC;AACtF,GAACA,OAAD,GAAWQ;AAD2E,CAAnF;AAGP,OAAO,IAAIF,WAAW,GAAG,CAACJ,MAAD,EAASO,MAAT,KAAoBpB,aAAa,CAACoB,MAAD,CAAb,IAAyBlB,eAAe,CAACW,MAAD,EAAS,CAACO,MAAD,CAAT,CAAf,CAAkCC,MAAlC,GAA2C,CAA1G;AACP,OAAO,IAAIC,YAAY,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAgBD,QAAQ,CAACE,WAAT,CAAqB,GAArB,IAA4B,CAA5C,CAA/B;AACP,OAAO,IAAIC,aAAa,GAAGH,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAgB,CAAhB,EAAmBD,QAAQ,CAACE,WAAT,CAAqB,GAArB,CAAnB,CAAhC;AACP,OAAO,IAAIE,oBAAoB,GAAG,UAASC,aAAT,EAAwBC,IAAxB,EAA8B;AAC5DxB,EAAAA,aAAa,CAACwB,IAAD,CAAb,GAAsBxB,aAAa,CAACwB,IAAD,CAAb,IAAuBzB,aAAa,CAACyB,IAAD,CAA1D;AACA,SAAOxB,aAAa,CAACwB,IAAD,CAAb,CAAoBD,aAApB,EAAmC;AACtCE,IAAAA,aAAa,EAAE;AADuB,GAAnC,CAAP;AAGH,CALM;AAMP,OAAO,IAAIC,wBAAwB,GAAG,YAAW;AAC7C,MAAIpB,OAAO,GAAGqB,SAAS,CAACX,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWW,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,EAA/E;AACA,SAAOrB,OAAP;AACH,CAHM","sourcesContent":["/**\r\n * DevExtreme (esm/core/options/utils.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport devices from \"../devices\";\r\nimport {\r\n    isEmptyObject,\r\n    isFunction\r\n} from \"../utils/type\";\r\nimport {\r\n    findBestMatches\r\n} from \"../utils/common\";\r\nimport {\r\n    extend\r\n} from \"../utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../utils/data\";\r\nvar cachedGetters = {};\r\nexport var convertRulesToOptions = rules => {\r\n    var currentDevice = devices.current();\r\n    return rules.reduce((options, _ref) => {\r\n        var {\r\n            device: device,\r\n            options: ruleOptions\r\n        } = _ref;\r\n        var deviceFilter = device || {};\r\n        var match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\r\n        if (match) {\r\n            extend(true, options, ruleOptions)\r\n        }\r\n        return options\r\n    }, {})\r\n};\r\nexport var normalizeOptions = (options, value) => \"string\" !== typeof options ? options : {\r\n    [options]: value\r\n};\r\nexport var deviceMatch = (device, filter) => isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\r\nexport var getFieldName = fullName => fullName.substr(fullName.lastIndexOf(\".\") + 1);\r\nexport var getParentName = fullName => fullName.substr(0, fullName.lastIndexOf(\".\"));\r\nexport var getNestedOptionValue = function(optionsObject, name) {\r\n    cachedGetters[name] = cachedGetters[name] || compileGetter(name);\r\n    return cachedGetters[name](optionsObject, {\r\n        functionsAsIs: true\r\n    })\r\n};\r\nexport var createDefaultOptionRules = function() {\r\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    return options\r\n};\r\n"]},"metadata":{},"sourceType":"module"}