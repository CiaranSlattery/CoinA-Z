{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/postponed_operations.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { Deferred, when } from \"./utils/deferred\";\nimport { isDefined } from \"./utils/type\";\nexport class PostponedOperations {\n  constructor() {\n    this._postponedOperations = {};\n  }\n\n  add(key, fn, postponedPromise) {\n    if (key in this._postponedOperations) {\n      postponedPromise && this._postponedOperations[key].promises.push(postponedPromise);\n    } else {\n      var completePromise = new Deferred();\n      this._postponedOperations[key] = {\n        fn: fn,\n        completePromise: completePromise,\n        promises: postponedPromise ? [postponedPromise] : []\n      };\n    }\n\n    return this._postponedOperations[key].completePromise.promise();\n  }\n\n  callPostponedOperations() {\n    for (var key in this._postponedOperations) {\n      var operation = this._postponedOperations[key];\n\n      if (isDefined(operation)) {\n        if (operation.promises && operation.promises.length) {\n          when(...operation.promises).done(operation.fn).then(operation.completePromise.resolve);\n        } else {\n          operation.fn().done(operation.completePromise.resolve);\n        }\n      }\n    }\n\n    this._postponedOperations = {};\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/postponed_operations.js"],"names":["Deferred","when","isDefined","PostponedOperations","constructor","_postponedOperations","add","key","fn","postponedPromise","promises","push","completePromise","promise","callPostponedOperations","operation","length","done","then","resolve"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,QADJ,EAEIC,IAFJ,QAGO,kBAHP;AAIA,SACIC,SADJ,QAEO,cAFP;AAGA,OAAO,MAAMC,mBAAN,CAA0B;AAC7BC,EAAAA,WAAW,GAAG;AACV,SAAKC,oBAAL,GAA4B,EAA5B;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,EAAN,EAAUC,gBAAV,EAA4B;AAC3B,QAAIF,GAAG,IAAI,KAAKF,oBAAhB,EAAsC;AAClCI,MAAAA,gBAAgB,IAAI,KAAKJ,oBAAL,CAA0BE,GAA1B,EAA+BG,QAA/B,CAAwCC,IAAxC,CAA6CF,gBAA7C,CAApB;AACH,KAFD,MAEO;AACH,UAAIG,eAAe,GAAG,IAAIZ,QAAJ,EAAtB;AACA,WAAKK,oBAAL,CAA0BE,GAA1B,IAAiC;AAC7BC,QAAAA,EAAE,EAAEA,EADyB;AAE7BI,QAAAA,eAAe,EAAEA,eAFY;AAG7BF,QAAAA,QAAQ,EAAED,gBAAgB,GAAG,CAACA,gBAAD,CAAH,GAAwB;AAHrB,OAAjC;AAKH;;AACD,WAAO,KAAKJ,oBAAL,CAA0BE,GAA1B,EAA+BK,eAA/B,CAA+CC,OAA/C,EAAP;AACH;;AACDC,EAAAA,uBAAuB,GAAG;AACtB,SAAK,IAAIP,GAAT,IAAgB,KAAKF,oBAArB,EAA2C;AACvC,UAAIU,SAAS,GAAG,KAAKV,oBAAL,CAA0BE,GAA1B,CAAhB;;AACA,UAAIL,SAAS,CAACa,SAAD,CAAb,EAA0B;AACtB,YAAIA,SAAS,CAACL,QAAV,IAAsBK,SAAS,CAACL,QAAV,CAAmBM,MAA7C,EAAqD;AACjDf,UAAAA,IAAI,CAAC,GAAGc,SAAS,CAACL,QAAd,CAAJ,CAA4BO,IAA5B,CAAiCF,SAAS,CAACP,EAA3C,EAA+CU,IAA/C,CAAoDH,SAAS,CAACH,eAAV,CAA0BO,OAA9E;AACH,SAFD,MAEO;AACHJ,UAAAA,SAAS,CAACP,EAAV,GAAeS,IAAf,CAAoBF,SAAS,CAACH,eAAV,CAA0BO,OAA9C;AACH;AACJ;AACJ;;AACD,SAAKd,oBAAL,GAA4B,EAA5B;AACH;;AA7B4B","sourcesContent":["/**\r\n * DevExtreme (esm/core/postponed_operations.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"./utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"./utils/type\";\r\nexport class PostponedOperations {\r\n    constructor() {\r\n        this._postponedOperations = {}\r\n    }\r\n    add(key, fn, postponedPromise) {\r\n        if (key in this._postponedOperations) {\r\n            postponedPromise && this._postponedOperations[key].promises.push(postponedPromise)\r\n        } else {\r\n            var completePromise = new Deferred;\r\n            this._postponedOperations[key] = {\r\n                fn: fn,\r\n                completePromise: completePromise,\r\n                promises: postponedPromise ? [postponedPromise] : []\r\n            }\r\n        }\r\n        return this._postponedOperations[key].completePromise.promise()\r\n    }\r\n    callPostponedOperations() {\r\n        for (var key in this._postponedOperations) {\r\n            var operation = this._postponedOperations[key];\r\n            if (isDefined(operation)) {\r\n                if (operation.promises && operation.promises.length) {\r\n                    when(...operation.promises).done(operation.fn).then(operation.completePromise.resolve)\r\n                } else {\r\n                    operation.fn().done(operation.completePromise.resolve)\r\n                }\r\n            }\r\n        }\r\n        this._postponedOperations = {}\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}