{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/data.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport errors from \"../errors\";\nimport Class from \"../class\";\nimport { deepExtendArraySafe } from \"./object\";\nimport { isObject, isPlainObject, isFunction, isDefined } from \"./type\";\nimport { each } from \"./iterator\";\nimport variableWrapper from \"./variable_wrapper\";\nvar unwrapVariable = variableWrapper.unwrap;\nvar isWrapped = variableWrapper.isWrapped;\nvar assign = variableWrapper.assign;\n\nvar bracketsToDots = function (expr) {\n  return expr.replace(/\\[/g, \".\").replace(/\\]/g, \"\");\n};\n\nexport var getPathParts = function (name) {\n  return bracketsToDots(name).split(\".\");\n};\n\nvar readPropValue = function (obj, propName, options) {\n  options = options || {};\n\n  if (\"this\" === propName) {\n    return unwrap(obj, options);\n  }\n\n  return unwrap(obj[propName], options);\n};\n\nvar assignPropValue = function (obj, propName, value, options) {\n  if (\"this\" === propName) {\n    throw new errors.Error(\"E4016\");\n  }\n\n  var propValue = obj[propName];\n\n  if (options.unwrapObservables && isWrapped(propValue)) {\n    assign(propValue, value);\n  } else {\n    obj[propName] = value;\n  }\n};\n\nvar prepareOptions = function (options) {\n  options = options || {};\n  options.unwrapObservables = void 0 !== options.unwrapObservables ? options.unwrapObservables : true;\n  return options;\n};\n\nfunction unwrap(value, options) {\n  return options.unwrapObservables ? unwrapVariable(value) : value;\n}\n\nexport var compileGetter = function (expr) {\n  if (arguments.length > 1) {\n    expr = [].slice.call(arguments);\n  }\n\n  if (!expr || \"this\" === expr) {\n    return function (obj) {\n      return obj;\n    };\n  }\n\n  if (\"string\" === typeof expr) {\n    var path = getPathParts(expr);\n    return function (obj, options) {\n      options = prepareOptions(options);\n      var functionAsIs = options.functionsAsIs;\n      var hasDefaultValue = (\"defaultValue\" in options);\n      var current = unwrap(obj, options);\n\n      for (var i = 0; i < path.length; i++) {\n        if (!current) {\n          if (null == current && hasDefaultValue) {\n            return options.defaultValue;\n          }\n\n          break;\n        }\n\n        var pathPart = path[i];\n\n        if (hasDefaultValue && isObject(current) && !(pathPart in current)) {\n          return options.defaultValue;\n        }\n\n        var next = unwrap(current[pathPart], options);\n\n        if (!functionAsIs && isFunction(next)) {\n          next = next.call(current);\n        }\n\n        current = next;\n      }\n\n      return current;\n    };\n  }\n\n  if (Array.isArray(expr)) {\n    return combineGetters(expr);\n  }\n\n  if (isFunction(expr)) {\n    return expr;\n  }\n};\n\nfunction combineGetters(getters) {\n  var compiledGetters = {};\n\n  for (var i = 0, l = getters.length; i < l; i++) {\n    var getter = getters[i];\n    compiledGetters[getter] = compileGetter(getter);\n  }\n\n  return function (obj, options) {\n    var result;\n    each(compiledGetters, function (name) {\n      var value = this(obj, options);\n\n      if (void 0 === value) {\n        return;\n      }\n\n      var current = result || (result = {});\n      var path = name.split(\".\");\n      var last = path.length - 1;\n\n      for (var _i = 0; _i < last; _i++) {\n        var pathItem = path[_i];\n\n        if (!(pathItem in current)) {\n          current[pathItem] = {};\n        }\n\n        current = current[pathItem];\n      }\n\n      current[path[last]] = value;\n    });\n    return result;\n  };\n}\n\nvar ensurePropValueDefined = function (obj, propName, value, options) {\n  if (isDefined(value)) {\n    return value;\n  }\n\n  var newValue = {};\n  assignPropValue(obj, propName, newValue, options);\n  return newValue;\n};\n\nexport var compileSetter = function (expr) {\n  expr = getPathParts(expr || \"this\");\n  var lastLevelIndex = expr.length - 1;\n  return function (obj, value, options) {\n    options = prepareOptions(options);\n    var currentValue = unwrap(obj, options);\n    expr.forEach(function (propertyName, levelIndex) {\n      var propertyValue = readPropValue(currentValue, propertyName, options);\n      var isPropertyFunc = !options.functionsAsIs && isFunction(propertyValue) && !isWrapped(propertyValue);\n\n      if (levelIndex === lastLevelIndex) {\n        if (options.merge && isPlainObject(value) && (!isDefined(propertyValue) || isPlainObject(propertyValue))) {\n          propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\n          deepExtendArraySafe(propertyValue, value, false, true);\n        } else if (isPropertyFunc) {\n          currentValue[propertyName](value);\n        } else {\n          assignPropValue(currentValue, propertyName, value, options);\n        }\n      } else {\n        propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\n\n        if (isPropertyFunc) {\n          propertyValue = propertyValue.call(currentValue);\n        }\n\n        currentValue = propertyValue;\n      }\n    });\n  };\n};\nexport var toComparable = function (value, caseSensitive) {\n  if (value instanceof Date) {\n    return value.getTime();\n  }\n\n  if (value && value instanceof Class && value.valueOf) {\n    return value.valueOf();\n  }\n\n  if (!caseSensitive && \"string\" === typeof value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n};","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/core/utils/data.js"],"names":["errors","Class","deepExtendArraySafe","isObject","isPlainObject","isFunction","isDefined","each","variableWrapper","unwrapVariable","unwrap","isWrapped","assign","bracketsToDots","expr","replace","getPathParts","name","split","readPropValue","obj","propName","options","assignPropValue","value","Error","propValue","unwrapObservables","prepareOptions","compileGetter","arguments","length","slice","call","path","functionAsIs","functionsAsIs","hasDefaultValue","current","i","defaultValue","pathPart","next","Array","isArray","combineGetters","getters","compiledGetters","l","getter","result","last","_i","pathItem","ensurePropValueDefined","newValue","compileSetter","lastLevelIndex","currentValue","forEach","propertyName","levelIndex","propertyValue","isPropertyFunc","merge","toComparable","caseSensitive","Date","getTime","valueOf","toLowerCase"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/data.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport errors from \"../errors\";\r\nimport Class from \"../class\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"./object\";\r\nimport {\r\n    isObject,\r\n    isPlainObject,\r\n    isFunction,\r\n    isDefined\r\n} from \"./type\";\r\nimport {\r\n    each\r\n} from \"./iterator\";\r\nimport variableWrapper from \"./variable_wrapper\";\r\nvar unwrapVariable = variableWrapper.unwrap;\r\nvar isWrapped = variableWrapper.isWrapped;\r\nvar assign = variableWrapper.assign;\r\nvar bracketsToDots = function(expr) {\r\n    return expr.replace(/\\[/g, \".\").replace(/\\]/g, \"\")\r\n};\r\nexport var getPathParts = function(name) {\r\n    return bracketsToDots(name).split(\".\")\r\n};\r\nvar readPropValue = function(obj, propName, options) {\r\n    options = options || {};\r\n    if (\"this\" === propName) {\r\n        return unwrap(obj, options)\r\n    }\r\n    return unwrap(obj[propName], options)\r\n};\r\nvar assignPropValue = function(obj, propName, value, options) {\r\n    if (\"this\" === propName) {\r\n        throw new errors.Error(\"E4016\")\r\n    }\r\n    var propValue = obj[propName];\r\n    if (options.unwrapObservables && isWrapped(propValue)) {\r\n        assign(propValue, value)\r\n    } else {\r\n        obj[propName] = value\r\n    }\r\n};\r\nvar prepareOptions = function(options) {\r\n    options = options || {};\r\n    options.unwrapObservables = void 0 !== options.unwrapObservables ? options.unwrapObservables : true;\r\n    return options\r\n};\r\n\r\nfunction unwrap(value, options) {\r\n    return options.unwrapObservables ? unwrapVariable(value) : value\r\n}\r\nexport var compileGetter = function(expr) {\r\n    if (arguments.length > 1) {\r\n        expr = [].slice.call(arguments)\r\n    }\r\n    if (!expr || \"this\" === expr) {\r\n        return function(obj) {\r\n            return obj\r\n        }\r\n    }\r\n    if (\"string\" === typeof expr) {\r\n        var path = getPathParts(expr);\r\n        return function(obj, options) {\r\n            options = prepareOptions(options);\r\n            var functionAsIs = options.functionsAsIs;\r\n            var hasDefaultValue = \"defaultValue\" in options;\r\n            var current = unwrap(obj, options);\r\n            for (var i = 0; i < path.length; i++) {\r\n                if (!current) {\r\n                    if (null == current && hasDefaultValue) {\r\n                        return options.defaultValue\r\n                    }\r\n                    break\r\n                }\r\n                var pathPart = path[i];\r\n                if (hasDefaultValue && isObject(current) && !(pathPart in current)) {\r\n                    return options.defaultValue\r\n                }\r\n                var next = unwrap(current[pathPart], options);\r\n                if (!functionAsIs && isFunction(next)) {\r\n                    next = next.call(current)\r\n                }\r\n                current = next\r\n            }\r\n            return current\r\n        }\r\n    }\r\n    if (Array.isArray(expr)) {\r\n        return combineGetters(expr)\r\n    }\r\n    if (isFunction(expr)) {\r\n        return expr\r\n    }\r\n};\r\n\r\nfunction combineGetters(getters) {\r\n    var compiledGetters = {};\r\n    for (var i = 0, l = getters.length; i < l; i++) {\r\n        var getter = getters[i];\r\n        compiledGetters[getter] = compileGetter(getter)\r\n    }\r\n    return function(obj, options) {\r\n        var result;\r\n        each(compiledGetters, (function(name) {\r\n            var value = this(obj, options);\r\n            if (void 0 === value) {\r\n                return\r\n            }\r\n            var current = result || (result = {});\r\n            var path = name.split(\".\");\r\n            var last = path.length - 1;\r\n            for (var _i = 0; _i < last; _i++) {\r\n                var pathItem = path[_i];\r\n                if (!(pathItem in current)) {\r\n                    current[pathItem] = {}\r\n                }\r\n                current = current[pathItem]\r\n            }\r\n            current[path[last]] = value\r\n        }));\r\n        return result\r\n    }\r\n}\r\nvar ensurePropValueDefined = function(obj, propName, value, options) {\r\n    if (isDefined(value)) {\r\n        return value\r\n    }\r\n    var newValue = {};\r\n    assignPropValue(obj, propName, newValue, options);\r\n    return newValue\r\n};\r\nexport var compileSetter = function(expr) {\r\n    expr = getPathParts(expr || \"this\");\r\n    var lastLevelIndex = expr.length - 1;\r\n    return function(obj, value, options) {\r\n        options = prepareOptions(options);\r\n        var currentValue = unwrap(obj, options);\r\n        expr.forEach((function(propertyName, levelIndex) {\r\n            var propertyValue = readPropValue(currentValue, propertyName, options);\r\n            var isPropertyFunc = !options.functionsAsIs && isFunction(propertyValue) && !isWrapped(propertyValue);\r\n            if (levelIndex === lastLevelIndex) {\r\n                if (options.merge && isPlainObject(value) && (!isDefined(propertyValue) || isPlainObject(propertyValue))) {\r\n                    propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\r\n                    deepExtendArraySafe(propertyValue, value, false, true)\r\n                } else if (isPropertyFunc) {\r\n                    currentValue[propertyName](value)\r\n                } else {\r\n                    assignPropValue(currentValue, propertyName, value, options)\r\n                }\r\n            } else {\r\n                propertyValue = ensurePropValueDefined(currentValue, propertyName, propertyValue, options);\r\n                if (isPropertyFunc) {\r\n                    propertyValue = propertyValue.call(currentValue)\r\n                }\r\n                currentValue = propertyValue\r\n            }\r\n        }))\r\n    }\r\n};\r\nexport var toComparable = function(value, caseSensitive) {\r\n    if (value instanceof Date) {\r\n        return value.getTime()\r\n    }\r\n    if (value && value instanceof Class && value.valueOf) {\r\n        return value.valueOf()\r\n    }\r\n    if (!caseSensitive && \"string\" === typeof value) {\r\n        return value.toLowerCase()\r\n    }\r\n    return value\r\n};\r\n"]},"metadata":{},"sourceType":"module"}