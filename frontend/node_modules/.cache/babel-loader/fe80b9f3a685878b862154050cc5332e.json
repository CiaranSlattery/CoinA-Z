{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/overlay/overlay_position_controller.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { isDefined, isString, isEvent, isWindow } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport positionUtils from \"../../animation/position\";\nimport { resetPosition, move, locate } from \"../../animation/translator\";\nimport { getWindow } from \"../../core/utils/window\";\nimport { originalViewPort, value as viewPort } from \"../../core/utils/view_port\";\nvar window = getWindow();\nvar OVERLAY_POSITION_ALIASES = {\n  top: {\n    my: \"top center\",\n    at: \"top center\"\n  },\n  bottom: {\n    my: \"bottom center\",\n    at: \"bottom center\"\n  },\n  right: {\n    my: \"right center\",\n    at: \"right center\"\n  },\n  left: {\n    my: \"left center\",\n    at: \"left center\"\n  },\n  center: {\n    my: \"center\",\n    at: \"center\"\n  },\n  \"right bottom\": {\n    my: \"right bottom\",\n    at: \"right bottom\"\n  },\n  \"right top\": {\n    my: \"right top\",\n    at: \"right top\"\n  },\n  \"left bottom\": {\n    my: \"left bottom\",\n    at: \"left bottom\"\n  },\n  \"left top\": {\n    my: \"left top\",\n    at: \"left top\"\n  }\n};\nvar OVERLAY_DEFAULT_BOUNDARY_OFFSET = {\n  h: 0,\n  v: 0\n};\n\nclass OverlayPositionController {\n  constructor(_ref) {\n    var {\n      position: position,\n      target: target,\n      container: container,\n      $root: $root,\n      $content: $content,\n      $wrapper: $wrapper,\n      onPositioned: onPositioned,\n      onVisualPositionChanged: onVisualPositionChanged,\n      dragOutsideBoundary: dragOutsideBoundary,\n      dragAndResizeArea: dragAndResizeArea,\n      outsideDragFactor: outsideDragFactor,\n      restorePosition: restorePosition,\n      _fixWrapperPosition: _fixWrapperPosition\n    } = _ref;\n    this._props = {\n      position: position,\n      target: target,\n      container: container,\n      dragOutsideBoundary: dragOutsideBoundary,\n      dragAndResizeArea: dragAndResizeArea,\n      outsideDragFactor: outsideDragFactor,\n      restorePosition: restorePosition,\n      onPositioned: onPositioned,\n      onVisualPositionChanged: onVisualPositionChanged,\n      _fixWrapperPosition: _fixWrapperPosition\n    };\n    this._$root = $root;\n    this._$content = $content;\n    this._$wrapper = $wrapper;\n    this._$markupContainer = void 0;\n    this._$wrapperCoveredElement = void 0;\n    this._shouldRenderContentInitialPosition = true;\n    this._visualPosition = void 0;\n    this._initialPosition = void 0;\n    this._previousVisualPosition = void 0;\n    this._$dragResizeContainer = void 0;\n    this._outsideDragFactor = void 0;\n    this.updateContainer(container);\n    this.updatePosition(position, target);\n\n    this._updateDragResizeContainer();\n\n    this._updateOutsideDragFactor();\n  }\n\n  get $container() {\n    return this._$markupContainer;\n  }\n\n  get $dragResizeContainer() {\n    return this._$dragResizeContainer;\n  }\n\n  get outsideDragFactor() {\n    return this._outsideDragFactor;\n  }\n\n  set fixWrapperPosition(fixWrapperPosition) {\n    this._props._fixWrapperPosition = fixWrapperPosition;\n    this.styleWrapperPosition();\n  }\n\n  set dragAndResizeArea(dragAndResizeArea) {\n    this._props.dragAndResizeArea = dragAndResizeArea;\n\n    this._updateDragResizeContainer();\n  }\n\n  set dragOutsideBoundary(dragOutsideBoundary) {\n    this._props.dragOutsideBoundary = dragOutsideBoundary;\n\n    this._updateDragResizeContainer();\n\n    this._updateOutsideDragFactor();\n  }\n\n  set outsideDragFactor(outsideDragFactor) {\n    this._props.outsideDragFactor = outsideDragFactor;\n\n    this._updateOutsideDragFactor();\n  }\n\n  set restorePosition(restorePosition) {\n    this._props.restorePosition = restorePosition;\n  }\n\n  restorePositionOnNextRender(value) {\n    this._shouldRenderContentInitialPosition = value || !this._visualPosition;\n  }\n\n  openingHandled() {\n    var shouldRestorePosition = this._props.restorePosition;\n    this.restorePositionOnNextRender(shouldRestorePosition);\n  }\n\n  dragHandled() {\n    this.restorePositionOnNextRender(false);\n  }\n\n  resizeHandled() {\n    this.restorePositionOnNextRender(false);\n  }\n\n  updateTarget(target) {\n    this._props.target = target;\n    this.updatePosition(this._props.position, target);\n  }\n\n  updatePosition(positionProp) {\n    var targetProp = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._props.target;\n    this._props.position = positionProp;\n    this._position = this._normalizePosition(positionProp, targetProp);\n\n    this._updateWrapperCoveredElement();\n  }\n\n  updateContainer(containerProp) {\n    this._props.container = containerProp;\n    var container = null !== containerProp && void 0 !== containerProp ? containerProp : viewPort();\n\n    var $container = this._$root.closest(container);\n\n    if (!$container.length) {\n      $container = $(container).first();\n    }\n\n    this._$markupContainer = $container.length ? $container : this._$root.parent();\n\n    this._updateWrapperCoveredElement();\n\n    this._updateDragResizeContainer();\n  }\n\n  detectVisualPositionChange(event) {\n    this._updateVisualPositionValue();\n\n    this._raisePositionedEvents(event);\n  }\n\n  positionContent() {\n    if (this._shouldRenderContentInitialPosition) {\n      this._renderContentInitialPosition();\n    } else {\n      move(this._$content, this._visualPosition);\n      this.detectVisualPositionChange();\n    }\n  }\n\n  positionWrapper() {\n    if (this._$wrapperCoveredElement) {\n      positionUtils.setup(this._$wrapper, {\n        my: \"top left\",\n        at: \"top left\",\n        of: this._$wrapperCoveredElement\n      });\n    }\n  }\n\n  isAllWindowCoveredByWrapper() {\n    return !this._$wrapperCoveredElement || isWindow(this._$wrapperCoveredElement.get(0));\n  }\n\n  styleWrapperPosition() {\n    var useFixed = this.isAllWindowCoveredByWrapper() || this._props._fixWrapperPosition;\n\n    var positionStyle = useFixed ? \"fixed\" : \"absolute\";\n\n    this._$wrapper.css(\"position\", positionStyle);\n  }\n\n  _updateVisualPositionValue() {\n    this._previousVisualPosition = this._visualPosition;\n    this._visualPosition = locate(this._$content);\n  }\n\n  _renderContentInitialPosition() {\n    this._renderBoundaryOffset();\n\n    resetPosition(this._$content);\n\n    var wrapperOverflow = this._$wrapper.css(\"overflow\");\n\n    this._$wrapper.css(\"overflow\", \"hidden\");\n\n    var resultPosition = positionUtils.setup(this._$content, this._position);\n\n    this._$wrapper.css(\"overflow\", wrapperOverflow);\n\n    this._initialPosition = resultPosition;\n    this.detectVisualPositionChange();\n  }\n\n  _raisePositionedEvents(event) {\n    var previousPosition = this._previousVisualPosition;\n    var newPosition = this._visualPosition;\n    var isVisualPositionChanged = (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.top) !== newPosition.top || (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.left) !== newPosition.left;\n\n    if (isVisualPositionChanged) {\n      this._props.onVisualPositionChanged({\n        previousPosition: previousPosition,\n        position: newPosition,\n        event: event\n      });\n    }\n\n    this._props.onPositioned({\n      position: this._initialPosition\n    });\n  }\n\n  _updateOutsideDragFactor() {\n    this._outsideDragFactor = this._getOutsideDragFactor();\n  }\n\n  _getOutsideDragFactor() {\n    if (this._props.dragOutsideBoundary) {\n      return 1;\n    }\n\n    return this._props.outsideDragFactor;\n  }\n\n  _updateDragResizeContainer() {\n    this._$dragResizeContainer = this._getDragResizeContainer();\n  }\n\n  _getDragResizeContainer() {\n    if (this._props.dragOutsideBoundary) {\n      return $(window);\n    }\n\n    if (this._props.dragAndResizeArea) {\n      return $(this._props.dragAndResizeArea);\n    }\n\n    var isContainerDefined = originalViewPort().get(0) || this._props.container;\n\n    return isContainerDefined ? this._$markupContainer : $(window);\n  }\n\n  _updateWrapperCoveredElement() {\n    this._$wrapperCoveredElement = this._getWrapperCoveredElement();\n  }\n\n  _renderBoundaryOffset() {\n    var _this$_position;\n\n    var boundaryOffset = null !== (_this$_position = this._position) && void 0 !== _this$_position ? _this$_position : {\n      boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\n    };\n\n    this._$content.css(\"margin\", \"\".concat(boundaryOffset.v, \"px \").concat(boundaryOffset.h, \"px\"));\n  }\n\n  _getWrapperCoveredElement() {\n    var containerProp = this._props.container;\n\n    if (containerProp) {\n      return $(containerProp);\n    }\n\n    if (this._position) {\n      return $(isEvent(this._position.of) ? window : this._position.of || window);\n    }\n  }\n\n  _normalizePosition(positionProp, targetProp) {\n    var defaultPositionConfig = {\n      of: targetProp,\n      boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\n    };\n\n    if (isDefined(positionProp)) {\n      return extend(true, {}, defaultPositionConfig, this._positionToObject(positionProp));\n    } else {\n      return defaultPositionConfig;\n    }\n  }\n\n  _positionToObject(position) {\n    if (isString(position)) {\n      return extend({}, OVERLAY_POSITION_ALIASES[position]);\n    }\n\n    return position;\n  }\n\n}\n\nexport { OVERLAY_POSITION_ALIASES, OverlayPositionController };","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/overlay/overlay_position_controller.js"],"names":["$","isDefined","isString","isEvent","isWindow","extend","positionUtils","resetPosition","move","locate","getWindow","originalViewPort","value","viewPort","window","OVERLAY_POSITION_ALIASES","top","my","at","bottom","right","left","center","OVERLAY_DEFAULT_BOUNDARY_OFFSET","h","v","OverlayPositionController","constructor","_ref","position","target","container","$root","$content","$wrapper","onPositioned","onVisualPositionChanged","dragOutsideBoundary","dragAndResizeArea","outsideDragFactor","restorePosition","_fixWrapperPosition","_props","_$root","_$content","_$wrapper","_$markupContainer","_$wrapperCoveredElement","_shouldRenderContentInitialPosition","_visualPosition","_initialPosition","_previousVisualPosition","_$dragResizeContainer","_outsideDragFactor","updateContainer","updatePosition","_updateDragResizeContainer","_updateOutsideDragFactor","$container","$dragResizeContainer","fixWrapperPosition","styleWrapperPosition","restorePositionOnNextRender","openingHandled","shouldRestorePosition","dragHandled","resizeHandled","updateTarget","positionProp","targetProp","arguments","length","_position","_normalizePosition","_updateWrapperCoveredElement","containerProp","closest","first","parent","detectVisualPositionChange","event","_updateVisualPositionValue","_raisePositionedEvents","positionContent","_renderContentInitialPosition","positionWrapper","setup","of","isAllWindowCoveredByWrapper","get","useFixed","positionStyle","css","_renderBoundaryOffset","wrapperOverflow","resultPosition","previousPosition","newPosition","isVisualPositionChanged","_getOutsideDragFactor","_getDragResizeContainer","isContainerDefined","_getWrapperCoveredElement","_this$_position","boundaryOffset","concat","defaultPositionConfig","_positionToObject"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/overlay/overlay_position_controller.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isEvent,\r\n    isWindow\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    resetPosition,\r\n    move,\r\n    locate\r\n} from \"../../animation/translator\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    originalViewPort,\r\n    value as viewPort\r\n} from \"../../core/utils/view_port\";\r\nvar window = getWindow();\r\nvar OVERLAY_POSITION_ALIASES = {\r\n    top: {\r\n        my: \"top center\",\r\n        at: \"top center\"\r\n    },\r\n    bottom: {\r\n        my: \"bottom center\",\r\n        at: \"bottom center\"\r\n    },\r\n    right: {\r\n        my: \"right center\",\r\n        at: \"right center\"\r\n    },\r\n    left: {\r\n        my: \"left center\",\r\n        at: \"left center\"\r\n    },\r\n    center: {\r\n        my: \"center\",\r\n        at: \"center\"\r\n    },\r\n    \"right bottom\": {\r\n        my: \"right bottom\",\r\n        at: \"right bottom\"\r\n    },\r\n    \"right top\": {\r\n        my: \"right top\",\r\n        at: \"right top\"\r\n    },\r\n    \"left bottom\": {\r\n        my: \"left bottom\",\r\n        at: \"left bottom\"\r\n    },\r\n    \"left top\": {\r\n        my: \"left top\",\r\n        at: \"left top\"\r\n    }\r\n};\r\nvar OVERLAY_DEFAULT_BOUNDARY_OFFSET = {\r\n    h: 0,\r\n    v: 0\r\n};\r\nclass OverlayPositionController {\r\n    constructor(_ref) {\r\n        var {\r\n            position: position,\r\n            target: target,\r\n            container: container,\r\n            $root: $root,\r\n            $content: $content,\r\n            $wrapper: $wrapper,\r\n            onPositioned: onPositioned,\r\n            onVisualPositionChanged: onVisualPositionChanged,\r\n            dragOutsideBoundary: dragOutsideBoundary,\r\n            dragAndResizeArea: dragAndResizeArea,\r\n            outsideDragFactor: outsideDragFactor,\r\n            restorePosition: restorePosition,\r\n            _fixWrapperPosition: _fixWrapperPosition\r\n        } = _ref;\r\n        this._props = {\r\n            position: position,\r\n            target: target,\r\n            container: container,\r\n            dragOutsideBoundary: dragOutsideBoundary,\r\n            dragAndResizeArea: dragAndResizeArea,\r\n            outsideDragFactor: outsideDragFactor,\r\n            restorePosition: restorePosition,\r\n            onPositioned: onPositioned,\r\n            onVisualPositionChanged: onVisualPositionChanged,\r\n            _fixWrapperPosition: _fixWrapperPosition\r\n        };\r\n        this._$root = $root;\r\n        this._$content = $content;\r\n        this._$wrapper = $wrapper;\r\n        this._$markupContainer = void 0;\r\n        this._$wrapperCoveredElement = void 0;\r\n        this._shouldRenderContentInitialPosition = true;\r\n        this._visualPosition = void 0;\r\n        this._initialPosition = void 0;\r\n        this._previousVisualPosition = void 0;\r\n        this._$dragResizeContainer = void 0;\r\n        this._outsideDragFactor = void 0;\r\n        this.updateContainer(container);\r\n        this.updatePosition(position, target);\r\n        this._updateDragResizeContainer();\r\n        this._updateOutsideDragFactor()\r\n    }\r\n    get $container() {\r\n        return this._$markupContainer\r\n    }\r\n    get $dragResizeContainer() {\r\n        return this._$dragResizeContainer\r\n    }\r\n    get outsideDragFactor() {\r\n        return this._outsideDragFactor\r\n    }\r\n    set fixWrapperPosition(fixWrapperPosition) {\r\n        this._props._fixWrapperPosition = fixWrapperPosition;\r\n        this.styleWrapperPosition()\r\n    }\r\n    set dragAndResizeArea(dragAndResizeArea) {\r\n        this._props.dragAndResizeArea = dragAndResizeArea;\r\n        this._updateDragResizeContainer()\r\n    }\r\n    set dragOutsideBoundary(dragOutsideBoundary) {\r\n        this._props.dragOutsideBoundary = dragOutsideBoundary;\r\n        this._updateDragResizeContainer();\r\n        this._updateOutsideDragFactor()\r\n    }\r\n    set outsideDragFactor(outsideDragFactor) {\r\n        this._props.outsideDragFactor = outsideDragFactor;\r\n        this._updateOutsideDragFactor()\r\n    }\r\n    set restorePosition(restorePosition) {\r\n        this._props.restorePosition = restorePosition\r\n    }\r\n    restorePositionOnNextRender(value) {\r\n        this._shouldRenderContentInitialPosition = value || !this._visualPosition\r\n    }\r\n    openingHandled() {\r\n        var shouldRestorePosition = this._props.restorePosition;\r\n        this.restorePositionOnNextRender(shouldRestorePosition)\r\n    }\r\n    dragHandled() {\r\n        this.restorePositionOnNextRender(false)\r\n    }\r\n    resizeHandled() {\r\n        this.restorePositionOnNextRender(false)\r\n    }\r\n    updateTarget(target) {\r\n        this._props.target = target;\r\n        this.updatePosition(this._props.position, target)\r\n    }\r\n    updatePosition(positionProp) {\r\n        var targetProp = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._props.target;\r\n        this._props.position = positionProp;\r\n        this._position = this._normalizePosition(positionProp, targetProp);\r\n        this._updateWrapperCoveredElement()\r\n    }\r\n    updateContainer(containerProp) {\r\n        this._props.container = containerProp;\r\n        var container = null !== containerProp && void 0 !== containerProp ? containerProp : viewPort();\r\n        var $container = this._$root.closest(container);\r\n        if (!$container.length) {\r\n            $container = $(container).first()\r\n        }\r\n        this._$markupContainer = $container.length ? $container : this._$root.parent();\r\n        this._updateWrapperCoveredElement();\r\n        this._updateDragResizeContainer()\r\n    }\r\n    detectVisualPositionChange(event) {\r\n        this._updateVisualPositionValue();\r\n        this._raisePositionedEvents(event)\r\n    }\r\n    positionContent() {\r\n        if (this._shouldRenderContentInitialPosition) {\r\n            this._renderContentInitialPosition()\r\n        } else {\r\n            move(this._$content, this._visualPosition);\r\n            this.detectVisualPositionChange()\r\n        }\r\n    }\r\n    positionWrapper() {\r\n        if (this._$wrapperCoveredElement) {\r\n            positionUtils.setup(this._$wrapper, {\r\n                my: \"top left\",\r\n                at: \"top left\",\r\n                of: this._$wrapperCoveredElement\r\n            })\r\n        }\r\n    }\r\n    isAllWindowCoveredByWrapper() {\r\n        return !this._$wrapperCoveredElement || isWindow(this._$wrapperCoveredElement.get(0))\r\n    }\r\n    styleWrapperPosition() {\r\n        var useFixed = this.isAllWindowCoveredByWrapper() || this._props._fixWrapperPosition;\r\n        var positionStyle = useFixed ? \"fixed\" : \"absolute\";\r\n        this._$wrapper.css(\"position\", positionStyle)\r\n    }\r\n    _updateVisualPositionValue() {\r\n        this._previousVisualPosition = this._visualPosition;\r\n        this._visualPosition = locate(this._$content)\r\n    }\r\n    _renderContentInitialPosition() {\r\n        this._renderBoundaryOffset();\r\n        resetPosition(this._$content);\r\n        var wrapperOverflow = this._$wrapper.css(\"overflow\");\r\n        this._$wrapper.css(\"overflow\", \"hidden\");\r\n        var resultPosition = positionUtils.setup(this._$content, this._position);\r\n        this._$wrapper.css(\"overflow\", wrapperOverflow);\r\n        this._initialPosition = resultPosition;\r\n        this.detectVisualPositionChange()\r\n    }\r\n    _raisePositionedEvents(event) {\r\n        var previousPosition = this._previousVisualPosition;\r\n        var newPosition = this._visualPosition;\r\n        var isVisualPositionChanged = (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.top) !== newPosition.top || (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.left) !== newPosition.left;\r\n        if (isVisualPositionChanged) {\r\n            this._props.onVisualPositionChanged({\r\n                previousPosition: previousPosition,\r\n                position: newPosition,\r\n                event: event\r\n            })\r\n        }\r\n        this._props.onPositioned({\r\n            position: this._initialPosition\r\n        })\r\n    }\r\n    _updateOutsideDragFactor() {\r\n        this._outsideDragFactor = this._getOutsideDragFactor()\r\n    }\r\n    _getOutsideDragFactor() {\r\n        if (this._props.dragOutsideBoundary) {\r\n            return 1\r\n        }\r\n        return this._props.outsideDragFactor\r\n    }\r\n    _updateDragResizeContainer() {\r\n        this._$dragResizeContainer = this._getDragResizeContainer()\r\n    }\r\n    _getDragResizeContainer() {\r\n        if (this._props.dragOutsideBoundary) {\r\n            return $(window)\r\n        }\r\n        if (this._props.dragAndResizeArea) {\r\n            return $(this._props.dragAndResizeArea)\r\n        }\r\n        var isContainerDefined = originalViewPort().get(0) || this._props.container;\r\n        return isContainerDefined ? this._$markupContainer : $(window)\r\n    }\r\n    _updateWrapperCoveredElement() {\r\n        this._$wrapperCoveredElement = this._getWrapperCoveredElement()\r\n    }\r\n    _renderBoundaryOffset() {\r\n        var _this$_position;\r\n        var boundaryOffset = null !== (_this$_position = this._position) && void 0 !== _this$_position ? _this$_position : {\r\n            boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\r\n        };\r\n        this._$content.css(\"margin\", \"\".concat(boundaryOffset.v, \"px \").concat(boundaryOffset.h, \"px\"))\r\n    }\r\n    _getWrapperCoveredElement() {\r\n        var containerProp = this._props.container;\r\n        if (containerProp) {\r\n            return $(containerProp)\r\n        }\r\n        if (this._position) {\r\n            return $(isEvent(this._position.of) ? window : this._position.of || window)\r\n        }\r\n    }\r\n    _normalizePosition(positionProp, targetProp) {\r\n        var defaultPositionConfig = {\r\n            of: targetProp,\r\n            boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\r\n        };\r\n        if (isDefined(positionProp)) {\r\n            return extend(true, {}, defaultPositionConfig, this._positionToObject(positionProp))\r\n        } else {\r\n            return defaultPositionConfig\r\n        }\r\n    }\r\n    _positionToObject(position) {\r\n        if (isString(position)) {\r\n            return extend({}, OVERLAY_POSITION_ALIASES[position])\r\n        }\r\n        return position\r\n    }\r\n}\r\nexport {\r\n    OVERLAY_POSITION_ALIASES,\r\n    OverlayPositionController\r\n};\r\n"]},"metadata":{},"sourceType":"module"}