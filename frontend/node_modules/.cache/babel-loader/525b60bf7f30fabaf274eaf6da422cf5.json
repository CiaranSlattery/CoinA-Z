{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test Repo\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import coinGecko from\"../../apis/coinGecko\";import Coin from\"../../IndividualCoin\";import{jsx as _jsx}from\"react/jsx-runtime\";var CoinList=function CoinList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),coins=_useState2[0],setCoins=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.next=3;return coinGecko.get(\"/coins/markets\",{params:{vs_currency:\"usd\",ids:\"bitcoin, ethereum\"}});case 3:response=_context.sent;setCoins(response.data);setIsLoading(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var renderCoins=function renderCoins(){if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(\"ul\",{className:\"coinlist list-group mt-2\",children:coins.map(function(coin){return/*#__PURE__*/_jsx(Coin,{coin:coin},coin.id);})});};return/*#__PURE__*/_jsx(\"div\",{children:renderCoins()});};export default CoinList;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/src/components/pages/CoinList.jsx"],"names":["React","useEffect","useState","coinGecko","Coin","CoinList","coins","setCoins","isLoading","setIsLoading","fetchData","get","params","vs_currency","ids","response","data","renderCoins","map","coin","id"],"mappings":"6bAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eACA,eAAkCL,QAAQ,CAAC,KAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eAEAR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,SAAS,0FAAG,gJACdD,YAAY,CAAC,IAAD,CAAZ,CADc,sBAESN,CAAAA,SAAS,CAACQ,GAAV,CAAc,gBAAd,CAAgC,CACnDC,MAAM,CAAE,CACJC,WAAW,CAAE,KADT,CAEJC,GAAG,CAAE,mBAFD,CAD2C,CAAhC,CAFT,QAERC,QAFQ,eAQdR,QAAQ,CAACQ,QAAQ,CAACC,IAAV,CAAR,CACAP,YAAY,CAAC,KAAD,CAAZ,CATc,sDAAH,kBAATC,CAAAA,SAAS,0CAAf,CAYAA,SAAS,GACZ,CAdQ,CAcP,EAdO,CAAT,CAgBA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAGT,SAAH,CAAc,CACV,mBAAO,mCAAP,CACH,CACD,mBACI,WAAI,SAAS,CAAE,0BAAf,UAEQF,KAAK,CAACY,GAAN,CAAU,SAAAC,IAAI,CAAI,CACd,mBAAO,KAAC,IAAD,EAAoB,IAAI,CAAEA,IAA1B,EAAWA,IAAI,CAACC,EAAhB,CAAP,CACH,CAFD,CAFR,EADJ,CAQH,CAZD,CAcA,mBAAO,qBAAMH,WAAW,EAAjB,EAAP,CACH,CAnCD,CAqCA,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport coinGecko from \"../../apis/coinGecko\";\r\nimport Coin from \"../../IndividualCoin\";\r\n\r\nconst CoinList = () => {\r\n    const [coins, setCoins] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true)\r\n            const response = await coinGecko.get(\"/coins/markets\", {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    ids: \"bitcoin, ethereum\"\r\n                },\r\n            });\r\n            setCoins(response.data)\r\n            setIsLoading(false)\r\n        };\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const renderCoins = () => {\r\n        if(isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <ul className={\"coinlist list-group mt-2\"}>\r\n                {\r\n                    coins.map(coin => {\r\n                        return <Coin key={coin.id} coin={coin}/>;\r\n                    })}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    return <div>{renderCoins()}</div>;\r\n};\r\n\r\nexport default CoinList;"]},"metadata":{},"sourceType":"module"}