{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/component_wrapper/button.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport ValidationEngine from \"../../ui/validation_engine\";\nimport Component from \"./common/component\";\nimport { getImageSourceType } from \"../../core/utils/icon\";\nexport default class ButtonWrapper extends Component {\n  get _validationGroupConfig() {\n    return ValidationEngine.getGroupConfig(this._findGroup());\n  }\n\n  getDefaultTemplateNames() {\n    return [\"content\"];\n  }\n\n  getSupportedKeyNames() {\n    return [\"space\", \"enter\"];\n  }\n\n  getProps() {\n    var props = super.getProps();\n\n    props.onClick = _ref => {\n      var {\n        event: event\n      } = _ref;\n\n      this._clickAction({\n        event: event,\n        validationGroup: this._validationGroupConfig\n      });\n    };\n\n    var iconType = getImageSourceType(props.icon);\n\n    if (\"svg\" === iconType) {\n      props.iconTemplate = this._createTemplateComponent(() => props.icon);\n    }\n\n    return props;\n  }\n\n  get _templatesInfo() {\n    return {\n      template: \"content\"\n    };\n  }\n\n  _toggleActiveState(_, value) {\n    var button = this.viewRef;\n    value ? button.activate() : button.deactivate();\n  }\n\n  _getSubmitAction() {\n    var needValidate = true;\n    var validationStatus = \"valid\";\n    return this._createAction(_ref2 => {\n      var {\n        event: event,\n        submitInput: submitInput\n      } = _ref2;\n\n      if (needValidate) {\n        var validationGroup = this._validationGroupConfig;\n\n        if (void 0 !== validationGroup && \"\" !== validationGroup) {\n          var validationResult = validationGroup.validate();\n          validationStatus = validationResult.status;\n\n          if (\"pending\" === validationResult.status) {\n            needValidate = false;\n            this.option(\"disabled\", true);\n            validationResult.complete.then(_ref3 => {\n              var {\n                status: status\n              } = _ref3;\n              this.option(\"disabled\", false);\n              validationStatus = status;\n              \"valid\" === validationStatus && submitInput.click();\n              needValidate = true;\n            });\n          }\n        }\n      }\n\n      \"valid\" !== validationStatus && event.preventDefault();\n      event.stopPropagation();\n    });\n  }\n\n  _init() {\n    super._init();\n\n    this._addAction(\"onSubmit\", this._getSubmitAction());\n\n    this._clickAction = this._createClickAction();\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    var $content = this.$element().find(\".dx-button-content\");\n    var $template = $content.children().filter(\".dx-template-wrapper\");\n    var $input = $content.children().filter(\".dx-button-submit-input\");\n\n    if ($template.length) {\n      $template.addClass(\"dx-button-content\");\n      $template.append($input);\n      $content.replaceWith($template);\n    }\n  }\n\n  _patchOptionValues(options) {\n    return super._patchOptionValues(_extends({}, options, {\n      templateData: options._templateData\n    }));\n  }\n\n  _findGroup() {\n    var $element = this.$element();\n    var validationGroup = this.option(\"validationGroup\");\n    return void 0 !== validationGroup && \"\" !== validationGroup ? validationGroup : ValidationEngine.findGroup($element, this._modelByElement($element));\n  }\n\n  _createClickAction() {\n    return this._createActionByOption(\"onClick\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _optionChanged(option) {\n    switch (option.name) {\n      case \"onClick\":\n        this._clickAction = this._createClickAction();\n    }\n\n    super._optionChanged(option);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/renovation/component_wrapper/button.js"],"names":["_extends","ValidationEngine","Component","getImageSourceType","ButtonWrapper","_validationGroupConfig","getGroupConfig","_findGroup","getDefaultTemplateNames","getSupportedKeyNames","getProps","props","onClick","_ref","event","_clickAction","validationGroup","iconType","icon","iconTemplate","_createTemplateComponent","_templatesInfo","template","_toggleActiveState","_","value","button","viewRef","activate","deactivate","_getSubmitAction","needValidate","validationStatus","_createAction","_ref2","submitInput","validationResult","validate","status","option","complete","then","_ref3","click","preventDefault","stopPropagation","_init","_addAction","_createClickAction","_initMarkup","$content","$element","find","$template","children","filter","$input","length","addClass","append","replaceWith","_patchOptionValues","options","templateData","_templateData","findGroup","_modelByElement","_createActionByOption","excludeValidators","_optionChanged","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SACIC,kBADJ,QAEO,uBAFP;AAGA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACvB,MAAtBG,sBAAsB,GAAG;AACzB,WAAOJ,gBAAgB,CAACK,cAAjB,CAAgC,KAAKC,UAAL,EAAhC,CAAP;AACH;;AACDC,EAAAA,uBAAuB,GAAG;AACtB,WAAO,CAAC,SAAD,CAAP;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,WAAO,CAAC,OAAD,EAAU,OAAV,CAAP;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,QAAIC,KAAK,GAAG,MAAMD,QAAN,EAAZ;;AACAC,IAAAA,KAAK,CAACC,OAAN,GAAgBC,IAAI,IAAI;AACpB,UAAI;AACAC,QAAAA,KAAK,EAAEA;AADP,UAEAD,IAFJ;;AAGA,WAAKE,YAAL,CAAkB;AACdD,QAAAA,KAAK,EAAEA,KADO;AAEdE,QAAAA,eAAe,EAAE,KAAKX;AAFR,OAAlB;AAIH,KARD;;AASA,QAAIY,QAAQ,GAAGd,kBAAkB,CAACQ,KAAK,CAACO,IAAP,CAAjC;;AACA,QAAI,UAAUD,QAAd,EAAwB;AACpBN,MAAAA,KAAK,CAACQ,YAAN,GAAqB,KAAKC,wBAAL,CAA8B,MAAMT,KAAK,CAACO,IAA1C,CAArB;AACH;;AACD,WAAOP,KAAP;AACH;;AACiB,MAAdU,cAAc,GAAG;AACjB,WAAO;AACHC,MAAAA,QAAQ,EAAE;AADP,KAAP;AAGH;;AACDC,EAAAA,kBAAkB,CAACC,CAAD,EAAIC,KAAJ,EAAW;AACzB,QAAIC,MAAM,GAAG,KAAKC,OAAlB;AACAF,IAAAA,KAAK,GAAGC,MAAM,CAACE,QAAP,EAAH,GAAuBF,MAAM,CAACG,UAAP,EAA5B;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,gBAAgB,GAAG,OAAvB;AACA,WAAO,KAAKC,aAAL,CAAmBC,KAAK,IAAI;AAC/B,UAAI;AACApB,QAAAA,KAAK,EAAEA,KADP;AAEAqB,QAAAA,WAAW,EAAEA;AAFb,UAGAD,KAHJ;;AAIA,UAAIH,YAAJ,EAAkB;AACd,YAAIf,eAAe,GAAG,KAAKX,sBAA3B;;AACA,YAAI,KAAK,CAAL,KAAWW,eAAX,IAA8B,OAAOA,eAAzC,EAA0D;AACtD,cAAIoB,gBAAgB,GAAGpB,eAAe,CAACqB,QAAhB,EAAvB;AACAL,UAAAA,gBAAgB,GAAGI,gBAAgB,CAACE,MAApC;;AACA,cAAI,cAAcF,gBAAgB,CAACE,MAAnC,EAA2C;AACvCP,YAAAA,YAAY,GAAG,KAAf;AACA,iBAAKQ,MAAL,CAAY,UAAZ,EAAwB,IAAxB;AACAH,YAAAA,gBAAgB,CAACI,QAAjB,CAA0BC,IAA1B,CAA+BC,KAAK,IAAI;AACpC,kBAAI;AACAJ,gBAAAA,MAAM,EAAEA;AADR,kBAEAI,KAFJ;AAGA,mBAAKH,MAAL,CAAY,UAAZ,EAAwB,KAAxB;AACAP,cAAAA,gBAAgB,GAAGM,MAAnB;AACA,0BAAYN,gBAAZ,IAAgCG,WAAW,CAACQ,KAAZ,EAAhC;AACAZ,cAAAA,YAAY,GAAG,IAAf;AACH,aARD;AASH;AACJ;AACJ;;AACD,kBAAYC,gBAAZ,IAAgClB,KAAK,CAAC8B,cAAN,EAAhC;AACA9B,MAAAA,KAAK,CAAC+B,eAAN;AACH,KA3BM,CAAP;AA4BH;;AACDC,EAAAA,KAAK,GAAG;AACJ,UAAMA,KAAN;;AACA,SAAKC,UAAL,CAAgB,UAAhB,EAA4B,KAAKjB,gBAAL,EAA5B;;AACA,SAAKf,YAAL,GAAoB,KAAKiC,kBAAL,EAApB;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,UAAMA,WAAN;;AACA,QAAIC,QAAQ,GAAG,KAAKC,QAAL,GAAgBC,IAAhB,CAAqB,oBAArB,CAAf;AACA,QAAIC,SAAS,GAAGH,QAAQ,CAACI,QAAT,GAAoBC,MAApB,CAA2B,sBAA3B,CAAhB;AACA,QAAIC,MAAM,GAAGN,QAAQ,CAACI,QAAT,GAAoBC,MAApB,CAA2B,yBAA3B,CAAb;;AACA,QAAIF,SAAS,CAACI,MAAd,EAAsB;AAClBJ,MAAAA,SAAS,CAACK,QAAV,CAAmB,mBAAnB;AACAL,MAAAA,SAAS,CAACM,MAAV,CAAiBH,MAAjB;AACAN,MAAAA,QAAQ,CAACU,WAAT,CAAqBP,SAArB;AACH;AACJ;;AACDQ,EAAAA,kBAAkB,CAACC,OAAD,EAAU;AACxB,WAAO,MAAMD,kBAAN,CAAyB7D,QAAQ,CAAC,EAAD,EAAK8D,OAAL,EAAc;AAClDC,MAAAA,YAAY,EAAED,OAAO,CAACE;AAD4B,KAAd,CAAjC,CAAP;AAGH;;AACDzD,EAAAA,UAAU,GAAG;AACT,QAAI4C,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA,QAAInC,eAAe,GAAG,KAAKuB,MAAL,CAAY,iBAAZ,CAAtB;AACA,WAAO,KAAK,CAAL,KAAWvB,eAAX,IAA8B,OAAOA,eAArC,GAAuDA,eAAvD,GAAyEf,gBAAgB,CAACgE,SAAjB,CAA2Bd,QAA3B,EAAqC,KAAKe,eAAL,CAAqBf,QAArB,CAArC,CAAhF;AACH;;AACDH,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKmB,qBAAL,CAA2B,SAA3B,EAAsC;AACzCC,MAAAA,iBAAiB,EAAE,CAAC,UAAD;AADsB,KAAtC,CAAP;AAGH;;AACDC,EAAAA,cAAc,CAAC9B,MAAD,EAAS;AACnB,YAAQA,MAAM,CAAC+B,IAAf;AACI,WAAK,SAAL;AACI,aAAKvD,YAAL,GAAoB,KAAKiC,kBAAL,EAApB;AAFR;;AAIA,UAAMqB,cAAN,CAAqB9B,MAArB;AACH;;AAzGgD","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/component_wrapper/button.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport ValidationEngine from \"../../ui/validation_engine\";\r\nimport Component from \"./common/component\";\r\nimport {\r\n    getImageSourceType\r\n} from \"../../core/utils/icon\";\r\nexport default class ButtonWrapper extends Component {\r\n    get _validationGroupConfig() {\r\n        return ValidationEngine.getGroupConfig(this._findGroup())\r\n    }\r\n    getDefaultTemplateNames() {\r\n        return [\"content\"]\r\n    }\r\n    getSupportedKeyNames() {\r\n        return [\"space\", \"enter\"]\r\n    }\r\n    getProps() {\r\n        var props = super.getProps();\r\n        props.onClick = _ref => {\r\n            var {\r\n                event: event\r\n            } = _ref;\r\n            this._clickAction({\r\n                event: event,\r\n                validationGroup: this._validationGroupConfig\r\n            })\r\n        };\r\n        var iconType = getImageSourceType(props.icon);\r\n        if (\"svg\" === iconType) {\r\n            props.iconTemplate = this._createTemplateComponent(() => props.icon)\r\n        }\r\n        return props\r\n    }\r\n    get _templatesInfo() {\r\n        return {\r\n            template: \"content\"\r\n        }\r\n    }\r\n    _toggleActiveState(_, value) {\r\n        var button = this.viewRef;\r\n        value ? button.activate() : button.deactivate()\r\n    }\r\n    _getSubmitAction() {\r\n        var needValidate = true;\r\n        var validationStatus = \"valid\";\r\n        return this._createAction(_ref2 => {\r\n            var {\r\n                event: event,\r\n                submitInput: submitInput\r\n            } = _ref2;\r\n            if (needValidate) {\r\n                var validationGroup = this._validationGroupConfig;\r\n                if (void 0 !== validationGroup && \"\" !== validationGroup) {\r\n                    var validationResult = validationGroup.validate();\r\n                    validationStatus = validationResult.status;\r\n                    if (\"pending\" === validationResult.status) {\r\n                        needValidate = false;\r\n                        this.option(\"disabled\", true);\r\n                        validationResult.complete.then(_ref3 => {\r\n                            var {\r\n                                status: status\r\n                            } = _ref3;\r\n                            this.option(\"disabled\", false);\r\n                            validationStatus = status;\r\n                            \"valid\" === validationStatus && submitInput.click();\r\n                            needValidate = true\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \"valid\" !== validationStatus && event.preventDefault();\r\n            event.stopPropagation()\r\n        })\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._addAction(\"onSubmit\", this._getSubmitAction());\r\n        this._clickAction = this._createClickAction()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        var $content = this.$element().find(\".dx-button-content\");\r\n        var $template = $content.children().filter(\".dx-template-wrapper\");\r\n        var $input = $content.children().filter(\".dx-button-submit-input\");\r\n        if ($template.length) {\r\n            $template.addClass(\"dx-button-content\");\r\n            $template.append($input);\r\n            $content.replaceWith($template)\r\n        }\r\n    }\r\n    _patchOptionValues(options) {\r\n        return super._patchOptionValues(_extends({}, options, {\r\n            templateData: options._templateData\r\n        }))\r\n    }\r\n    _findGroup() {\r\n        var $element = this.$element();\r\n        var validationGroup = this.option(\"validationGroup\");\r\n        return void 0 !== validationGroup && \"\" !== validationGroup ? validationGroup : ValidationEngine.findGroup($element, this._modelByElement($element))\r\n    }\r\n    _createClickAction() {\r\n        return this._createActionByOption(\"onClick\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _optionChanged(option) {\r\n        switch (option.name) {\r\n            case \"onClick\":\r\n                this._clickAction = this._createClickAction()\r\n        }\r\n        super._optionChanged(option)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}