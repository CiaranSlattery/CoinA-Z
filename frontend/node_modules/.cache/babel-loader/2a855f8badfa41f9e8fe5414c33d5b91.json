{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/custom.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport TextEditorButton from \"./button\";\nimport Button from \"../../button\";\nimport { extend } from \"../../../core/utils/extend\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { start, end } from \"../../../events/hover\";\nimport { name as clickEventName } from \"../../../events/click\";\nvar CUSTOM_BUTTON_HOVERED_CLASS = \"dx-custom-button-hovered\";\nexport default class CustomButton extends TextEditorButton {\n  _attachEvents(instance, $element) {\n    var {\n      editor: editor\n    } = this;\n    eventsEngine.on($element, start, () => {\n      editor.$element().addClass(CUSTOM_BUTTON_HOVERED_CLASS);\n    });\n    eventsEngine.on($element, end, () => {\n      editor.$element().removeClass(CUSTOM_BUTTON_HOVERED_CLASS);\n    });\n    eventsEngine.on($element, clickEventName, e => {\n      e.stopPropagation();\n    });\n  }\n\n  _create() {\n    var {\n      editor: editor\n    } = this;\n    var $element = $(\"<div>\");\n\n    this._addToContainer($element);\n\n    var instance = editor._createComponent($element, Button, extend({}, this.options, {\n      ignoreParentReadOnly: true,\n      disabled: this._isDisabled(),\n      integrationOptions: this._prepareIntegrationOptions(editor)\n    }));\n\n    return {\n      $element: $element,\n      instance: instance\n    };\n  }\n\n  _prepareIntegrationOptions(editor) {\n    return extend({}, editor.option(\"integrationOptions\"), {\n      skipTemplates: [\"content\"]\n    });\n  }\n\n  update() {\n    var isUpdated = super.update();\n\n    if (this.instance) {\n      this.instance.option(\"disabled\", this._isDisabled());\n    }\n\n    return isUpdated;\n  }\n\n  _isVisible() {\n    var {\n      editor: editor\n    } = this;\n    return editor.option(\"visible\");\n  }\n\n  _isDisabled() {\n    var isDefinedByUser = void 0 !== this.options.disabled;\n\n    if (isDefinedByUser) {\n      return this.instance ? this.instance.option(\"disabled\") : this.options.disabled;\n    } else {\n      return this.editor.option(\"readOnly\");\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/ui/text_box/texteditor_button_collection/custom.js"],"names":["$","TextEditorButton","Button","extend","eventsEngine","start","end","name","clickEventName","CUSTOM_BUTTON_HOVERED_CLASS","CustomButton","_attachEvents","instance","$element","editor","on","addClass","removeClass","e","stopPropagation","_create","_addToContainer","_createComponent","options","ignoreParentReadOnly","disabled","_isDisabled","integrationOptions","_prepareIntegrationOptions","option","skipTemplates","update","isUpdated","_isVisible","isDefinedByUser"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/custom.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nimport TextEditorButton from \"./button\";\r\nimport Button from \"../../button\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    start,\r\n    end\r\n} from \"../../../events/hover\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../events/click\";\r\nvar CUSTOM_BUTTON_HOVERED_CLASS = \"dx-custom-button-hovered\";\r\nexport default class CustomButton extends TextEditorButton {\r\n    _attachEvents(instance, $element) {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        eventsEngine.on($element, start, () => {\r\n            editor.$element().addClass(CUSTOM_BUTTON_HOVERED_CLASS)\r\n        });\r\n        eventsEngine.on($element, end, () => {\r\n            editor.$element().removeClass(CUSTOM_BUTTON_HOVERED_CLASS)\r\n        });\r\n        eventsEngine.on($element, clickEventName, e => {\r\n            e.stopPropagation()\r\n        })\r\n    }\r\n    _create() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var $element = $(\"<div>\");\r\n        this._addToContainer($element);\r\n        var instance = editor._createComponent($element, Button, extend({}, this.options, {\r\n            ignoreParentReadOnly: true,\r\n            disabled: this._isDisabled(),\r\n            integrationOptions: this._prepareIntegrationOptions(editor)\r\n        }));\r\n        return {\r\n            $element: $element,\r\n            instance: instance\r\n        }\r\n    }\r\n    _prepareIntegrationOptions(editor) {\r\n        return extend({}, editor.option(\"integrationOptions\"), {\r\n            skipTemplates: [\"content\"]\r\n        })\r\n    }\r\n    update() {\r\n        var isUpdated = super.update();\r\n        if (this.instance) {\r\n            this.instance.option(\"disabled\", this._isDisabled())\r\n        }\r\n        return isUpdated\r\n    }\r\n    _isVisible() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        return editor.option(\"visible\")\r\n    }\r\n    _isDisabled() {\r\n        var isDefinedByUser = void 0 !== this.options.disabled;\r\n        if (isDefinedByUser) {\r\n            return this.instance ? this.instance.option(\"disabled\") : this.options.disabled\r\n        } else {\r\n            return this.editor.option(\"readOnly\")\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}