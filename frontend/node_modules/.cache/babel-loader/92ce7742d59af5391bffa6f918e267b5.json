{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/utils/add_namespace.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport errors from \"../../core/errors\";\n\nvar addNamespace = (eventNames, namespace) => {\n  if (!namespace) {\n    throw errors.Error(\"E0017\");\n  }\n\n  if (Array.isArray(eventNames)) {\n    return eventNames.map(eventName => addNamespace(eventName, namespace)).join(\" \");\n  }\n\n  if (-1 !== eventNames.indexOf(\" \")) {\n    return addNamespace(eventNames.split(/\\s+/g), namespace);\n  }\n\n  return \"\".concat(eventNames, \".\").concat(namespace);\n};\n\nexport default addNamespace;","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test Repo/frontend/node_modules/devextreme/esm/events/utils/add_namespace.js"],"names":["errors","addNamespace","eventNames","namespace","Error","Array","isArray","map","eventName","join","indexOf","split","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,mBAAnB;;AACA,IAAIC,YAAY,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AAC1C,MAAI,CAACA,SAAL,EAAgB;AACZ,UAAMH,MAAM,CAACI,KAAP,CAAa,OAAb,CAAN;AACH;;AACD,MAAIC,KAAK,CAACC,OAAN,CAAcJ,UAAd,CAAJ,EAA+B;AAC3B,WAAOA,UAAU,CAACK,GAAX,CAAeC,SAAS,IAAIP,YAAY,CAACO,SAAD,EAAYL,SAAZ,CAAxC,EAAgEM,IAAhE,CAAqE,GAArE,CAAP;AACH;;AACD,MAAI,CAAC,CAAD,KAAOP,UAAU,CAACQ,OAAX,CAAmB,GAAnB,CAAX,EAAoC;AAChC,WAAOT,YAAY,CAACC,UAAU,CAACS,KAAX,CAAiB,MAAjB,CAAD,EAA2BR,SAA3B,CAAnB;AACH;;AACD,SAAO,GAAGS,MAAH,CAAUV,UAAV,EAAsB,GAAtB,EAA2BU,MAA3B,CAAkCT,SAAlC,CAAP;AACH,CAXD;;AAYA,eAAeF,YAAf","sourcesContent":["/**\r\n * DevExtreme (esm/events/utils/add_namespace.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport errors from \"../../core/errors\";\r\nvar addNamespace = (eventNames, namespace) => {\r\n    if (!namespace) {\r\n        throw errors.Error(\"E0017\")\r\n    }\r\n    if (Array.isArray(eventNames)) {\r\n        return eventNames.map(eventName => addNamespace(eventName, namespace)).join(\" \")\r\n    }\r\n    if (-1 !== eventNames.indexOf(\" \")) {\r\n        return addNamespace(eventNames.split(/\\s+/g), namespace)\r\n    }\r\n    return \"\".concat(eventNames, \".\").concat(namespace)\r\n};\r\nexport default addNamespace;\r\n"]},"metadata":{},"sourceType":"module"}