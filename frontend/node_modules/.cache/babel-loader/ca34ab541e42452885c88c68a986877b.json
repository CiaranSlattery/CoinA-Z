{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ciara\\\\OneDrive - GMIT\\\\Coin A-Z Test\\\\frontend\\\\src\\\\components\\\\pages\\\\CoinList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport coinGecko from \"../../apis/coinGecko\";\nimport Coin from \"../../IndividualCoin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoinList = () => {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await coinGecko.get(\"/coins/markets\", {\n        params: {\n          vs_currency: \"usd\",\n          ids: \"bitcoin, ethereum\"\n        }\n      });\n      setCoins(response.data);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const renderCoins = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"coinlist list-group mt-2\",\n      children: coins.map(coin => {\n        return /*#__PURE__*/_jsxDEV(Coin, {\n          coin: coin\n        }, coin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderCoins()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CoinList, \"pTIs2nH1Cjhd6TQPyVc+69GCZbk=\");\n\n_c = CoinList;\nexport default CoinList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinList\");","map":{"version":3,"sources":["C:/Users/ciara/OneDrive - GMIT/Coin A-Z Test/frontend/src/components/pages/CoinList.jsx"],"names":["React","useEffect","useState","coinGecko","Coin","CoinList","coins","setCoins","isLoading","setIsLoading","fetchData","response","get","params","vs_currency","ids","data","renderCoins","map","coin","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,YAAY;AAC1BD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAME,QAAQ,GAAG,MAAMR,SAAS,CAACS,GAAV,CAAc,gBAAd,EAAgC;AACnDC,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAE,KADT;AAEJC,UAAAA,GAAG,EAAE;AAFD;AAD2C,OAAhC,CAAvB;AAMAR,MAAAA,QAAQ,CAACI,QAAQ,CAACK,IAAV,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAVD;;AAYAC,IAAAA,SAAS;AACZ,GAdQ,EAcP,EAdO,CAAT;;AAgBA,QAAMO,WAAW,GAAG,MAAM;AACtB,QAAGT,SAAH,EAAc;AACV,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAI,MAAA,SAAS,EAAE,0BAAf;AAAA,gBAEQF,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI;AACd,4BAAO,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA;AAA1B,WAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GAZD;;AAcA,sBAAO;AAAA,cAAMH,WAAW;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAnCD;;GAAMZ,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport coinGecko from \"../../apis/coinGecko\";\r\nimport Coin from \"../../IndividualCoin\";\r\n\r\nconst CoinList = () => {\r\n    const [coins, setCoins] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true)\r\n            const response = await coinGecko.get(\"/coins/markets\", {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    ids: \"bitcoin, ethereum\"\r\n                },\r\n            });\r\n            setCoins(response.data)\r\n            setIsLoading(false)\r\n        };\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const renderCoins = () => {\r\n        if(isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <ul className={\"coinlist list-group mt-2\"}>\r\n                {\r\n                    coins.map(coin => {\r\n                        return <Coin key={coin.id} coin={coin}/>;\r\n                    })}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    return <div>{renderCoins()}</div>;\r\n};\r\n\r\nexport default CoinList;"]},"metadata":{},"sourceType":"module"}