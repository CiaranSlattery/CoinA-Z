/*!
 * devextreme-react
 * Version: 21.2.5
 * Build date: Mon Jan 17 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
export { ExplicitTypes } from "devextreme/ui/action_sheet";
import dxActionSheet, { Properties } from "devextreme/ui/action_sheet";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
interface IActionSheetOptions<TItem = any, TKey = any> extends Properties<TItem, TKey>, IHtmlOptions {
    dataSource?: Properties<TItem, TKey>["dataSource"];
    itemRender?: (...params: any) => React.ReactNode;
    itemComponent?: React.ComponentType<any>;
    itemKeyFn?: (data: any) => string;
    defaultItems?: any;
    defaultVisible?: any;
    onItemsChange?: (value: any) => void;
    onVisibleChange?: (value: any) => void;
}
declare class ActionSheet<TItem = any, TKey = any> extends BaseComponent<IActionSheetOptions<TItem, TKey>> {
    get instance(): dxActionSheet<TItem, TKey>;
    protected _WidgetClass: typeof dxActionSheet;
    protected subscribableOptions: string[];
    protected independentEvents: string[];
    protected _defaults: {
        defaultItems: string;
        defaultVisible: string;
    };
    protected _expectedChildren: {
        item: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
    protected _templateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
interface IItemProps {
    disabled?: any;
    html?: any;
    icon?: any;
    onClick?: any;
    stylingMode?: any;
    template?: any;
    text?: any;
    type?: any;
    visible?: any;
    render?: (...params: any) => React.ReactNode;
    component?: React.ComponentType<any>;
    keyFn?: (data: any) => string;
}
declare class Item extends NestedOption<IItemProps> {
    static OptionName: string;
    static IsCollectionItem: boolean;
    static TemplateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
export default ActionSheet;
export { ActionSheet, IActionSheetOptions, Item, IItemProps };
